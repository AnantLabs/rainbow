//--- File Header ---  2/4/2008 1:54:10 AM  ---  DB Schema:  2.2.1  ----------------------------------------------------
// <auto-generated>
//     
//     DateTime: 2/4/2008 1:54:10 AM                    Project: Rainbow
//     
//     By 'SqlTac' by Caber Computing, Inc.  http://www.CaberComputing.com 
//     
//         SqlTac Version: 0.104.57.0                      SqlMetal Version: 3.5.21022.8 (Runtime Version:2.0.50727.1433)
//     
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//     
// </auto-generated>
//----------------------------------------------------------------------------------------------------------------------------


namespace Rainbow.Framework.Data.MsSql

{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
  /// <summary>
  ///   
  /// </summary>
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Rainbow")]
	public partial class RainbowDataContext : System.Data.Linq.DataContext
	
  {
		
    #region Member(s)
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspnet_Application(Aspnet_Application instance);
    partial void UpdateAspnet_Application(Aspnet_Application instance);
    partial void DeleteAspnet_Application(Aspnet_Application instance);
    partial void InsertAspnet_Membership(Aspnet_Membership instance);
    partial void UpdateAspnet_Membership(Aspnet_Membership instance);
    partial void DeleteAspnet_Membership(Aspnet_Membership instance);
    partial void InsertAspnet_Path(Aspnet_Path instance);
    partial void UpdateAspnet_Path(Aspnet_Path instance);
    partial void DeleteAspnet_Path(Aspnet_Path instance);
    partial void InsertAspnet_PersonalizationAllUser(Aspnet_PersonalizationAllUser instance);
    partial void UpdateAspnet_PersonalizationAllUser(Aspnet_PersonalizationAllUser instance);
    partial void DeleteAspnet_PersonalizationAllUser(Aspnet_PersonalizationAllUser instance);
    partial void InsertAspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser instance);
    partial void UpdateAspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser instance);
    partial void DeleteAspnet_PersonalizationPerUser(Aspnet_PersonalizationPerUser instance);
    partial void InsertAspnet_Profile(Aspnet_Profile instance);
    partial void UpdateAspnet_Profile(Aspnet_Profile instance);
    partial void DeleteAspnet_Profile(Aspnet_Profile instance);
    partial void InsertAspnet_Role(Aspnet_Role instance);
    partial void UpdateAspnet_Role(Aspnet_Role instance);
    partial void DeleteAspnet_Role(Aspnet_Role instance);
    partial void InsertAspnet_SchemaVersion(Aspnet_SchemaVersion instance);
    partial void UpdateAspnet_SchemaVersion(Aspnet_SchemaVersion instance);
    partial void DeleteAspnet_SchemaVersion(Aspnet_SchemaVersion instance);
    partial void InsertAspNet_SqlCacheTablesForChangeNotification(AspNet_SqlCacheTablesForChangeNotification instance);
    partial void UpdateAspNet_SqlCacheTablesForChangeNotification(AspNet_SqlCacheTablesForChangeNotification instance);
    partial void DeleteAspNet_SqlCacheTablesForChangeNotification(AspNet_SqlCacheTablesForChangeNotification instance);
    partial void InsertAspnet_User(Aspnet_User instance);
    partial void UpdateAspnet_User(Aspnet_User instance);
    partial void DeleteAspnet_User(Aspnet_User instance);
    partial void InsertAspnet_UsersInRole(Aspnet_UsersInRole instance);
    partial void UpdateAspnet_UsersInRole(Aspnet_UsersInRole instance);
    partial void DeleteAspnet_UsersInRole(Aspnet_UsersInRole instance);
    partial void InsertAspnet_WebEvent_Event(Aspnet_WebEvent_Event instance);
    partial void UpdateAspnet_WebEvent_Event(Aspnet_WebEvent_Event instance);
    partial void DeleteAspnet_WebEvent_Event(Aspnet_WebEvent_Event instance);
    partial void InsertRb_Announcement(Rb_Announcement instance);
    partial void UpdateRb_Announcement(Rb_Announcement instance);
    partial void DeleteRb_Announcement(Rb_Announcement instance);
    partial void InsertRb_Announcements_st(Rb_Announcements_st instance);
    partial void UpdateRb_Announcements_st(Rb_Announcements_st instance);
    partial void DeleteRb_Announcements_st(Rb_Announcements_st instance);
    partial void InsertRb_Article(Rb_Article instance);
    partial void UpdateRb_Article(Rb_Article instance);
    partial void DeleteRb_Article(Rb_Article instance);
    partial void InsertRb_Articles_st(Rb_Articles_st instance);
    partial void UpdateRb_Articles_st(Rb_Articles_st instance);
    partial void DeleteRb_Articles_st(Rb_Articles_st instance);
    partial void InsertRb_BaseSetting(Rb_BaseSetting instance);
    partial void UpdateRb_BaseSetting(Rb_BaseSetting instance);
    partial void DeleteRb_BaseSetting(Rb_BaseSetting instance);
    partial void InsertRb_BaseSettingType(Rb_BaseSettingType instance);
    partial void UpdateRb_BaseSettingType(Rb_BaseSettingType instance);
    partial void DeleteRb_BaseSettingType(Rb_BaseSettingType instance);
    partial void InsertRb_BlackList(Rb_BlackList instance);
    partial void UpdateRb_BlackList(Rb_BlackList instance);
    partial void DeleteRb_BlackList(Rb_BlackList instance);
    partial void InsertRb_BlogComment(Rb_BlogComment instance);
    partial void UpdateRb_BlogComment(Rb_BlogComment instance);
    partial void DeleteRb_BlogComment(Rb_BlogComment instance);
    partial void InsertRb_Blog(Rb_Blog instance);
    partial void UpdateRb_Blog(Rb_Blog instance);
    partial void DeleteRb_Blog(Rb_Blog instance);
    partial void InsertRb_BlogStat(Rb_BlogStat instance);
    partial void UpdateRb_BlogStat(Rb_BlogStat instance);
    partial void DeleteRb_BlogStat(Rb_BlogStat instance);
    partial void InsertRb_BookList(Rb_BookList instance);
    partial void UpdateRb_BookList(Rb_BookList instance);
    partial void DeleteRb_BookList(Rb_BookList instance);
    partial void InsertRb_Cart(Rb_Cart instance);
    partial void UpdateRb_Cart(Rb_Cart instance);
    partial void DeleteRb_Cart(Rb_Cart instance);
    partial void InsertRb_ComponentModule(Rb_ComponentModule instance);
    partial void UpdateRb_ComponentModule(Rb_ComponentModule instance);
    partial void DeleteRb_ComponentModule(Rb_ComponentModule instance);
    partial void InsertRb_Contact(Rb_Contact instance);
    partial void UpdateRb_Contact(Rb_Contact instance);
    partial void DeleteRb_Contact(Rb_Contact instance);
    partial void InsertRb_Contacts_st(Rb_Contacts_st instance);
    partial void UpdateRb_Contacts_st(Rb_Contacts_st instance);
    partial void DeleteRb_Contacts_st(Rb_Contacts_st instance);
    partial void InsertRb_ContentManager(Rb_ContentManager instance);
    partial void UpdateRb_ContentManager(Rb_ContentManager instance);
    partial void DeleteRb_ContentManager(Rb_ContentManager instance);
    partial void InsertRb_Country(Rb_Country instance);
    partial void UpdateRb_Country(Rb_Country instance);
    partial void DeleteRb_Country(Rb_Country instance);
    partial void InsertRb_Culture(Rb_Culture instance);
    partial void UpdateRb_Culture(Rb_Culture instance);
    partial void DeleteRb_Culture(Rb_Culture instance);
    partial void InsertRb_Discussion(Rb_Discussion instance);
    partial void UpdateRb_Discussion(Rb_Discussion instance);
    partial void DeleteRb_Discussion(Rb_Discussion instance);
    partial void InsertRb_Document(Rb_Document instance);
    partial void UpdateRb_Document(Rb_Document instance);
    partial void DeleteRb_Document(Rb_Document instance);
    partial void InsertRb_Documents_st(Rb_Documents_st instance);
    partial void UpdateRb_Documents_st(Rb_Documents_st instance);
    partial void DeleteRb_Documents_st(Rb_Documents_st instance);
    partial void InsertRb_EcommerceMerchant(Rb_EcommerceMerchant instance);
    partial void UpdateRb_EcommerceMerchant(Rb_EcommerceMerchant instance);
    partial void DeleteRb_EcommerceMerchant(Rb_EcommerceMerchant instance);
    partial void InsertRb_EnhancedHtml(Rb_EnhancedHtml instance);
    partial void UpdateRb_EnhancedHtml(Rb_EnhancedHtml instance);
    partial void DeleteRb_EnhancedHtml(Rb_EnhancedHtml instance);
    partial void InsertRb_EnhancedHtml_st(Rb_EnhancedHtml_st instance);
    partial void UpdateRb_EnhancedHtml_st(Rb_EnhancedHtml_st instance);
    partial void DeleteRb_EnhancedHtml_st(Rb_EnhancedHtml_st instance);
    partial void InsertRb_EnhancedLink(Rb_EnhancedLink instance);
    partial void UpdateRb_EnhancedLink(Rb_EnhancedLink instance);
    partial void DeleteRb_EnhancedLink(Rb_EnhancedLink instance);
    partial void InsertRb_EnhancedLinks_st(Rb_EnhancedLinks_st instance);
    partial void UpdateRb_EnhancedLinks_st(Rb_EnhancedLinks_st instance);
    partial void DeleteRb_EnhancedLinks_st(Rb_EnhancedLinks_st instance);
    partial void InsertRb_Event(Rb_Event instance);
    partial void UpdateRb_Event(Rb_Event instance);
    partial void DeleteRb_Event(Rb_Event instance);
    partial void InsertRb_Events_st(Rb_Events_st instance);
    partial void UpdateRb_Events_st(Rb_Events_st instance);
    partial void DeleteRb_Events_st(Rb_Events_st instance);
    partial void InsertRb_FAQ(Rb_FAQ instance);
    partial void UpdateRb_FAQ(Rb_FAQ instance);
    partial void DeleteRb_FAQ(Rb_FAQ instance);
    partial void InsertRb_GeneralModuleDefinition(Rb_GeneralModuleDefinition instance);
    partial void UpdateRb_GeneralModuleDefinition(Rb_GeneralModuleDefinition instance);
    partial void DeleteRb_GeneralModuleDefinition(Rb_GeneralModuleDefinition instance);
    partial void InsertRb_HtmlText(Rb_HtmlText instance);
    partial void UpdateRb_HtmlText(Rb_HtmlText instance);
    partial void DeleteRb_HtmlText(Rb_HtmlText instance);
    partial void InsertRb_HtmlText_st(Rb_HtmlText_st instance);
    partial void UpdateRb_HtmlText_st(Rb_HtmlText_st instance);
    partial void DeleteRb_HtmlText_st(Rb_HtmlText_st instance);
    partial void InsertRb_Link(Rb_Link instance);
    partial void UpdateRb_Link(Rb_Link instance);
    partial void DeleteRb_Link(Rb_Link instance);
    partial void InsertRb_Links_st(Rb_Links_st instance);
    partial void UpdateRb_Links_st(Rb_Links_st instance);
    partial void DeleteRb_Links_st(Rb_Links_st instance);
    partial void InsertRb_Localize(Rb_Localize instance);
    partial void UpdateRb_Localize(Rb_Localize instance);
    partial void DeleteRb_Localize(Rb_Localize instance);
    partial void InsertRb_Milestone(Rb_Milestone instance);
    partial void UpdateRb_Milestone(Rb_Milestone instance);
    partial void DeleteRb_Milestone(Rb_Milestone instance);
    partial void InsertRb_Milestones_st(Rb_Milestones_st instance);
    partial void UpdateRb_Milestones_st(Rb_Milestones_st instance);
    partial void DeleteRb_Milestones_st(Rb_Milestones_st instance);
    partial void InsertRb_ModuleDefinition(Rb_ModuleDefinition instance);
    partial void UpdateRb_ModuleDefinition(Rb_ModuleDefinition instance);
    partial void DeleteRb_ModuleDefinition(Rb_ModuleDefinition instance);
    partial void InsertRb_Module(Rb_Module instance);
    partial void UpdateRb_Module(Rb_Module instance);
    partial void DeleteRb_Module(Rb_Module instance);
    partial void InsertRb_ModuleSetting(Rb_ModuleSetting instance);
    partial void UpdateRb_ModuleSetting(Rb_ModuleSetting instance);
    partial void DeleteRb_ModuleSetting(Rb_ModuleSetting instance);
    partial void InsertRb_ModuleUserSetting(Rb_ModuleUserSetting instance);
    partial void UpdateRb_ModuleUserSetting(Rb_ModuleUserSetting instance);
    partial void DeleteRb_ModuleUserSetting(Rb_ModuleUserSetting instance);
    partial void InsertRb_Monitoring(Rb_Monitoring instance);
    partial void UpdateRb_Monitoring(Rb_Monitoring instance);
    partial void DeleteRb_Monitoring(Rb_Monitoring instance);
    partial void InsertRb_ObjectType(Rb_ObjectType instance);
    partial void UpdateRb_ObjectType(Rb_ObjectType instance);
    partial void DeleteRb_ObjectType(Rb_ObjectType instance);
    partial void InsertRb_OrderDetail(Rb_OrderDetail instance);
    partial void UpdateRb_OrderDetail(Rb_OrderDetail instance);
    partial void DeleteRb_OrderDetail(Rb_OrderDetail instance);
    partial void InsertRb_Order(Rb_Order instance);
    partial void UpdateRb_Order(Rb_Order instance);
    partial void DeleteRb_Order(Rb_Order instance);
    partial void InsertRb_Page(Rb_Page instance);
    partial void UpdateRb_Page(Rb_Page instance);
    partial void DeleteRb_Page(Rb_Page instance);
    partial void InsertRb_PageSetting(Rb_PageSetting instance);
    partial void UpdateRb_PageSetting(Rb_PageSetting instance);
    partial void DeleteRb_PageSetting(Rb_PageSetting instance);
    partial void InsertRb_PermissionMembership(Rb_PermissionMembership instance);
    partial void UpdateRb_PermissionMembership(Rb_PermissionMembership instance);
    partial void DeleteRb_PermissionMembership(Rb_PermissionMembership instance);
    partial void InsertRb_Permission(Rb_Permission instance);
    partial void UpdateRb_Permission(Rb_Permission instance);
    partial void DeleteRb_Permission(Rb_Permission instance);
    partial void InsertRb_Picture(Rb_Picture instance);
    partial void UpdateRb_Picture(Rb_Picture instance);
    partial void DeleteRb_Picture(Rb_Picture instance);
    partial void InsertRb_Pictures_st(Rb_Pictures_st instance);
    partial void UpdateRb_Pictures_st(Rb_Pictures_st instance);
    partial void DeleteRb_Pictures_st(Rb_Pictures_st instance);
    partial void InsertRb_Portal(Rb_Portal instance);
    partial void UpdateRb_Portal(Rb_Portal instance);
    partial void DeleteRb_Portal(Rb_Portal instance);
    partial void InsertRb_PortalSetting(Rb_PortalSetting instance);
    partial void UpdateRb_PortalSetting(Rb_PortalSetting instance);
    partial void DeleteRb_PortalSetting(Rb_PortalSetting instance);
    partial void InsertRb_Product(Rb_Product instance);
    partial void UpdateRb_Product(Rb_Product instance);
    partial void DeleteRb_Product(Rb_Product instance);
    partial void InsertRb_Products_st(Rb_Products_st instance);
    partial void UpdateRb_Products_st(Rb_Products_st instance);
    partial void DeleteRb_Products_st(Rb_Products_st instance);
    partial void InsertRb_Recycler(Rb_Recycler instance);
    partial void UpdateRb_Recycler(Rb_Recycler instance);
    partial void DeleteRb_Recycler(Rb_Recycler instance);
    partial void InsertRb_Role(Rb_Role instance);
    partial void UpdateRb_Role(Rb_Role instance);
    partial void DeleteRb_Role(Rb_Role instance);
    partial void InsertRb_SettingGroup(Rb_SettingGroup instance);
    partial void UpdateRb_SettingGroup(Rb_SettingGroup instance);
    partial void DeleteRb_SettingGroup(Rb_SettingGroup instance);
    partial void InsertRb_ShipPrice(Rb_ShipPrice instance);
    partial void UpdateRb_ShipPrice(Rb_ShipPrice instance);
    partial void DeleteRb_ShipPrice(Rb_ShipPrice instance);
    partial void InsertRb_ShipZone(Rb_ShipZone instance);
    partial void UpdateRb_ShipZone(Rb_ShipZone instance);
    partial void DeleteRb_ShipZone(Rb_ShipZone instance);
    partial void InsertRb_SolutionModuleDefinition(Rb_SolutionModuleDefinition instance);
    partial void UpdateRb_SolutionModuleDefinition(Rb_SolutionModuleDefinition instance);
    partial void DeleteRb_SolutionModuleDefinition(Rb_SolutionModuleDefinition instance);
    partial void InsertRb_Solution(Rb_Solution instance);
    partial void UpdateRb_Solution(Rb_Solution instance);
    partial void DeleteRb_Solution(Rb_Solution instance);
    partial void InsertRb_State(Rb_State instance);
    partial void UpdateRb_State(Rb_State instance);
    partial void DeleteRb_State(Rb_State instance);
    partial void InsertRb_SurveyAnswer(Rb_SurveyAnswer instance);
    partial void UpdateRb_SurveyAnswer(Rb_SurveyAnswer instance);
    partial void DeleteRb_SurveyAnswer(Rb_SurveyAnswer instance);
    partial void InsertRb_SurveyOption(Rb_SurveyOption instance);
    partial void UpdateRb_SurveyOption(Rb_SurveyOption instance);
    partial void DeleteRb_SurveyOption(Rb_SurveyOption instance);
    partial void InsertRb_SurveyQuestion(Rb_SurveyQuestion instance);
    partial void UpdateRb_SurveyQuestion(Rb_SurveyQuestion instance);
    partial void DeleteRb_SurveyQuestion(Rb_SurveyQuestion instance);
    partial void InsertRb_Survey(Rb_Survey instance);
    partial void UpdateRb_Survey(Rb_Survey instance);
    partial void DeleteRb_Survey(Rb_Survey instance);
    partial void InsertRb_Task(Rb_Task instance);
    partial void UpdateRb_Task(Rb_Task instance);
    partial void DeleteRb_Task(Rb_Task instance);
    partial void InsertRb_UserDefinedData(Rb_UserDefinedData instance);
    partial void UpdateRb_UserDefinedData(Rb_UserDefinedData instance);
    partial void DeleteRb_UserDefinedData(Rb_UserDefinedData instance);
    partial void InsertRb_UserDefinedField(Rb_UserDefinedField instance);
    partial void UpdateRb_UserDefinedField(Rb_UserDefinedField instance);
    partial void DeleteRb_UserDefinedField(Rb_UserDefinedField instance);
    partial void InsertRb_UserDefinedRow(Rb_UserDefinedRow instance);
    partial void UpdateRb_UserDefinedRow(Rb_UserDefinedRow instance);
    partial void DeleteRb_UserDefinedRow(Rb_UserDefinedRow instance);
    partial void InsertRb_UserDesktop(Rb_UserDesktop instance);
    partial void UpdateRb_UserDesktop(Rb_UserDesktop instance);
    partial void DeleteRb_UserDesktop(Rb_UserDesktop instance);
    partial void InsertRb_UserRole(Rb_UserRole instance);
    partial void UpdateRb_UserRole(Rb_UserRole instance);
    partial void DeleteRb_UserRole(Rb_UserRole instance);
    partial void InsertRb_User(Rb_User instance);
    partial void UpdateRb_User(Rb_User instance);
    partial void DeleteRb_User(Rb_User instance);
    partial void InsertRb_Version(Rb_Version instance);
    partial void UpdateRb_Version(Rb_Version instance);
    partial void DeleteRb_Version(Rb_Version instance);
    #endregion
		
    #region Constructor(s)
		public RainbowDataContext(string connection) : 
				base(connection, mappingSource)
		
    {
			OnCreated();
		}
		
		public RainbowDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		
    {
			OnCreated();
		}
		
		public RainbowDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		
    {
			OnCreated();
		}
		
		public RainbowDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		
    {
			OnCreated();
		}
    #endregion
		
    #region Table(s)
		public System.Data.Linq.Table<Aspnet_Application> Aspnet_Applications
		
    {
			get
			
      {
				return this.GetTable<Aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Membership> Aspnet_Memberships
		
    {
			get
			
      {
				return this.GetTable<Aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Path> Aspnet_Paths
		
    {
			get
			
      {
				return this.GetTable<Aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_PersonalizationAllUser> Aspnet_PersonalizationAllUsers
		
    {
			get
			
      {
				return this.GetTable<Aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_PersonalizationPerUser> Aspnet_PersonalizationPerUsers
		
    {
			get
			
      {
				return this.GetTable<Aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Profile> Aspnet_Profiles
		
    {
			get
			
      {
				return this.GetTable<Aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_Role> Aspnet_Roles
		
    {
			get
			
      {
				return this.GetTable<Aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_SchemaVersion> Aspnet_SchemaVersions
		
    {
			get
			
      {
				return this.GetTable<Aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<AspNet_SqlCacheTablesForChangeNotification> AspNet_SqlCacheTablesForChangeNotifications
		
    {
			get
			
      {
				return this.GetTable<AspNet_SqlCacheTablesForChangeNotification>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_User> Aspnet_Users
		
    {
			get
			
      {
				return this.GetTable<Aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_UsersInRole> Aspnet_UsersInRoles
		
    {
			get
			
      {
				return this.GetTable<Aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<Aspnet_WebEvent_Event> Aspnet_WebEvent_Events
		
    {
			get
			
      {
				return this.GetTable<Aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Announcement> Rb_Announcements
		
    {
			get
			
      {
				return this.GetTable<Rb_Announcement>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Announcements_st> Rb_Announcements_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Announcements_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Article> Rb_Articles
		
    {
			get
			
      {
				return this.GetTable<Rb_Article>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Articles_st> Rb_Articles_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Articles_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_BaseSetting> Rb_BaseSettings
		
    {
			get
			
      {
				return this.GetTable<Rb_BaseSetting>();
			}
		}
		
		public System.Data.Linq.Table<Rb_BaseSettingType> Rb_BaseSettingTypes
		
    {
			get
			
      {
				return this.GetTable<Rb_BaseSettingType>();
			}
		}
		
		public System.Data.Linq.Table<Rb_BlackList> Rb_BlackLists
		
    {
			get
			
      {
				return this.GetTable<Rb_BlackList>();
			}
		}
		
		public System.Data.Linq.Table<Rb_BlogComment> Rb_BlogComments
		
    {
			get
			
      {
				return this.GetTable<Rb_BlogComment>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Blog> Rb_Blogs
		
    {
			get
			
      {
				return this.GetTable<Rb_Blog>();
			}
		}
		
		public System.Data.Linq.Table<Rb_BlogStat> Rb_BlogStats
		
    {
			get
			
      {
				return this.GetTable<Rb_BlogStat>();
			}
		}
		
		public System.Data.Linq.Table<Rb_BookList> Rb_BookLists
		
    {
			get
			
      {
				return this.GetTable<Rb_BookList>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Cart> Rb_Carts
		
    {
			get
			
      {
				return this.GetTable<Rb_Cart>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ComponentModule> Rb_ComponentModules
		
    {
			get
			
      {
				return this.GetTable<Rb_ComponentModule>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Contact> Rb_Contacts
		
    {
			get
			
      {
				return this.GetTable<Rb_Contact>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Contacts_st> Rb_Contacts_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Contacts_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ContentManager> Rb_ContentManagers
		
    {
			get
			
      {
				return this.GetTable<Rb_ContentManager>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Country> Rb_Countries
		
    {
			get
			
      {
				return this.GetTable<Rb_Country>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Culture> Rb_Cultures
		
    {
			get
			
      {
				return this.GetTable<Rb_Culture>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Discussion> Rb_Discussions
		
    {
			get
			
      {
				return this.GetTable<Rb_Discussion>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Document> Rb_Documents
		
    {
			get
			
      {
				return this.GetTable<Rb_Document>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Documents_st> Rb_Documents_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Documents_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_EcommerceMerchant> Rb_EcommerceMerchants
		
    {
			get
			
      {
				return this.GetTable<Rb_EcommerceMerchant>();
			}
		}
		
		public System.Data.Linq.Table<Rb_EnhancedHtml> Rb_EnhancedHtmls
		
    {
			get
			
      {
				return this.GetTable<Rb_EnhancedHtml>();
			}
		}
		
		public System.Data.Linq.Table<Rb_EnhancedHtml_st> Rb_EnhancedHtml_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_EnhancedHtml_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_EnhancedLink> Rb_EnhancedLinks
		
    {
			get
			
      {
				return this.GetTable<Rb_EnhancedLink>();
			}
		}
		
		public System.Data.Linq.Table<Rb_EnhancedLinks_st> Rb_EnhancedLinks_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_EnhancedLinks_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Event> Rb_Events
		
    {
			get
			
      {
				return this.GetTable<Rb_Event>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Events_st> Rb_Events_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Events_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_FAQ> Rb_FAQs
		
    {
			get
			
      {
				return this.GetTable<Rb_FAQ>();
			}
		}
		
		public System.Data.Linq.Table<Rb_GeneralModuleDefinition> Rb_GeneralModuleDefinitions
		
    {
			get
			
      {
				return this.GetTable<Rb_GeneralModuleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<Rb_HtmlText> Rb_HtmlTexts
		
    {
			get
			
      {
				return this.GetTable<Rb_HtmlText>();
			}
		}
		
		public System.Data.Linq.Table<Rb_HtmlText_st> Rb_HtmlText_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_HtmlText_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Link> Rb_Links
		
    {
			get
			
      {
				return this.GetTable<Rb_Link>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Links_st> Rb_Links_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Links_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Localize> Rb_Localizes
		
    {
			get
			
      {
				return this.GetTable<Rb_Localize>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Milestone> Rb_Milestones
		
    {
			get
			
      {
				return this.GetTable<Rb_Milestone>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Milestones_st> Rb_Milestones_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Milestones_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ModuleDefinition> Rb_ModuleDefinitions
		
    {
			get
			
      {
				return this.GetTable<Rb_ModuleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Module> Rb_Modules
		
    {
			get
			
      {
				return this.GetTable<Rb_Module>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ModuleSetting> Rb_ModuleSettings
		
    {
			get
			
      {
				return this.GetTable<Rb_ModuleSetting>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ModuleUserSetting> Rb_ModuleUserSettings
		
    {
			get
			
      {
				return this.GetTable<Rb_ModuleUserSetting>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Monitoring> Rb_Monitorings
		
    {
			get
			
      {
				return this.GetTable<Rb_Monitoring>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ObjectType> Rb_ObjectTypes
		
    {
			get
			
      {
				return this.GetTable<Rb_ObjectType>();
			}
		}
		
		public System.Data.Linq.Table<Rb_OrderDetail> Rb_OrderDetails
		
    {
			get
			
      {
				return this.GetTable<Rb_OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Order> Rb_Orders
		
    {
			get
			
      {
				return this.GetTable<Rb_Order>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Page> Rb_Pages
		
    {
			get
			
      {
				return this.GetTable<Rb_Page>();
			}
		}
		
		public System.Data.Linq.Table<Rb_PageSetting> Rb_PageSettings
		
    {
			get
			
      {
				return this.GetTable<Rb_PageSetting>();
			}
		}
		
		public System.Data.Linq.Table<Rb_PermissionMembership> Rb_PermissionMemberships
		
    {
			get
			
      {
				return this.GetTable<Rb_PermissionMembership>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Permission> Rb_Permissions
		
    {
			get
			
      {
				return this.GetTable<Rb_Permission>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Picture> Rb_Pictures
		
    {
			get
			
      {
				return this.GetTable<Rb_Picture>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Pictures_st> Rb_Pictures_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Pictures_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Portal> Rb_Portals
		
    {
			get
			
      {
				return this.GetTable<Rb_Portal>();
			}
		}
		
		public System.Data.Linq.Table<Rb_PortalSetting> Rb_PortalSettings
		
    {
			get
			
      {
				return this.GetTable<Rb_PortalSetting>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Product> Rb_Products
		
    {
			get
			
      {
				return this.GetTable<Rb_Product>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Products_st> Rb_Products_sts
		
    {
			get
			
      {
				return this.GetTable<Rb_Products_st>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Recycler> Rb_Recyclers
		
    {
			get
			
      {
				return this.GetTable<Rb_Recycler>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Role> Rb_Roles
		
    {
			get
			
      {
				return this.GetTable<Rb_Role>();
			}
		}
		
		public System.Data.Linq.Table<Rb_SettingGroup> Rb_SettingGroups
		
    {
			get
			
      {
				return this.GetTable<Rb_SettingGroup>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ShipPrice> Rb_ShipPrices
		
    {
			get
			
      {
				return this.GetTable<Rb_ShipPrice>();
			}
		}
		
		public System.Data.Linq.Table<Rb_ShipZone> Rb_ShipZones
		
    {
			get
			
      {
				return this.GetTable<Rb_ShipZone>();
			}
		}
		
		public System.Data.Linq.Table<Rb_SolutionModuleDefinition> Rb_SolutionModuleDefinitions
		
    {
			get
			
      {
				return this.GetTable<Rb_SolutionModuleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Solution> Rb_Solutions
		
    {
			get
			
      {
				return this.GetTable<Rb_Solution>();
			}
		}
		
		public System.Data.Linq.Table<Rb_State> Rb_States
		
    {
			get
			
      {
				return this.GetTable<Rb_State>();
			}
		}
		
		public System.Data.Linq.Table<Rb_SurveyAnswer> Rb_SurveyAnswers
		
    {
			get
			
      {
				return this.GetTable<Rb_SurveyAnswer>();
			}
		}
		
		public System.Data.Linq.Table<Rb_SurveyOption> Rb_SurveyOptions
		
    {
			get
			
      {
				return this.GetTable<Rb_SurveyOption>();
			}
		}
		
		public System.Data.Linq.Table<Rb_SurveyQuestion> Rb_SurveyQuestions
		
    {
			get
			
      {
				return this.GetTable<Rb_SurveyQuestion>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Survey> Rb_Surveys
		
    {
			get
			
      {
				return this.GetTable<Rb_Survey>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Task> Rb_Tasks
		
    {
			get
			
      {
				return this.GetTable<Rb_Task>();
			}
		}
		
		public System.Data.Linq.Table<Rb_UserDefinedData> Rb_UserDefinedDatas
		
    {
			get
			
      {
				return this.GetTable<Rb_UserDefinedData>();
			}
		}
		
		public System.Data.Linq.Table<Rb_UserDefinedField> Rb_UserDefinedFields
		
    {
			get
			
      {
				return this.GetTable<Rb_UserDefinedField>();
			}
		}
		
		public System.Data.Linq.Table<Rb_UserDefinedRow> Rb_UserDefinedRows
		
    {
			get
			
      {
				return this.GetTable<Rb_UserDefinedRow>();
			}
		}
		
		public System.Data.Linq.Table<Rb_UserDesktop> Rb_UserDesktops
		
    {
			get
			
      {
				return this.GetTable<Rb_UserDesktop>();
			}
		}
		
		public System.Data.Linq.Table<Rb_UserRole> Rb_UserRoles
		
    {
			get
			
      {
				return this.GetTable<Rb_UserRole>();
			}
		}
		
		public System.Data.Linq.Table<Rb_User> Rb_Users
		
    {
			get
			
      {
				return this.GetTable<Rb_User>();
			}
		}
		
		public System.Data.Linq.Table<Rb_Version> Rb_Versions
		
    {
			get
			
      {
				return this.GetTable<Rb_Version>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_Application> Vw_aspnet_Applications
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_MembershipUser> Vw_aspnet_MembershipUsers
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_MembershipUser>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_Profile> Vw_aspnet_Profiles
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_Role> Vw_aspnet_Roles
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_User> Vw_aspnet_Users
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_UsersInRole> Vw_aspnet_UsersInRoles
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_WebPartState_Path> Vw_aspnet_WebPartState_Paths
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_WebPartState_Path>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_WebPartState_Shared> Vw_aspnet_WebPartState_Shareds
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_WebPartState_Shared>();
			}
		}
		
		public System.Data.Linq.Table<Vw_aspnet_WebPartState_User> Vw_aspnet_WebPartState_Users
		
    {
			get
			
      {
				return this.GetTable<Vw_aspnet_WebPartState_User>();
			}
		}
		
		[Function(Name="dbo.aspnet_AnyDataInTables")]
		[ResultType(typeof(Aspnet_AnyDataInTablesResult1))]
		[ResultType(typeof(Aspnet_AnyDataInTablesResult2))]
		[ResultType(typeof(Aspnet_AnyDataInTablesResult3))]
		[ResultType(typeof(Aspnet_AnyDataInTablesResult4))]
		[ResultType(typeof(Aspnet_AnyDataInTablesResult5))]
		[ResultType(typeof(Aspnet_AnyDataInTablesResult6))]
		public IMultipleResults Aspnet_AnyDataInTables([Parameter(Name="TablesToCheck", DbType="Int")] System.Nullable<int> tablesToCheck)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tablesToCheck);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Applications_CreateApplication")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Applications_CreateApplication([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="ApplicationId", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> applicationId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, applicationId);
			applicationId = ((System.Nullable<System.Guid>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_CheckSchemaVersion")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_CheckSchemaVersion([Parameter(Name="Feature", DbType="NVarChar(128)")] string feature, [Parameter(Name="CompatibleSchemaVersion", DbType="NVarChar(128)")] string compatibleSchemaVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), feature, compatibleSchemaVersion);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_ChangePasswordQuestionAndAnswer")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_ChangePasswordQuestionAndAnswer([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="NewPasswordQuestion", DbType="NVarChar(256)")] string newPasswordQuestion, [Parameter(Name="NewPasswordAnswer", DbType="NVarChar(128)")] string newPasswordAnswer)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, newPasswordQuestion, newPasswordAnswer);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_CreateUser")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_CreateUser([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="Password", DbType="NVarChar(128)")] string password, [Parameter(Name="PasswordSalt", DbType="NVarChar(128)")] string passwordSalt, [Parameter(Name="Email", DbType="NVarChar(256)")] string email, [Parameter(Name="PasswordQuestion", DbType="NVarChar(256)")] string passwordQuestion, [Parameter(Name="PasswordAnswer", DbType="NVarChar(128)")] string passwordAnswer, [Parameter(Name="IsApproved", DbType="Bit")] System.Nullable<bool> isApproved, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [Parameter(Name="CreateDate", DbType="DateTime")] System.Nullable<System.DateTime> createDate, [Parameter(Name="UniqueEmail", DbType="Int")] System.Nullable<int> uniqueEmail, [Parameter(Name="PasswordFormat", DbType="Int")] System.Nullable<int> passwordFormat, [Parameter(Name="UserId", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, password, passwordSalt, email, passwordQuestion, passwordAnswer, isApproved, currentTimeUtc, createDate, uniqueEmail, passwordFormat, userId);
			userId = ((System.Nullable<System.Guid>)(result.GetParameterValue(12)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_GetNumberOfUsersOnline")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_GetNumberOfUsersOnline([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="MinutesSinceLastInActive", DbType="Int")] System.Nullable<int> minutesSinceLastInActive, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, minutesSinceLastInActive, currentTimeUtc);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_GetUserByEmail")]
		[ResultType(typeof(Aspnet_Membership_GetUserByEmailResult))]
		public IMultipleResults Aspnet_Membership_GetUserByEmail([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="Email", DbType="NVarChar(256)")] string email)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, email);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_GetUserByName")]
		[ResultType(typeof(Aspnet_Membership_GetUserByNameResult))]
		public IMultipleResults Aspnet_Membership_GetUserByName([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [Parameter(Name="UpdateLastActivity", DbType="Bit")] System.Nullable<bool> updateLastActivity)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, currentTimeUtc, updateLastActivity);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_GetUserByUserId")]
		public ISingleResult<Aspnet_Membership_GetUserByUserIdResult> Aspnet_Membership_GetUserByUserId([Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [Parameter(Name="UpdateLastActivity", DbType="Bit")] System.Nullable<bool> updateLastActivity)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, currentTimeUtc, updateLastActivity);
			return ((ISingleResult<Aspnet_Membership_GetUserByUserIdResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_ResetPassword")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_ResetPassword([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="NewPassword", DbType="NVarChar(128)")] string newPassword, [Parameter(Name="MaxInvalidPasswordAttempts", DbType="Int")] System.Nullable<int> maxInvalidPasswordAttempts, [Parameter(Name="PasswordAttemptWindow", DbType="Int")] System.Nullable<int> passwordAttemptWindow, [Parameter(Name="PasswordSalt", DbType="NVarChar(128)")] string passwordSalt, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [Parameter(Name="PasswordFormat", DbType="Int")] System.Nullable<int> passwordFormat, [Parameter(Name="PasswordAnswer", DbType="NVarChar(128)")] string passwordAnswer)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, newPassword, maxInvalidPasswordAttempts, passwordAttemptWindow, passwordSalt, currentTimeUtc, passwordFormat, passwordAnswer);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_SetPassword")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_SetPassword([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="NewPassword", DbType="NVarChar(128)")] string newPassword, [Parameter(Name="PasswordSalt", DbType="NVarChar(128)")] string passwordSalt, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [Parameter(Name="PasswordFormat", DbType="Int")] System.Nullable<int> passwordFormat)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, newPassword, passwordSalt, currentTimeUtc, passwordFormat);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_UnlockUser")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_UnlockUser([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_UpdateUser")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_UpdateUser([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="Email", DbType="NVarChar(256)")] string email, [Parameter(Name="Comment", DbType="NText")] string comment, [Parameter(Name="IsApproved", DbType="Bit")] System.Nullable<bool> isApproved, [Parameter(Name="LastLoginDate", DbType="DateTime")] System.Nullable<System.DateTime> lastLoginDate, [Parameter(Name="LastActivityDate", DbType="DateTime")] System.Nullable<System.DateTime> lastActivityDate, [Parameter(Name="UniqueEmail", DbType="Int")] System.Nullable<int> uniqueEmail, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, email, comment, isApproved, lastLoginDate, lastActivityDate, uniqueEmail, currentTimeUtc);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_UpdateUserInfo")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Membership_UpdateUserInfo([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="IsPasswordCorrect", DbType="Bit")] System.Nullable<bool> isPasswordCorrect, [Parameter(Name="UpdateLastLoginActivityDate", DbType="Bit")] System.Nullable<bool> updateLastLoginActivityDate, [Parameter(Name="MaxInvalidPasswordAttempts", DbType="Int")] System.Nullable<int> maxInvalidPasswordAttempts, [Parameter(Name="PasswordAttemptWindow", DbType="Int")] System.Nullable<int> passwordAttemptWindow, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [Parameter(Name="LastLoginDate", DbType="DateTime")] System.Nullable<System.DateTime> lastLoginDate, [Parameter(Name="LastActivityDate", DbType="DateTime")] System.Nullable<System.DateTime> lastActivityDate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, isPasswordCorrect, updateLastLoginActivityDate, maxInvalidPasswordAttempts, passwordAttemptWindow, currentTimeUtc, lastLoginDate, lastActivityDate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Paths_CreatePath")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Paths_CreatePath([Parameter(Name="ApplicationId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> applicationId, [Parameter(Name="Path", DbType="NVarChar(256)")] string path, [Parameter(Name="PathId", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> pathId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationId, path, pathId);
			pathId = ((System.Nullable<System.Guid>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Personalization_GetApplicationId")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Personalization_GetApplicationId([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="ApplicationId", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> applicationId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, applicationId);
			applicationId = ((System.Nullable<System.Guid>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationAdministration_DeleteAllState")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationAdministration_DeleteAllState([Parameter(Name="AllUsersScope", DbType="Bit")] System.Nullable<bool> allUsersScope, [Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="Count", DbType="Int")] ref System.Nullable<int> count)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), allUsersScope, applicationName, count);
			count = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationAdministration_GetCountOfState")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationAdministration_GetCountOfState([Parameter(Name="Count", DbType="Int")] ref System.Nullable<int> count, [Parameter(Name="AllUsersScope", DbType="Bit")] System.Nullable<bool> allUsersScope, [Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="InactiveSinceDate", DbType="DateTime")] System.Nullable<System.DateTime> inactiveSinceDate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, allUsersScope, applicationName, path, userName, inactiveSinceDate);
			count = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationAdministration_ResetSharedState")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationAdministration_ResetSharedState([Parameter(Name="Count", DbType="Int")] ref System.Nullable<int> count, [Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, applicationName, path);
			count = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationAdministration_ResetUserState")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationAdministration_ResetUserState([Parameter(Name="Count", DbType="Int")] ref System.Nullable<int> count, [Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="InactiveSinceDate", DbType="DateTime")] System.Nullable<System.DateTime> inactiveSinceDate, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, applicationName, inactiveSinceDate, userName, path);
			count = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationAllUsers_GetPageSettings")]
		public ISingleResult<Aspnet_PersonalizationAllUsers_GetPageSettingsResult> Aspnet_PersonalizationAllUsers_GetPageSettings([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, path);
			return ((ISingleResult<Aspnet_PersonalizationAllUsers_GetPageSettingsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationAllUsers_ResetPageSettings")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationAllUsers_ResetPageSettings([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, path);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationAllUsers_SetPageSettings")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationAllUsers_SetPageSettings([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path, [Parameter(Name="PageSettings", DbType="Image")] System.Data.Linq.Binary pageSettings, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, path, pageSettings, currentTimeUtc);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationPerUser_GetPageSettings")]
		public ISingleResult<Aspnet_PersonalizationPerUser_GetPageSettingsResult> Aspnet_PersonalizationPerUser_GetPageSettings([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, path, currentTimeUtc);
			return ((ISingleResult<Aspnet_PersonalizationPerUser_GetPageSettingsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationPerUser_ResetPageSettings")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationPerUser_ResetPageSettings([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, path, currentTimeUtc);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_PersonalizationPerUser_SetPageSettings")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_PersonalizationPerUser_SetPageSettings([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="Path", DbType="NVarChar(256)")] string path, [Parameter(Name="PageSettings", DbType="Image")] System.Data.Linq.Binary pageSettings, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, path, pageSettings, currentTimeUtc);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Profile_DeleteInactiveProfiles")]
		[ResultType(typeof(Aspnet_Profile_DeleteInactiveProfilesResult))]
		public IMultipleResults Aspnet_Profile_DeleteInactiveProfiles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="ProfileAuthOptions", DbType="Int")] System.Nullable<int> profileAuthOptions, [Parameter(Name="InactiveSinceDate", DbType="DateTime")] System.Nullable<System.DateTime> inactiveSinceDate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, profileAuthOptions, inactiveSinceDate);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Profile_DeleteProfiles")]
		public ISingleResult<Aspnet_Profile_DeleteProfilesResult> Aspnet_Profile_DeleteProfiles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserNames", DbType="NVarChar(4000)")] string userNames)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userNames);
			return ((ISingleResult<Aspnet_Profile_DeleteProfilesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Profile_GetNumberOfInactiveProfiles")]
		[ResultType(typeof(Aspnet_Profile_GetNumberOfInactiveProfilesResult))]
		public IMultipleResults Aspnet_Profile_GetNumberOfInactiveProfiles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="ProfileAuthOptions", DbType="Int")] System.Nullable<int> profileAuthOptions, [Parameter(Name="InactiveSinceDate", DbType="DateTime")] System.Nullable<System.DateTime> inactiveSinceDate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, profileAuthOptions, inactiveSinceDate);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Profile_GetProperties")]
		public ISingleResult<Aspnet_Profile_GetPropertiesResult> Aspnet_Profile_GetProperties([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, currentTimeUtc);
			return ((ISingleResult<Aspnet_Profile_GetPropertiesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Profile_SetProperties")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Profile_SetProperties([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="PropertyNames", DbType="NText")] string propertyNames, [Parameter(Name="PropertyValuesString", DbType="NText")] string propertyValuesString, [Parameter(Name="PropertyValuesBinary", DbType="Image")] System.Data.Linq.Binary propertyValuesBinary, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="IsUserAnonymous", DbType="Bit")] System.Nullable<bool> isUserAnonymous, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, propertyNames, propertyValuesString, propertyValuesBinary, userName, isUserAnonymous, currentTimeUtc);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_rbRoles_RenameRole")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_rbRoles_RenameRole([Parameter(Name="RoleId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> roleId, [Parameter(Name="NewRoleName", DbType="VarChar(256)")] string newRoleName)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleId, newRoleName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_RegisterSchemaVersion")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_RegisterSchemaVersion([Parameter(Name="Feature", DbType="NVarChar(128)")] string feature, [Parameter(Name="CompatibleSchemaVersion", DbType="NVarChar(128)")] string compatibleSchemaVersion, [Parameter(Name="IsCurrentVersion", DbType="Bit")] System.Nullable<bool> isCurrentVersion, [Parameter(Name="RemoveIncompatibleSchema", DbType="Bit")] System.Nullable<bool> removeIncompatibleSchema)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), feature, compatibleSchemaVersion, isCurrentVersion, removeIncompatibleSchema);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Roles_CreateRole")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Roles_CreateRole([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="RoleName", DbType="NVarChar(256)")] string roleName, [Parameter(Name="NewRoleId", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> newRoleId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, roleName, newRoleId);
			newRoleId = ((System.Nullable<System.Guid>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Roles_DeleteRole")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Roles_DeleteRole([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="RoleId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> roleId, [Parameter(Name="DeleteOnlyIfRoleIsEmpty", DbType="Bit")] System.Nullable<bool> deleteOnlyIfRoleIsEmpty)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, roleId, deleteOnlyIfRoleIsEmpty);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Roles_GetAllRoles")]
		public ISingleResult<Aspnet_Roles_GetAllRolesResult> Aspnet_Roles_GetAllRoles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName);
			return ((ISingleResult<Aspnet_Roles_GetAllRolesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Roles_GetRoleByName")]
		public ISingleResult<Aspnet_Roles_GetRoleByNameResult> Aspnet_Roles_GetRoleByName([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="RoleName", DbType="NVarChar(256)")] string roleName)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, roleName);
			return ((ISingleResult<Aspnet_Roles_GetRoleByNameResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Roles_RenameRole")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Roles_RenameRole([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="RoleId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> roleId, [Parameter(Name="NewName", DbType="NVarChar(256)")] string newName)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, roleId, newName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Roles_RoleExists")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Roles_RoleExists([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="RoleId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> roleId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, roleId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UnRegisterSchemaVersion")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_UnRegisterSchemaVersion([Parameter(Name="Feature", DbType="NVarChar(128)")] string feature, [Parameter(Name="CompatibleSchemaVersion", DbType="NVarChar(128)")] string compatibleSchemaVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), feature, compatibleSchemaVersion);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Users_CreateUser")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Users_CreateUser([Parameter(Name="ApplicationId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> applicationId, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="IsUserAnonymous", DbType="Bit")] System.Nullable<bool> isUserAnonymous, [Parameter(Name="LastActivityDate", DbType="DateTime")] System.Nullable<System.DateTime> lastActivityDate, [Parameter(Name="UserId", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationId, userName, isUserAnonymous, lastActivityDate, userId);
			userId = ((System.Nullable<System.Guid>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Users_DeleteUser")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_Users_DeleteUser([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="TablesToDeleteFrom", DbType="Int")] System.Nullable<int> tablesToDeleteFrom, [Parameter(Name="NumTablesDeletedFrom", DbType="Int")] ref System.Nullable<int> numTablesDeletedFrom)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, tablesToDeleteFrom, numTablesDeletedFrom);
			numTablesDeletedFrom = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_AddUsersToRoles")]
		public ISingleResult<Aspnet_UsersInRoles_AddUsersToRolesResult> Aspnet_UsersInRoles_AddUsersToRoles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserIds", DbType="NVarChar(4000)")] string userIds, [Parameter(Name="RoleIds", DbType="NVarChar(4000)")] string roleIds)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userIds, roleIds);
			return ((ISingleResult<Aspnet_UsersInRoles_AddUsersToRolesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_FindUsersInRole")]
		public ISingleResult<Aspnet_UsersInRoles_FindUsersInRoleResult> Aspnet_UsersInRoles_FindUsersInRole([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="RoleName", DbType="NVarChar(256)")] string roleName, [Parameter(Name="UserNameToMatch", DbType="NVarChar(256)")] string userNameToMatch)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, roleName, userNameToMatch);
			return ((ISingleResult<Aspnet_UsersInRoles_FindUsersInRoleResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_GetRolesForUser")]
		public ISingleResult<Aspnet_UsersInRoles_GetRolesForUserResult> Aspnet_UsersInRoles_GetRolesForUser([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userId);
			return ((ISingleResult<Aspnet_UsersInRoles_GetRolesForUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_GetUsersInRoles")]
		public ISingleResult<Aspnet_UsersInRoles_GetUsersInRolesResult> Aspnet_UsersInRoles_GetUsersInRoles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="RoleId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> roleId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, roleId);
			return ((ISingleResult<Aspnet_UsersInRoles_GetUsersInRolesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_IsUserInRole")]
		[ResultType(typeof(Aspnet_UsersInRoles_IsUserInRoleResult1))]
		[ResultType(typeof(Aspnet_UsersInRoles_IsUserInRoleResult2))]
		public IMultipleResults Aspnet_UsersInRoles_IsUserInRole([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId, [Parameter(Name="RoleId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> roleId)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userId, roleId);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_RemoveUsersFromRoles")]
		[ResultType(typeof(Aspnet_UsersInRoles_RemoveUsersFromRolesResult1))]
		[ResultType(typeof(Aspnet_UsersInRoles_RemoveUsersFromRolesResult2))]
		[ResultType(typeof(Aspnet_UsersInRoles_RemoveUsersFromRolesResult3))]
		[ResultType(typeof(Aspnet_UsersInRoles_RemoveUsersFromRolesResult4))]
		[ResultType(typeof(Aspnet_UsersInRoles_RemoveUsersFromRolesResult5))]
		public IMultipleResults Aspnet_UsersInRoles_RemoveUsersFromRoles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserIds", DbType="NVarChar(4000)")] string userIds, [Parameter(Name="RoleIds", DbType="NVarChar(4000)")] string roleIds)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userIds, roleIds);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_WebEvent_LogEvent")]
		[return: Parameter(DbType="Int")]
		public int Aspnet_WebEvent_LogEvent([Parameter(Name="EventId", DbType="Char(32)")] string eventId, [Parameter(Name="EventTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> eventTimeUtc, [Parameter(Name="EventTime", DbType="DateTime")] System.Nullable<System.DateTime> eventTime, [Parameter(Name="EventType", DbType="NVarChar(256)")] string eventType, [Parameter(Name="EventSequence", DbType="Decimal(19,0)")] System.Nullable<decimal> eventSequence, [Parameter(Name="EventOccurrence", DbType="Decimal(19,0)")] System.Nullable<decimal> eventOccurrence, [Parameter(Name="EventCode", DbType="Int")] System.Nullable<int> eventCode, [Parameter(Name="EventDetailCode", DbType="Int")] System.Nullable<int> eventDetailCode, [Parameter(Name="Message", DbType="NVarChar(1024)")] string message, [Parameter(Name="ApplicationPath", DbType="NVarChar(256)")] string applicationPath, [Parameter(Name="ApplicationVirtualPath", DbType="NVarChar(256)")] string applicationVirtualPath, [Parameter(Name="MachineName", DbType="NVarChar(256)")] string machineName, [Parameter(Name="RequestUrl", DbType="NVarChar(1024)")] string requestUrl, [Parameter(Name="ExceptionType", DbType="NVarChar(256)")] string exceptionType, [Parameter(Name="Details", DbType="NText")] string details)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId, eventTimeUtc, eventTime, eventType, eventSequence, eventOccurrence, eventCode, eventDetailCode, message, applicationPath, applicationVirtualPath, machineName, requestUrl, exceptionType, details);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.fn_diagramobjects", IsComposable=true)]
		[return: Parameter(DbType="Int")]
		public System.Nullable<int> Fn_diagramobjects()
		
    {
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddAnnouncement")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddAnnouncement([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(150)")] string title, [Parameter(Name="MoreLink", DbType="NVarChar(150)")] string moreLink, [Parameter(Name="MobileMoreLink", DbType="NVarChar(150)")] string mobileMoreLink, [Parameter(Name="ExpireDate", DbType="DateTime")] System.Nullable<System.DateTime> expireDate, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, title, moreLink, mobileMoreLink, expireDate, description, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddArticle")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddArticle([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Subtitle", DbType="NVarChar(200)")] string subtitle, [Parameter(Name="Abstract", DbType="NText")] string @abstract, [Parameter(Name="Description", DbType="NText")] string description, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="ExpireDate", DbType="DateTime")] System.Nullable<System.DateTime> expireDate, [Parameter(Name="IsInNewsletter", DbType="Bit")] System.Nullable<bool> isInNewsletter, [Parameter(Name="MoreLink", DbType="NVarChar(150)")] string moreLink, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, title, subtitle, @abstract, description, startDate, expireDate, isInNewsletter, moreLink, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddBook")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddBook([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="ISBN", DbType="NVarChar(10)")] string iSBN, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID, [Parameter(Name="Caption", DbType="NText")] string caption)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, createdByUser, iSBN, itemID, caption);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddContact")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddContact([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Name", DbType="NVarChar(50)")] string name, [Parameter(Name="Role", DbType="NVarChar(100)")] string role, [Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Contact1", DbType="NVarChar(250)")] string contact1, [Parameter(Name="Contact2", DbType="NVarChar(250)")] string contact2, [Parameter(Name="Fax", DbType="NVarChar(250)")] string fax, [Parameter(Name="Address", DbType="NVarChar(250)")] string address, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, name, role, email, contact1, contact2, fax, address, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddEnhancedHtml")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddEnhancedHtml([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="CultureCode", DbType="Int")] System.Nullable<int> cultureCode, [Parameter(Name="DesktopHtml", DbType="NText")] string desktopHtml, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, title, viewOrder, cultureCode, desktopHtml, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddEnhancedLink")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddEnhancedLink([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Url", DbType="NVarChar(800)")] string url, [Parameter(Name="MobileUrl", DbType="NVarChar(250)")] string mobileUrl, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description, [Parameter(Name="ImageUrl", DbType="NVarChar(250)")] string imageUrl, [Parameter(Name="Clicks", DbType="Int")] System.Nullable<int> clicks, [Parameter(Name="Target", DbType="NVarChar(10)")] string target, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, title, url, mobileUrl, viewOrder, description, imageUrl, clicks, target, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddEvent")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddEvent([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="AllDay", DbType="Bit")] System.Nullable<bool> allDay, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="StartTime", DbType="NVarChar(8)")] string startTime, [Parameter(Name="ExpireDate", DbType="DateTime")] System.Nullable<System.DateTime> expireDate, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description, [Parameter(Name="WhereWhen", DbType="NVarChar(100)")] string whereWhen, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, title, allDay, startDate, startTime, expireDate, description, whereWhen, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddFAQ")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddFAQ([Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Question", DbType="NVarChar(500)")] string question, [Parameter(Name="Answer", DbType="NText")] string answer)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, userName, question, answer);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddGeneralModuleDefinitions")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddGeneralModuleDefinitions([Parameter(Name="GeneralModDefID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> generalModDefID, [Parameter(Name="FriendlyName", DbType="NVarChar(128)")] string friendlyName, [Parameter(Name="DesktopSrc", DbType="NVarChar(256)")] string desktopSrc, [Parameter(Name="MobileSrc", DbType="NVarChar(256)")] string mobileSrc, [Parameter(Name="AssemblyName", DbType="VarChar(50)")] string assemblyName, [Parameter(Name="ClassName", DbType="NVarChar(128)")] string className, [Parameter(Name="Admin", DbType="Bit")] System.Nullable<bool> admin, [Parameter(Name="Searchable", DbType="Bit")] System.Nullable<bool> searchable)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), generalModDefID, friendlyName, desktopSrc, mobileSrc, assemblyName, className, admin, searchable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddLink")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddLink([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Url", DbType="NVarChar(800)")] string url, [Parameter(Name="MobileUrl", DbType="NVarChar(250)")] string mobileUrl, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description, [Parameter(Name="Target", DbType="NVarChar(10)")] string target, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, title, url, mobileUrl, viewOrder, description, target, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddMilestones")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddMilestones([Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="EstCompleteDate", DbType="DateTime")] System.Nullable<System.DateTime> estCompleteDate, [Parameter(Name="Status", DbType="NVarChar(100)")] string status)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, createdByUser, createdDate, title, estCompleteDate, status);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddModule")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddModule(
					[Parameter(Name="TabID", DbType="Int")] System.Nullable<int> tabID, 
					[Parameter(Name="ModuleOrder", DbType="Int")] System.Nullable<int> moduleOrder, 
					[Parameter(Name="ModuleTitle", DbType="NVarChar(256)")] string moduleTitle, 
					[Parameter(Name="PaneName", DbType="NVarChar(50)")] string paneName, 
					[Parameter(Name="ModuleDefID", DbType="Int")] System.Nullable<int> moduleDefID, 
					[Parameter(Name="CacheTime", DbType="Int")] System.Nullable<int> cacheTime, 
					[Parameter(Name="EditRoles", DbType="NVarChar(256)")] string editRoles, 
					[Parameter(Name="AddRoles", DbType="NVarChar(256)")] string addRoles, 
					[Parameter(Name="ViewRoles", DbType="NVarChar(256)")] string viewRoles, 
					[Parameter(Name="DeleteRoles", DbType="NVarChar(256)")] string deleteRoles, 
					[Parameter(Name="PropertiesRoles", DbType="NVarChar(256)")] string propertiesRoles, 
					[Parameter(Name="MoveModuleRoles", DbType="NVarChar(256)")] string moveModuleRoles, 
					[Parameter(Name="DeleteModuleRoles", DbType="NVarChar(256)")] string deleteModuleRoles, 
					[Parameter(Name="ShowMobile", DbType="Bit")] System.Nullable<bool> showMobile, 
					[Parameter(Name="PublishingRoles", DbType="NVarChar(256)")] string publishingRoles, 
					[Parameter(Name="SupportWorkflow", DbType="Bit")] System.Nullable<bool> supportWorkflow, 
					[Parameter(Name="ShowEveryWhere", DbType="Bit")] System.Nullable<bool> showEveryWhere, 
					[Parameter(Name="SupportCollapsable", DbType="Bit")] System.Nullable<bool> supportCollapsable, 
					[Parameter(Name="ModuleID", DbType="Int")] ref System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tabID, moduleOrder, moduleTitle, paneName, moduleDefID, cacheTime, editRoles, addRoles, viewRoles, deleteRoles, propertiesRoles, moveModuleRoles, deleteModuleRoles, showMobile, publishingRoles, supportWorkflow, showEveryWhere, supportCollapsable, moduleID);
			moduleID = ((System.Nullable<int>)(result.GetParameterValue(18)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddOrder")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddOrder(
					[Parameter(Name="OrderID", DbType="Char(24)")] string orderID, 
					[Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, 
					[Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[Parameter(Name="TotalGoods", DbType="Money")] System.Nullable<decimal> totalGoods, 
					[Parameter(Name="TotalShipping", DbType="Money")] System.Nullable<decimal> totalShipping, 
					[Parameter(Name="TotalTaxes", DbType="Money")] System.Nullable<decimal> totalTaxes, 
					[Parameter(Name="TotalExpenses", DbType="Money")] System.Nullable<decimal> totalExpenses, 
					[Parameter(Name="ISOCurrencySymbol", DbType="Char(3)")] string iSOCurrencySymbol, 
					[Parameter(Name="Status", DbType="Int")] System.Nullable<int> status, 
					[Parameter(Name="DateCreated", DbType="DateTime")] System.Nullable<System.DateTime> dateCreated, 
					[Parameter(Name="DateModified", DbType="DateTime")] System.Nullable<System.DateTime> dateModified, 
					[Parameter(Name="PaymentMethod", DbType="NVarChar(50)")] string paymentMethod, 
					[Parameter(Name="ShippingMethod", DbType="NVarChar(50)")] string shippingMethod, 
					[Parameter(Name="TotalWeight", DbType="Real")] System.Nullable<float> totalWeight, 
					[Parameter(Name="WeightUnit", DbType="NVarChar(15)")] string weightUnit, 
					[Parameter(Name="ShippingData", DbType="NText")] string shippingData, 
					[Parameter(Name="BillingData", DbType="NText")] string billingData)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, moduleID, userID, totalGoods, totalShipping, totalTaxes, totalExpenses, iSOCurrencySymbol, status, dateCreated, dateModified, paymentMethod, shippingMethod, totalWeight, weightUnit, shippingData, billingData);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddOrderDetails")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddOrderDetails([Parameter(Name="OrderID", DbType="Char(24)")] string orderID, [Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, cartID, moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddPicture")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddPicture([Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="DisplayOrder", DbType="Int")] System.Nullable<int> displayOrder, [Parameter(Name="MetadataXml", DbType="NVarChar(3000)")] string metadataXml, [Parameter(Name="ShortDescription", DbType="NVarChar(256)")] string shortDescription, [Parameter(Name="Keywords", DbType="NVarChar(256)")] string keywords, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, displayOrder, metadataXml, shortDescription, keywords, createdByUser, createdDate);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddPortal")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddPortal([Parameter(Name="PortalAlias", DbType="NVarChar(128)")] string portalAlias, [Parameter(Name="PortalName", DbType="NVarChar(128)")] string portalName, [Parameter(Name="PortalPath", DbType="NVarChar(128)")] string portalPath, [Parameter(Name="AlwaysShowEditButton", DbType="Bit")] System.Nullable<bool> alwaysShowEditButton, [Parameter(Name="PortalID", DbType="Int")] ref System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalAlias, portalName, portalPath, alwaysShowEditButton, portalID);
			portalID = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddRole")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddRole([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="RoleName", DbType="NVarChar(50)")] string roleName, [Parameter(Name="RoleID", DbType="Int")] ref System.Nullable<int> roleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, roleName, roleID);
			roleID = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddSurveyAnswer")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddSurveyAnswer([Parameter(Name="SurveyID", DbType="Int")] System.Nullable<int> surveyID, [Parameter(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [Parameter(Name="OptionID", DbType="Int")] System.Nullable<int> optionID, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), surveyID, questionID, optionID, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddSurveyOption")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddSurveyOption([Parameter(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [Parameter(Name="OptionDesc", DbType="NVarChar(500)")] string optionDesc, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="OptionID", DbType="Int")] ref System.Nullable<int> optionID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID, optionDesc, viewOrder, optionID);
			optionID = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddSurveyQuestion")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddSurveyQuestion([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="Question", DbType="NVarChar(500)")] string question, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="TypeOption", DbType="NVarChar(2)")] string typeOption, [Parameter(Name="QuestionID", DbType="Int")] ref System.Nullable<int> questionID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, question, viewOrder, typeOption, questionID);
			questionID = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddTask")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddTask([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="AssignedTo", DbType="NVarChar(50)")] string assignedTo, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Description", DbType="NText")] string description, [Parameter(Name="Status", DbType="NVarChar(20)")] string status, [Parameter(Name="Priority", DbType="NVarChar(20)")] string priority, [Parameter(Name="PercentComplete", DbType="Int")] System.Nullable<int> percentComplete, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="DueDate", DbType="DateTime")] System.Nullable<System.DateTime> dueDate, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, assignedTo, title, description, status, priority, percentComplete, startDate, dueDate, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddToBlackList")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddToBlackList([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Reason", DbType="NVarChar(150)")] string reason)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, email, reason);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddUser")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddUser([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Name", DbType="NVarChar(50)")] string name, [Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Password", DbType="VarChar(40)")] string password, [Parameter(Name="Salt", DbType="VarChar(10)")] string salt, [Parameter(Name="UserID", DbType="Int")] ref System.Nullable<int> userID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, name, email, password, salt, userID);
			userID = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddUserDefinedField")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddUserDefinedField([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="FieldTitle", DbType="VarChar(50)")] string fieldTitle, [Parameter(Name="Visible", DbType="Bit")] System.Nullable<bool> visible, [Parameter(Name="FieldType", DbType="VarChar(20)")] string fieldType)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, fieldTitle, visible, fieldType);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddUserDefinedRow")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddUserDefinedRow([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserDefinedRowID", DbType="Int")] ref System.Nullable<int> userDefinedRowID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userDefinedRowID);
			userDefinedRowID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddUserFull")]
		[return: Parameter(DbType="Int")]
		public int Rb_AddUserFull(
					[Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, 
					[Parameter(Name="Name", DbType="NVarChar(50)")] string name, 
					[Parameter(Name="Company", DbType="NVarChar(50)")] string company, 
					[Parameter(Name="Address", DbType="NVarChar(50)")] string address, 
					[Parameter(Name="City", DbType="NVarChar(50)")] string city, 
					[Parameter(Name="Zip", DbType="NVarChar(6)")] string zip, 
					[Parameter(Name="Phone", DbType="NVarChar(50)")] string phone, 
					[Parameter(Name="Fax", DbType="NVarChar(50)")] string fax, 
					[Parameter(Name="PIva", DbType="NVarChar(11)")] string pIva, 
					[Parameter(Name="CFiscale", DbType="NVarChar(16)")] string cFiscale, 
					[Parameter(Name="Email", DbType="NVarChar(100)")] string email, 
					[Parameter(Name="Password", DbType="VarChar(40)")] string password, 
					[Parameter(Name="Salt", DbType="VarChar(10)")] string salt, 
					[Parameter(Name="SendNewsletter", DbType="Bit")] System.Nullable<bool> sendNewsletter, 
					[Parameter(Name="CountryID", DbType="NChar(2)")] string countryID, 
					[Parameter(Name="StateID", DbType="Int")] System.Nullable<int> stateID, 
					[Parameter(Name="UserID", DbType="Int")] ref System.Nullable<int> userID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, name, company, address, city, zip, phone, fax, pIva, cFiscale, email, password, salt, sendNewsletter, countryID, stateID, userID);
			userID = ((System.Nullable<int>)(result.GetParameterValue(16)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_AddUserRole")]
		public ISingleResult<Rb_AddUserRoleResult> Rb_AddUserRole([Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID);
			return ((ISingleResult<Rb_AddUserRoleResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Announcements_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_Announcements_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Announcements_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Announcements_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Announcements_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Announcements_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Approve")]
		[return: Parameter(DbType="Int")]
		public int Rb_Approve([Parameter(DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Articles_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_Articles_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Articles_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Articles_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Articles_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Articles_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogAdd")]
		[return: Parameter(DbType="Int")]
		public int Rb_BlogAdd([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Excerpt", DbType="NVarChar(512)")] string excerpt, [Parameter(Name="Description", DbType="NText")] string description, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="IsInNewsletter", DbType="Bit")] System.Nullable<bool> isInNewsletter, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userName, title, excerpt, description, startDate, isInNewsletter, itemID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogCommentAdd")]
		[return: Parameter(DbType="Int")]
		public int Rb_BlogCommentAdd([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="Name", DbType="NVarChar(100)")] string name, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="URL", DbType="NVarChar(200)")] string uRL, [Parameter(Name="Comment", DbType="NText")] string comment)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, itemID, name, title, uRL, comment);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogCommentDelete")]
		[return: Parameter(DbType="Int")]
		public int Rb_BlogCommentDelete([Parameter(Name="BlogCommentID", DbType="Int")] System.Nullable<int> blogCommentID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), blogCommentID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogCommentsGet")]
		public ISingleResult<Rb_BlogCommentsGetResult> Rb_BlogCommentsGet([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, itemID);
			return ((ISingleResult<Rb_BlogCommentsGetResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogDelete")]
		[return: Parameter(DbType="Int")]
		public int Rb_BlogDelete([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogGetSingle")]
		public ISingleResult<Rb_BlogGetSingleResult> Rb_BlogGetSingle([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<Rb_BlogGetSingleResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogGetSingleWithImages")]
		public ISingleResult<Rb_BlogGetSingleWithImagesResult> Rb_BlogGetSingleWithImages([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="Variation", DbType="VarChar(50)")] string variation)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, variation);
			return ((ISingleResult<Rb_BlogGetSingleWithImagesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Blogs_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_Blogs_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Blogs_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Blogs_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Blogs_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Blogs_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogsByMonthArchiveGet")]
		public ISingleResult<Rb_BlogsByMonthArchiveGetResult> Rb_BlogsByMonthArchiveGet([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_BlogsByMonthArchiveGetResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogsByMonthGet")]
		public ISingleResult<Rb_BlogsByMonthGetResult> Rb_BlogsByMonthGet([Parameter(Name="MONTH", DbType="Int")] System.Nullable<int> mONTH, [Parameter(Name="YEAR", DbType="Int")] System.Nullable<int> yEAR, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mONTH, yEAR, moduleID);
			return ((ISingleResult<Rb_BlogsByMonthGetResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogsGet")]
		public ISingleResult<Rb_BlogsGetResult> Rb_BlogsGet([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_BlogsGetResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogStatsGet")]
		public ISingleResult<Rb_BlogStatsGetResult> Rb_BlogStatsGet([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_BlogStatsGetResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_BlogUpdate")]
		[return: Parameter(DbType="Int")]
		public int Rb_BlogUpdate([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Excerpt", DbType="NVarChar(512)")] string excerpt, [Parameter(Name="Description", DbType="NText")] string description, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="IsInNewsletter", DbType="Bit")] System.Nullable<bool> isInNewsletter)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, userName, title, excerpt, description, startDate, isInNewsletter);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartAddItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartAddItem([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [Parameter(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, productID, quantity, moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartEmpty")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartEmpty([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartItemCount")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartItemCount([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="ItemCount", DbType="Int")] ref System.Nullable<int> itemCount)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, moduleID, itemCount);
			itemCount = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartList")]
		[ResultType(typeof(Rb_CartListResult))]
		public IMultipleResults Rb_CartList([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartMigrate")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartMigrate([Parameter(Name="OriginalCartID", DbType="NVarChar(50)")] string originalCartID, [Parameter(Name="NewCartID", DbType="NVarChar(50)")] string newCartID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), originalCartID, newCartID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartRemoveAbandoned")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartRemoveAbandoned()
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartRemoveAllItems")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartRemoveAllItems([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartRemoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartRemoveItem([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, productID, moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartTotal")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartTotal([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="IncludeTaxes", DbType="Bit")] System.Nullable<bool> includeTaxes, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion, [Parameter(Name="TotalCost", DbType="Money")] ref System.Nullable<decimal> totalCost, [Parameter(Name="ISOCurrencySymbol", DbType="Char(3)")] ref string iSOCurrencySymbol)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, includeTaxes, moduleID, workflowVersion, totalCost, iSOCurrencySymbol);
			totalCost = ((System.Nullable<decimal>)(result.GetParameterValue(4)));
			iSOCurrencySymbol = ((string)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartTotalShipping")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartTotalShipping([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="CountryID", DbType="NChar(2)")] string countryID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion, [Parameter(Name="TotalShipping", DbType="Money")] ref System.Nullable<decimal> totalShipping)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, countryID, moduleID, workflowVersion, totalShipping);
			totalShipping = ((System.Nullable<decimal>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_CartUpdate")]
		[return: Parameter(DbType="Int")]
		public int Rb_CartUpdate([Parameter(Name="CartID", DbType="NVarChar(50)")] string cartID, [Parameter(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [Parameter(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cartID, productID, quantity, moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_ChangeObjectOwner")]
		[return: Parameter(DbType="Int")]
		public int Rb_ChangeObjectOwner([Parameter(Name="NewOwner", DbType="NVarChar(128)")] string newOwner)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newOwner);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Contacts_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_Contacts_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Contacts_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Contacts_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Contacts_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Contacts_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_ContentMgr_GetModuleTypes")]
		public ISingleResult<Rb_ContentMgr_GetModuleTypesResult> Rb_ContentMgr_GetModuleTypes()
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Rb_ContentMgr_GetModuleTypesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_ContentMgr_GetPortals")]
		public ISingleResult<Rb_ContentMgr_GetPortalsResult> Rb_ContentMgr_GetPortals()
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Rb_ContentMgr_GetPortalsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteAnnouncement")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteAnnouncement([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteArticle")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteArticle([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteBook")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteBook([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteContact")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteContact([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteDocument")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteDocument([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteEnhancedHtml")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteEnhancedHtml([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteEnhancedLink")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteEnhancedLink([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteEvent")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteEvent([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteFAQ")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteFAQ([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteFromBlackList")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteFromBlackList([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Email", DbType="NVarChar(100)")] string email)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, email);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteLink")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteLink([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteMilestones")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteMilestones([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteModuleToRecycler")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteModuleToRecycler([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="DeletedBy", DbType="NVarChar(250)")] string deletedBy, [Parameter(Name="DateDeleted", DbType="DateTime")] System.Nullable<System.DateTime> dateDeleted)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, deletedBy, dateDeleted);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeletePicture")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeletePicture([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteProduct")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteProduct([Parameter(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteRole")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteRole([Parameter(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteTask")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteTask([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteUser")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteUser([Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteUserDefinedField")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteUserDefinedField([Parameter(Name="UserDefinedFieldID", DbType="Int")] System.Nullable<int> userDefinedFieldID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedFieldID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteUserDefinedRow")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteUserDefinedRow([Parameter(Name="UserDefinedRowID", DbType="Int")] System.Nullable<int> userDefinedRowID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedRowID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteUserDeskTop")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteUserDeskTop([Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, portalID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DeleteUserRole")]
		[return: Parameter(DbType="Int")]
		public int Rb_DeleteUserRole([Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DelSurveyOption")]
		[return: Parameter(DbType="Int")]
		public int Rb_DelSurveyOption([Parameter(Name="OptionID", DbType="Int")] System.Nullable<int> optionID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), optionID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DelSurveyQuestion")]
		[return: Parameter(DbType="Int")]
		public int Rb_DelSurveyQuestion([Parameter(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionAddMessage")]
		[return: Parameter(DbType="Int")]
		public int Rb_DiscussionAddMessage([Parameter(Name="Mode", DbType="Text")] string mode, [Parameter(Name="ItemID", DbType="Int")] ref System.Nullable<int> itemID, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Body", DbType="NVarChar(3000)")] string body, [Parameter(Name="ParentID", DbType="Int")] System.Nullable<int> parentID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mode, itemID, title, body, parentID, userName, moduleID);
			itemID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionDeleteChildren")]
		[return: Parameter(DbType="Int")]
		public int Rb_DiscussionDeleteChildren([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="NumDeletedMessages", DbType="Int")] ref System.Nullable<int> numDeletedMessages)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, numDeletedMessages);
			numDeletedMessages = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionDeleteMessage")]
		[return: Parameter(DbType="Int")]
		public int Rb_DiscussionDeleteMessage([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionGetMessage")]
		public ISingleResult<Rb_DiscussionGetMessageResult> Rb_DiscussionGetMessage([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<Rb_DiscussionGetMessageResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionGetNextMessageID")]
		[return: Parameter(DbType="Int")]
		public int Rb_DiscussionGetNextMessageID([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="NextID", DbType="Int")] ref System.Nullable<int> nextID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, nextID);
			nextID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionGetPrevMessageID")]
		[return: Parameter(DbType="Int")]
		public int Rb_DiscussionGetPrevMessageID([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="PrevID", DbType="Int")] ref System.Nullable<int> prevID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, prevID);
			prevID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionGetThreadMessages")]
		[ResultType(typeof(Rb_DiscussionGetThreadMessagesResult))]
		public IMultipleResults Rb_DiscussionGetThreadMessages([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="IncludeRoot", DbType="Char(1)")] string includeRoot)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, includeRoot);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionGetTopLevelMessages")]
		public ISingleResult<Rb_DiscussionGetTopLevelMessagesResult> Rb_DiscussionGetTopLevelMessages([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_DiscussionGetTopLevelMessagesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_DiscussionIncrementViewCount")]
		public ISingleResult<Rb_DiscussionIncrementViewCountResult> Rb_DiscussionIncrementViewCount([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<Rb_DiscussionIncrementViewCountResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Documents_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_Documents_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Documents_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Documents_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Documents_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Documents_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_EcommerceGetMerchant")]
		public ISingleResult<Rb_EcommerceGetMerchantResult> Rb_EcommerceGetMerchant([Parameter(Name="MerchantID", DbType="NVarChar(25)")] string merchantID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), merchantID);
			return ((ISingleResult<Rb_EcommerceGetMerchantResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Events_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_Events_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Events_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Events_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Events_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Events_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_ExistAddSurvey")]
		public ISingleResult<Rb_ExistAddSurveyResult> Rb_ExistAddSurvey([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="SurveyDesc", DbType="NVarChar(500)")] ref string surveyDesc)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, createdByUser, surveyDesc);
			surveyDesc = ((string)(result.GetParameterValue(2)));
			return ((ISingleResult<Rb_ExistAddSurveyResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_ExistSurvey")]
		public ISingleResult<Rb_ExistSurveyResult> Rb_ExistSurvey([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="ROWCOUNT", DbType="Int")] ref System.Nullable<int> rOWCOUNT)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, rOWCOUNT);
			rOWCOUNT = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<Rb_ExistSurveyResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_FAQs_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_FAQs_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_FAQs_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_FAQs_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_FAQs_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_FAQs_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_FindModulesByGuid")]
		public ISingleResult<Rb_FindModulesByGuidResult> Rb_FindModulesByGuid([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Guid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> guid)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, guid);
			return ((ISingleResult<Rb_FindModulesByGuidResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAnnoucements_Summary")]
		public ISingleResult<Rb_GetAnnoucements_SummaryResult> Rb_GetAnnoucements_Summary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetAnnoucements_SummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetArticles")]
		[ResultType(typeof(Rb_GetArticlesResult))]
		public IMultipleResults Rb_GetArticles([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetArticles_Summary")]
		public ISingleResult<Rb_GetArticles_SummaryResult> Rb_GetArticles_Summary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetArticles_SummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetArticlesAll")]
		[ResultType(typeof(Rb_GetArticlesAllResult))]
		public IMultipleResults Rb_GetArticlesAll([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAuthAddRoles")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetAuthAddRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="AccessRoles", DbType="NVarChar(256)")] ref string accessRoles, [Parameter(Name="AddRoles", DbType="NVarChar(256)")] ref string addRoles)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, moduleID, accessRoles, addRoles);
			accessRoles = ((string)(result.GetParameterValue(2)));
			addRoles = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAuthApproveRoles")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetAuthApproveRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="AccessRoles", DbType="NVarChar(256)")] ref string accessRoles, [Parameter(Name="ApproveRoles", DbType="NVarChar(256)")] ref string approveRoles)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, moduleID, accessRoles, approveRoles);
			accessRoles = ((string)(result.GetParameterValue(2)));
			approveRoles = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAuthDeleteRoles")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetAuthDeleteRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="AccessRoles", DbType="NVarChar(256)")] ref string accessRoles, [Parameter(Name="DeleteRoles", DbType="NVarChar(256)")] ref string deleteRoles)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, moduleID, accessRoles, deleteRoles);
			accessRoles = ((string)(result.GetParameterValue(2)));
			deleteRoles = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAuthEditRoles")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetAuthEditRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="AccessRoles", DbType="NVarChar(256)")] ref string accessRoles, [Parameter(Name="EditRoles", DbType="NVarChar(256)")] ref string editRoles)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, moduleID, accessRoles, editRoles);
			accessRoles = ((string)(result.GetParameterValue(2)));
			editRoles = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAuthPropertiesRoles")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetAuthPropertiesRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="AccessRoles", DbType="NVarChar(256)")] ref string accessRoles, [Parameter(Name="PropertiesRoles", DbType="NVarChar(256)")] ref string propertiesRoles)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, moduleID, accessRoles, propertiesRoles);
			accessRoles = ((string)(result.GetParameterValue(2)));
			propertiesRoles = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAuthPublishingRoles")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetAuthPublishingRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="AccessRoles", DbType="NVarChar(256)")] ref string accessRoles, [Parameter(Name="PublishingRoles", DbType="NVarChar(256)")] ref string publishingRoles)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, moduleID, accessRoles, publishingRoles);
			accessRoles = ((string)(result.GetParameterValue(2)));
			publishingRoles = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetAuthViewRoles")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetAuthViewRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="AccessRoles", DbType="NVarChar(256)")] ref string accessRoles, [Parameter(Name="ViewRoles", DbType="NVarChar(256)")] ref string viewRoles)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, moduleID, accessRoles, viewRoles);
			accessRoles = ((string)(result.GetParameterValue(2)));
			viewRoles = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetBlogs_Summary")]
		public ISingleResult<Rb_GetBlogs_SummaryResult> Rb_GetBlogs_Summary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetBlogs_SummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetBooks")]
		public ISingleResult<Rb_GetBooksResult> Rb_GetBooks([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetBooksResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetComponentModule")]
		public ISingleResult<Rb_GetComponentModuleResult> Rb_GetComponentModule([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetComponentModuleResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetContacts")]
		[ResultType(typeof(Rb_GetContactsResult))]
		public IMultipleResults Rb_GetContacts([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetContacts_Summary")]
		public ISingleResult<Rb_GetContacts_SummaryResult> Rb_GetContacts_Summary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetContacts_SummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetCountries")]
		[ResultType(typeof(Rb_GetCountriesResult))]
		public IMultipleResults Rb_GetCountries([Parameter(Name="SortBy", DbType="Int")] System.Nullable<int> sortBy)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sortBy);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetCountriesFiltered")]
		[ResultType(typeof(Rb_GetCountriesFilteredResult))]
		public IMultipleResults Rb_GetCountriesFiltered([Parameter(Name="Filter", DbType="NVarChar(1000)")] string filter, [Parameter(Name="SortBy", DbType="Int")] System.Nullable<int> sortBy)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filter, sortBy);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetCulture")]
		public ISingleResult<Rb_GetCultureResult> Rb_GetCulture([Parameter(Name="CountryID", DbType="NChar(2)")] string countryID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), countryID);
			return ((ISingleResult<Rb_GetCultureResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetCurrentDbVersion")]
		public ISingleResult<Rb_GetCurrentDbVersionResult> Rb_GetCurrentDbVersion()
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Rb_GetCurrentDbVersionResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetCurrentModuleDefinitions")]
		public ISingleResult<Rb_GetCurrentModuleDefinitionsResult> Rb_GetCurrentModuleDefinitions([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID);
			return ((ISingleResult<Rb_GetCurrentModuleDefinitionsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetDefaultCulture")]
		public ISingleResult<Rb_GetDefaultCultureResult> Rb_GetDefaultCulture([Parameter(Name="CountryID", DbType="NChar(2)")] string countryID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), countryID);
			return ((ISingleResult<Rb_GetDefaultCultureResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetDocumentContent")]
		[ResultType(typeof(Rb_GetDocumentContentResult))]
		public IMultipleResults Rb_GetDocumentContent([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetDocuments")]
		[ResultType(typeof(Rb_GetDocumentsResult))]
		public IMultipleResults Rb_GetDocuments([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetDocuments_Summary")]
		public ISingleResult<Rb_GetDocuments_SummaryResult> Rb_GetDocuments_Summary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetDocuments_SummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetEnhancedHtml")]
		[ResultType(typeof(Rb_GetEnhancedHtmlResult))]
		public IMultipleResults Rb_GetEnhancedHtml([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetEnhancedLinks")]
		[ResultType(typeof(Rb_GetEnhancedLinksResult))]
		public IMultipleResults Rb_GetEnhancedLinks([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetEnhancedLocalizedHtml")]
		[ResultType(typeof(Rb_GetEnhancedLocalizedHtmlResult))]
		public IMultipleResults Rb_GetEnhancedLocalizedHtml([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="CultureCode", DbType="Int")] System.Nullable<int> cultureCode, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, cultureCode, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetEvents_Summary")]
		public ISingleResult<Rb_GetEvents_SummaryResult> Rb_GetEvents_Summary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetEvents_SummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetFAQ")]
		public ISingleResult<Rb_GetFAQResult> Rb_GetFAQ([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetFAQResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetFAQs_Summary")]
		public ISingleResult<Rb_GetFAQs_SummaryResult> Rb_GetFAQs_Summary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetFAQs_SummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetGeneralModuleDefinitionByName")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetGeneralModuleDefinitionByName([Parameter(Name="FriendlyName", DbType="NVarChar(128)")] string friendlyName, [Parameter(Name="ModuleID", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), friendlyName, moduleID);
			moduleID = ((System.Nullable<System.Guid>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetGuid")]
		public ISingleResult<Rb_GetGuidResult> Rb_GetGuid([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetGuidResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetHtmlText")]
		[ResultType(typeof(Rb_GetHtmlTextResult))]
		public IMultipleResults Rb_GetHtmlText([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetLinks")]
		[ResultType(typeof(Rb_GetLinksResult))]
		public IMultipleResults Rb_GetLinks([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetMilestones")]
		[ResultType(typeof(Rb_GetMilestonesResult))]
		public IMultipleResults Rb_GetMilestones([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModuleDefinitionByGuid")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetModuleDefinitionByGuid([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Guid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> guid, [Parameter(Name="ModuleID", DbType="Int")] ref System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, guid, moduleID);
			moduleID = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModuleDefinitionByID")]
		public ISingleResult<Rb_GetModuleDefinitionByIDResult> Rb_GetModuleDefinitionByID([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetModuleDefinitionByIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModuleDefinitionByName")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetModuleDefinitionByName([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="FriendlyName", DbType="NVarChar(128)")] string friendlyName, [Parameter(Name="ModuleID", DbType="Int")] ref System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, friendlyName, moduleID);
			moduleID = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModuleDefinitions")]
		public ISingleResult<Rb_GetModuleDefinitionsResult> Rb_GetModuleDefinitions()
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Rb_GetModuleDefinitionsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModuleInUse")]
		public ISingleResult<Rb_GetModuleInUseResult> Rb_GetModuleInUse([Parameter(Name="ModuleID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetModuleInUseResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModulesAllPortals")]
		public ISingleResult<Rb_GetModulesAllPortalsResult> Rb_GetModulesAllPortals()
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Rb_GetModulesAllPortalsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModulesInTab")]
		public ISingleResult<Rb_GetModulesInTabResult> Rb_GetModulesInTab([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="TabID", DbType="Int")] System.Nullable<int> tabID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, tabID);
			return ((ISingleResult<Rb_GetModulesInTabResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModulesSinglePortal")]
		public ISingleResult<Rb_GetModulesSinglePortalResult> Rb_GetModulesSinglePortal([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID);
			return ((ISingleResult<Rb_GetModulesSinglePortalResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetModuleUserSettings")]
		public ISingleResult<Rb_GetModuleUserSettingsResult> Rb_GetModuleUserSettings([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userID);
			return ((ISingleResult<Rb_GetModuleUserSettingsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetMonitoringEntries")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetMonitoringEntries([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [Parameter(Name="ReportType", DbType="VarChar(50)")] string reportType, [Parameter(Name="CurrentTabID", DbType="BigInt")] System.Nullable<long> currentTabID, [Parameter(Name="IPAddress", DbType="VarChar(16)")] string iPAddress, [Parameter(Name="IncludeMonitorPage", DbType="Bit")] System.Nullable<bool> includeMonitorPage, [Parameter(Name="IncludeAdminUser", DbType="Bit")] System.Nullable<bool> includeAdminUser, [Parameter(Name="IncludePageRequests", DbType="Bit")] System.Nullable<bool> includePageRequests, [Parameter(Name="IncludeLogon", DbType="Bit")] System.Nullable<bool> includeLogon, [Parameter(Name="IncludeLogoff", DbType="Bit")] System.Nullable<bool> includeLogoff, [Parameter(Name="IncludeIPAddress", DbType="Bit")] System.Nullable<bool> includeIPAddress)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, startDate, endDate, reportType, currentTabID, iPAddress, includeMonitorPage, includeAdminUser, includePageRequests, includeLogon, includeLogoff, includeIPAddress);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetNumberOfActiveUsers")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetNumberOfActiveUsers([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="MinutesToCheck", DbType="Int")] System.Nullable<int> minutesToCheck, [Parameter(Name="NoOfUsers", DbType="Int")] ref System.Nullable<int> noOfUsers)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, minutesToCheck, noOfUsers);
			noOfUsers = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetOrderDetails")]
		public ISingleResult<Rb_GetOrderDetailsResult> Rb_GetOrderDetails([Parameter(Name="OrderID", DbType="Char(24)")] string orderID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID);
			return ((ISingleResult<Rb_GetOrderDetailsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetOrders")]
		public ISingleResult<Rb_GetOrdersResult> Rb_GetOrders([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetOrdersResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetOrdersByUser")]
		public ISingleResult<Rb_GetOrdersByUserResult> Rb_GetOrdersByUser([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userID);
			return ((ISingleResult<Rb_GetOrdersByUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetPortalRoles")]
		public ISingleResult<Rb_GetPortalRolesResult> Rb_GetPortalRoles([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID);
			return ((ISingleResult<Rb_GetPortalRolesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetPortalSettingsLangList")]
		public ISingleResult<Rb_GetPortalSettingsLangListResult> Rb_GetPortalSettingsLangList([Parameter(Name="PortalAlias", DbType="NVarChar(50)")] string portalAlias)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalAlias);
			return ((ISingleResult<Rb_GetPortalSettingsLangListResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetPortalSettingsPortalID")]
		public ISingleResult<Rb_GetPortalSettingsPortalIDResult> Rb_GetPortalSettingsPortalID([Parameter(Name="PortalID", DbType="NVarChar(50)")] string portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID);
			return ((ISingleResult<Rb_GetPortalSettingsPortalIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetPortalsModules")]
		public ISingleResult<Rb_GetPortalsModulesResult> Rb_GetPortalsModules([Parameter(Name="ModuleID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetPortalsModulesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetProducts")]
		[ResultType(typeof(Rb_GetProductsResult))]
		public IMultipleResults Rb_GetProducts([Parameter(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID, moduleID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetRelatedTables")]
		public ISingleResult<Rb_GetRelatedTablesResult> Rb_GetRelatedTables([Parameter(Name="Name", DbType="NVarChar(128)")] string name)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<Rb_GetRelatedTablesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetRoleMembership")]
		public ISingleResult<Rb_GetRoleMembershipResult> Rb_GetRoleMembership([Parameter(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
			return ((ISingleResult<Rb_GetRoleMembershipResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetRoleNonMembership")]
		public ISingleResult<Rb_GetRoleNonMembershipResult> Rb_GetRoleNonMembership([Parameter(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID, portalID);
			return ((ISingleResult<Rb_GetRoleNonMembershipResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetRolesByUser")]
		public ISingleResult<Rb_GetRolesByUserResult> Rb_GetRolesByUser([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Email", DbType="NVarChar(100)")] string email)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, email);
			return ((ISingleResult<Rb_GetRolesByUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSearchableModules")]
		public ISingleResult<Rb_GetSearchableModulesResult> Rb_GetSearchableModules([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID);
			return ((ISingleResult<Rb_GetSearchableModulesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleAnnouncement")]
		[ResultType(typeof(Rb_GetSingleAnnouncementResult))]
		public IMultipleResults Rb_GetSingleAnnouncement([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleArticle")]
		[ResultType(typeof(Rb_GetSingleArticleResult))]
		public IMultipleResults Rb_GetSingleArticle([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleBook")]
		public ISingleResult<Rb_GetSingleBookResult> Rb_GetSingleBook([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<Rb_GetSingleBookResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleContact")]
		[ResultType(typeof(Rb_GetSingleContactResult))]
		public IMultipleResults Rb_GetSingleContact([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleCountry")]
		public ISingleResult<Rb_GetSingleCountryResult> Rb_GetSingleCountry([Parameter(Name="IDState", DbType="Int")] System.Nullable<int> iDState, [Parameter(Name="IDLang", DbType="NChar(2)")] string iDLang)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDState, iDLang);
			return ((ISingleResult<Rb_GetSingleCountryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleDocument")]
		[ResultType(typeof(Rb_GetSingleDocumentResult))]
		public IMultipleResults Rb_GetSingleDocument([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleEnhancedHtml")]
		[ResultType(typeof(Rb_GetSingleEnhancedHtmlResult))]
		public IMultipleResults Rb_GetSingleEnhancedHtml([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleEnhancedLink")]
		[ResultType(typeof(Rb_GetSingleEnhancedLinkResult))]
		public IMultipleResults Rb_GetSingleEnhancedLink([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleEvent")]
		[ResultType(typeof(Rb_GetSingleEventResult))]
		public IMultipleResults Rb_GetSingleEvent([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleFAQ")]
		public ISingleResult<Rb_GetSingleFAQResult> Rb_GetSingleFAQ([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<Rb_GetSingleFAQResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleLink")]
		[ResultType(typeof(Rb_GetSingleLinkResult))]
		public IMultipleResults Rb_GetSingleLink([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleMilestones")]
		[ResultType(typeof(Rb_GetSingleMilestonesResult))]
		public IMultipleResults Rb_GetSingleMilestones([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleOrder")]
		public ISingleResult<Rb_GetSingleOrderResult> Rb_GetSingleOrder([Parameter(Name="OrderID", DbType="Char(24)")] string orderID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID);
			return ((ISingleResult<Rb_GetSingleOrderResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSinglePicture")]
		[ResultType(typeof(Rb_GetSinglePictureResult))]
		public IMultipleResults Rb_GetSinglePicture([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleProduct")]
		[ResultType(typeof(Rb_GetSingleProductResult))]
		public IMultipleResults Rb_GetSingleProduct([Parameter(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [Parameter(Name="WorkflowVersion", DbType="Int")] System.Nullable<int> workflowVersion)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, workflowVersion);
			return ((IMultipleResults)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleRole")]
		public ISingleResult<Rb_GetSingleRoleResult> Rb_GetSingleRole([Parameter(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
			return ((ISingleResult<Rb_GetSingleRoleResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleTask")]
		public ISingleResult<Rb_GetSingleTaskResult> Rb_GetSingleTask([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<Rb_GetSingleTaskResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleUser")]
		public ISingleResult<Rb_GetSingleUserResult> Rb_GetSingleUser([Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="IDLang", DbType="NChar(2)")] string iDLang)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, portalID, iDLang);
			return ((ISingleResult<Rb_GetSingleUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleUserDefinedField")]
		public ISingleResult<Rb_GetSingleUserDefinedFieldResult> Rb_GetSingleUserDefinedField([Parameter(Name="UserDefinedFieldID", DbType="Int")] System.Nullable<int> userDefinedFieldID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedFieldID);
			return ((ISingleResult<Rb_GetSingleUserDefinedFieldResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSingleUserDefinedRow")]
		public ISingleResult<Rb_GetSingleUserDefinedRowResult> Rb_GetSingleUserDefinedRow([Parameter(Name="UserDefinedRowID", DbType="Int")] System.Nullable<int> userDefinedRowID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedRowID, moduleID);
			return ((ISingleResult<Rb_GetSingleUserDefinedRowResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyAnswers")]
		public ISingleResult<Rb_GetSurveyAnswersResult> Rb_GetSurveyAnswers([Parameter(Name="SurveyID", DbType="Int")] System.Nullable<int> surveyID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), surveyID);
			return ((ISingleResult<Rb_GetSurveyAnswersResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyAnswersNum")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetSurveyAnswersNum([Parameter(Name="SurveyID", DbType="Int")] System.Nullable<int> surveyID, [Parameter(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [Parameter(Name="NumAnswer", DbType="Int")] ref System.Nullable<int> numAnswer)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), surveyID, questionID, numAnswer);
			numAnswer = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyDimArray")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetSurveyDimArray([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="TypeOption", DbType="NVarChar(2)")] string typeOption, [Parameter(Name="DimArray", DbType="Int")] ref System.Nullable<int> dimArray)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, typeOption, dimArray);
			dimArray = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyID")]
		public ISingleResult<Rb_GetSurveyIDResult> Rb_GetSurveyID([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="SurveyID", DbType="Int")] ref System.Nullable<int> surveyID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, surveyID);
			surveyID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<Rb_GetSurveyIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyOptionList")]
		public ISingleResult<Rb_GetSurveyOptionListResult> Rb_GetSurveyOptionList([Parameter(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID);
			return ((ISingleResult<Rb_GetSurveyOptionListResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyOptions")]
		public ISingleResult<Rb_GetSurveyOptionsResult> Rb_GetSurveyOptions([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="TypeOption", DbType="NVarChar(2)")] string typeOption)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, typeOption);
			return ((ISingleResult<Rb_GetSurveyOptionsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyQuestionList")]
		public ISingleResult<Rb_GetSurveyQuestionListResult> Rb_GetSurveyQuestionList([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetSurveyQuestionListResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetSurveyQuestions")]
		public ISingleResult<Rb_GetSurveyQuestionsResult> Rb_GetSurveyQuestions([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetSurveyQuestionsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetTabCrumbs")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetTabCrumbs([Parameter(Name="PageID", DbType="Int")] System.Nullable<int> pageID, [Parameter(Name="CrumbsXML", DbType="NVarChar(4000)")] ref string crumbsXML)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageID, crumbsXML);
			crumbsXML = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetTabsinTab")]
		public ISingleResult<Rb_GetTabsinTabResult> Rb_GetTabsinTab([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="PageID", DbType="Int")] System.Nullable<int> pageID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, pageID);
			return ((ISingleResult<Rb_GetTabsinTabResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetTasks")]
		public ISingleResult<Rb_GetTasksResult> Rb_GetTasks([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetTasksResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetUserDefinedFields")]
		public ISingleResult<Rb_GetUserDefinedFieldsResult> Rb_GetUserDefinedFields([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetUserDefinedFieldsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetUserDefinedRows")]
		public ISingleResult<Rb_GetUserDefinedRowsResult> Rb_GetUserDefinedRows([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_GetUserDefinedRowsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetUserForOrder")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetUserForOrder([Parameter(Name="OrderID", DbType="Int")] System.Nullable<int> orderID, [Parameter(Name="UserID", DbType="Int")] ref System.Nullable<int> userID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, userID);
			userID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetUsers")]
		public ISingleResult<Rb_GetUsersResult> Rb_GetUsers([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID);
			return ((ISingleResult<Rb_GetUsersResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetUsersCount")]
		[return: Parameter(DbType="Int")]
		public int Rb_GetUsersCount([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="UsersCount", DbType="Int")] ref System.Nullable<int> usersCount)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, usersCount);
			usersCount = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_GetUsersNoRole")]
		public ISingleResult<Rb_GetUsersNoRoleResult> Rb_GetUsersNoRole([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID);
			return ((ISingleResult<Rb_GetUsersNoRoleResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_HashPasswordc")]
		[return: Parameter(DbType="Int")]
		public int Rb_HashPasswordc([Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Password", DbType="VarChar(40)")] string password, [Parameter(Name="Salt", DbType="VarChar(10)")] string salt)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, salt);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_HashPasswords")]
		[return: Parameter(DbType="Int")]
		public int Rb_HashPasswords([Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Password", DbType="VarChar(40)")] string password, [Parameter(Name="Salt", DbType="VarChar(10)")] string salt)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, salt);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_MoveModuleToNewTab")]
		[return: Parameter(DbType="Int")]
		public int Rb_MoveModuleToNewTab([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="TabID", DbType="Int")] System.Nullable<int> tabID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, tabID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_ProductsChangeCategory")]
		[return: Parameter(DbType="Int")]
		public int Rb_ProductsChangeCategory([Parameter(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [Parameter(Name="NewCategoryID", DbType="Int")] System.Nullable<int> newCategoryID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID, newCategoryID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Reject")]
		[return: Parameter(DbType="Int")]
		public int Rb_Reject([Parameter(DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_RequestApproval")]
		[return: Parameter(DbType="Int")]
		public int Rb_RequestApproval([Parameter(DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_SendNewsletterTo")]
		public ISingleResult<Rb_SendNewsletterToResult> Rb_SendNewsletterTo([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Email", DbType="NVarChar(100)")] string email)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, email);
			return ((ISingleResult<Rb_SendNewsletterToResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_SetLastModified")]
		[return: Parameter(DbType="Int")]
		public int Rb_SetLastModified([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="LastModifiedBy", DbType="NVarChar(256)")] string lastModifiedBy)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, lastModifiedBy);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Tasks_CopyAll")]
		[return: Parameter(DbType="Int")]
		public int Rb_Tasks_CopyAll([Parameter(Name="SourceModuleID", DbType="Int")] System.Nullable<int> sourceModuleID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceModuleID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Tasks_CopyItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Tasks_CopyItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Tasks_GetSummary")]
		public ISingleResult<Rb_Tasks_GetSummaryResult> Rb_Tasks_GetSummary([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID);
			return ((ISingleResult<Rb_Tasks_GetSummaryResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_Tasks_MoveItem")]
		[return: Parameter(DbType="Int")]
		public int Rb_Tasks_MoveItem([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="TargetModuleID", DbType="Int")] System.Nullable<int> targetModuleID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, targetModuleID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateAnnouncement")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateAnnouncement([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(150)")] string title, [Parameter(Name="MoreLink", DbType="NVarChar(150)")] string moreLink, [Parameter(Name="MobileMoreLink", DbType="NVarChar(150)")] string mobileMoreLink, [Parameter(Name="ExpireDate", DbType="DateTime")] System.Nullable<System.DateTime> expireDate, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, title, moreLink, mobileMoreLink, expireDate, description);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateArticle")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateArticle([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Subtitle", DbType="NVarChar(200)")] string subtitle, [Parameter(Name="Abstract", DbType="NText")] string @abstract, [Parameter(Name="Description", DbType="NText")] string description, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="ExpireDate", DbType="DateTime")] System.Nullable<System.DateTime> expireDate, [Parameter(Name="IsInNewsletter", DbType="Bit")] System.Nullable<bool> isInNewsletter, [Parameter(Name="MoreLink", DbType="NVarChar(150)")] string moreLink)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, userName, title, subtitle, @abstract, description, startDate, expireDate, isInNewsletter, moreLink);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateBook")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateBook([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="ISBN", DbType="NVarChar(10)")] string iSBN, [Parameter(Name="Caption", DbType="NText")] string caption)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, createdByUser, iSBN, caption);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateComponentModule")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateComponentModule([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Component", DbType="NVarChar(2000)")] string component)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, createdByUser, title, component);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateContact")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateContact([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Name", DbType="NVarChar(50)")] string name, [Parameter(Name="Role", DbType="NVarChar(100)")] string role, [Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Contact1", DbType="NVarChar(250)")] string contact1, [Parameter(Name="Contact2", DbType="NVarChar(250)")] string contact2, [Parameter(Name="Fax", DbType="NVarChar(250)")] string fax, [Parameter(Name="Address", DbType="NVarChar(250)")] string address)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, name, role, email, contact1, contact2, fax, address);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateDocument")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateDocument([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="FileFriendlyName", DbType="NVarChar(150)")] string fileFriendlyName, [Parameter(Name="FileNameUrl", DbType="NVarChar(250)")] string fileNameUrl, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Category", DbType="NVarChar(50)")] string category, [Parameter(Name="Content", DbType="Image")] System.Data.Linq.Binary content, [Parameter(Name="ContentType", DbType="NVarChar(50)")] string contentType, [Parameter(Name="ContentSize", DbType="Int")] System.Nullable<int> contentSize)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, fileFriendlyName, fileNameUrl, userName, category, content, contentType, contentSize);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateEnhancedHtml")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateEnhancedHtml([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="CultureCode", DbType="Int")] System.Nullable<int> cultureCode, [Parameter(Name="DesktopHtml", DbType="NText")] string desktopHtml)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, title, viewOrder, cultureCode, desktopHtml);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateEnhancedLink")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateEnhancedLink([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Url", DbType="NVarChar(800)")] string url, [Parameter(Name="MobileUrl", DbType="NVarChar(250)")] string mobileUrl, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description, [Parameter(Name="ImageUrl", DbType="NVarChar(250)")] string imageUrl, [Parameter(Name="Clicks", DbType="Int")] System.Nullable<int> clicks, [Parameter(Name="Target", DbType="NVarChar(10)")] string target)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, title, url, mobileUrl, viewOrder, description, imageUrl, clicks, target);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateEvent")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateEvent([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="AllDay", DbType="Bit")] System.Nullable<bool> allDay, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="StartTime", DbType="NVarChar(8)")] string startTime, [Parameter(Name="ExpireDate", DbType="DateTime")] System.Nullable<System.DateTime> expireDate, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description, [Parameter(Name="WhereWhen", DbType="NVarChar(100)")] string whereWhen)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, title, allDay, startDate, startTime, expireDate, description, whereWhen);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateFAQ")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateFAQ([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Question", DbType="NVarChar(500)")] string question, [Parameter(Name="Answer", DbType="NText")] string answer)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, question, answer);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateHtmlText")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateHtmlText([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="DesktopHtml", DbType="NText")] string desktopHtml, [Parameter(Name="MobileSummary", DbType="NText")] string mobileSummary, [Parameter(Name="MobileDetails", DbType="NText")] string mobileDetails)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, desktopHtml, mobileSummary, mobileDetails);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateLastVisit")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateLastVisit([Parameter(Name="Email", DbType="VarChar(100)")] string email, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, portalID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateLink")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateLink([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Url", DbType="NVarChar(800)")] string url, [Parameter(Name="MobileUrl", DbType="NVarChar(250)")] string mobileUrl, [Parameter(Name="ViewOrder", DbType="Int")] System.Nullable<int> viewOrder, [Parameter(Name="Description", DbType="NVarChar(2000)")] string description, [Parameter(Name="Target", DbType="NVarChar(10)")] string target)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, title, url, mobileUrl, viewOrder, description, target);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateMilestones")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateMilestones([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="EstCompleteDate", DbType="DateTime")] System.Nullable<System.DateTime> estCompleteDate, [Parameter(Name="Status", DbType="NVarChar(100)")] string status)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, createdByUser, createdDate, title, estCompleteDate, status);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateModuleDefinitions")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateModuleDefinitions([Parameter(Name="GeneralModDefID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> generalModDefID, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(DbType="Bit")] System.Nullable<bool> ischecked)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), generalModDefID, portalID, ischecked);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateModuleSetting")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateModuleSetting([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="SettingName", DbType="NVarChar(50)")] string settingName, [Parameter(Name="SettingValue", DbType="NVarChar(1500)")] string settingValue)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, settingName, settingValue);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateModuleUserSetting")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateModuleUserSetting([Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="SettingName", DbType="NVarChar(50)")] string settingName, [Parameter(Name="SettingValue", DbType="NVarChar(1500)")] string settingValue)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleID, userID, settingName, settingValue);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateOrder")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateOrder([Parameter(Name="OrderID", DbType="Char(24)")] string orderID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="TotalGoods", DbType="Money")] System.Nullable<decimal> totalGoods, [Parameter(Name="TotalShipping", DbType="Money")] System.Nullable<decimal> totalShipping, [Parameter(Name="TotalTaxes", DbType="Money")] System.Nullable<decimal> totalTaxes, [Parameter(Name="TotalExpenses", DbType="Money")] System.Nullable<decimal> totalExpenses, [Parameter(Name="ISOCurrencySymbol", DbType="Char(3)")] string iSOCurrencySymbol, [Parameter(Name="Status", DbType="Int")] System.Nullable<int> status, [Parameter(Name="PaymentMethod", DbType="NVarChar(50)")] string paymentMethod, [Parameter(Name="ShippingMethod", DbType="NVarChar(50)")] string shippingMethod, [Parameter(Name="TotalWeight", DbType="Real")] System.Nullable<float> totalWeight, [Parameter(Name="WeightUnit", DbType="NVarChar(15)")] string weightUnit, [Parameter(Name="ShippingData", DbType="NText")] string shippingData, [Parameter(Name="BillingData", DbType="NText")] string billingData)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, userID, totalGoods, totalShipping, totalTaxes, totalExpenses, iSOCurrencySymbol, status, paymentMethod, shippingMethod, totalWeight, weightUnit, shippingData, billingData);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdatePicture")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdatePicture([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="DisplayOrder", DbType="Int")] System.Nullable<int> displayOrder, [Parameter(Name="MetadataXml", DbType="NVarChar(3000)")] string metadataXml, [Parameter(Name="ShortDescription", DbType="NVarChar(256)")] string shortDescription, [Parameter(Name="Keywords", DbType="NVarChar(256)")] string keywords, [Parameter(Name="CreatedByUser", DbType="NVarChar(100)")] string createdByUser, [Parameter(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, moduleID, displayOrder, metadataXml, shortDescription, keywords, createdByUser, createdDate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdatePortalInfo")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdatePortalInfo([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="PortalName", DbType="NVarChar(128)")] string portalName, [Parameter(Name="PortalPath", DbType="NVarChar(128)")] string portalPath, [Parameter(Name="AlwaysShowEditButton", DbType="Bit")] System.Nullable<bool> alwaysShowEditButton)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, portalName, portalPath, alwaysShowEditButton);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdatePortalSetting")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdatePortalSetting([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="SettingName", DbType="NVarChar(50)")] string settingName, [Parameter(Name="SettingValue", DbType="NVarChar(1500)")] string settingValue)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, settingName, settingValue);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateProduct")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateProduct([Parameter(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [Parameter(Name="DisplayOrder", DbType="Int")] System.Nullable<int> displayOrder, [Parameter(Name="ModelNumber", DbType="NVarChar(256)")] string modelNumber, [Parameter(Name="ModelName", DbType="NVarChar(256)")] string modelName, [Parameter(Name="UnitPrice", DbType="Money")] System.Nullable<decimal> unitPrice, [Parameter(Name="FeaturedItem", DbType="Bit")] System.Nullable<bool> featuredItem, [Parameter(Name="LongDescription", DbType="NText")] string longDescription, [Parameter(Name="ShortDescription", DbType="NText")] string shortDescription, [Parameter(Name="MetadataXml", DbType="NText")] string metadataXml, [Parameter(Name="Weight", DbType="Float")] System.Nullable<double> weight, [Parameter(Name="TaxRate", DbType="Float")] System.Nullable<double> taxRate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, moduleID, categoryID, displayOrder, modelNumber, modelName, unitPrice, featuredItem, longDescription, shortDescription, metadataXml, weight, taxRate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateSurveyOptionOrder")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateSurveyOptionOrder([Parameter(Name="OptionID", DbType="Int")] System.Nullable<int> optionID, [Parameter(Name="Order", DbType="Int")] System.Nullable<int> order)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), optionID, order);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateSurveyQuestionOrder")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateSurveyQuestionOrder([Parameter(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [Parameter(Name="Order", DbType="Int")] System.Nullable<int> order)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID, order);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateTask")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateTask([Parameter(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [Parameter(Name="UserName", DbType="NVarChar(100)")] string userName, [Parameter(Name="AssignedTo", DbType="NVarChar(50)")] string assignedTo, [Parameter(Name="Title", DbType="NVarChar(100)")] string title, [Parameter(Name="Description", DbType="NText")] string description, [Parameter(Name="Status", DbType="NVarChar(20)")] string status, [Parameter(Name="Priority", DbType="NVarChar(20)")] string priority, [Parameter(Name="PercentComplete", DbType="Int")] System.Nullable<int> percentComplete, [Parameter(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [Parameter(Name="DueDate", DbType="DateTime")] System.Nullable<System.DateTime> dueDate)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, userName, assignedTo, title, description, status, priority, percentComplete, startDate, dueDate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUser")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUser([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="Name", DbType="NVarChar(50)")] string name, [Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Password", DbType="VarChar(40)")] string password, [Parameter(Name="Salt", DbType="VarChar(10)")] string salt, [Parameter(Name="SendNewsletter", DbType="Bit")] System.Nullable<bool> sendNewsletter)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, userID, name, email, password, salt, sendNewsletter);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserCheckEmail")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserCheckEmail([Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="CheckedEmail", DbType="TinyInt")] System.Nullable<byte> checkedEmail)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, checkedEmail);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserDefinedData")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserDefinedData([Parameter(Name="UserDefinedRowID", DbType="Int")] System.Nullable<int> userDefinedRowID, [Parameter(Name="UserDefinedFieldID", DbType="Int")] System.Nullable<int> userDefinedFieldID, [Parameter(Name="FieldValue", DbType="NVarChar(2000)")] string fieldValue)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedRowID, userDefinedFieldID, fieldValue);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserDefinedField")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserDefinedField([Parameter(Name="UserDefinedFieldID", DbType="Int")] System.Nullable<int> userDefinedFieldID, [Parameter(Name="FieldTitle", DbType="VarChar(50)")] string fieldTitle, [Parameter(Name="Visible", DbType="Bit")] System.Nullable<bool> visible, [Parameter(Name="FieldType", DbType="VarChar(20)")] string fieldType)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedFieldID, fieldTitle, visible, fieldType);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserDefinedFieldOrder")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserDefinedFieldOrder([Parameter(Name="UserDefinedFieldID", DbType="Int")] System.Nullable<int> userDefinedFieldID, [Parameter(Name="Direction", DbType="Int")] System.Nullable<int> direction)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedFieldID, direction);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserDefinedRow")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserDefinedRow([Parameter(Name="UserDefinedRowID", DbType="Int")] System.Nullable<int> userDefinedRowID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userDefinedRowID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserDeskTop")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserDeskTop([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [Parameter(Name="TabID", DbType="Int")] System.Nullable<int> tabID, [Parameter(Name="WindowState", DbType="SmallInt")] System.Nullable<short> windowState)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, userID, moduleID, tabID, windowState);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserFull")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserFull(
					[Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[Parameter(Name="OldUserID", DbType="Int")] System.Nullable<int> oldUserID, 
					[Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, 
					[Parameter(Name="Name", DbType="NVarChar(50)")] string name, 
					[Parameter(Name="Company", DbType="NVarChar(50)")] string company, 
					[Parameter(Name="Address", DbType="NVarChar(50)")] string address, 
					[Parameter(Name="City", DbType="NVarChar(50)")] string city, 
					[Parameter(Name="Zip", DbType="NVarChar(6)")] string zip, 
					[Parameter(Name="Phone", DbType="NVarChar(50)")] string phone, 
					[Parameter(Name="Fax", DbType="NVarChar(50)")] string fax, 
					[Parameter(Name="PIva", DbType="NVarChar(11)")] string pIva, 
					[Parameter(Name="CFiscale", DbType="NVarChar(16)")] string cFiscale, 
					[Parameter(Name="Email", DbType="NVarChar(100)")] string email, 
					[Parameter(Name="Password", DbType="VarChar(40)")] string password, 
					[Parameter(Name="Salt", DbType="VarChar(10)")] string salt, 
					[Parameter(Name="SendNewsletter", DbType="Bit")] System.Nullable<bool> sendNewsletter, 
					[Parameter(Name="CountryID", DbType="NChar(2)")] string countryID, 
					[Parameter(Name="StateID", DbType="Int")] System.Nullable<int> stateID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, oldUserID, portalID, name, company, address, city, zip, phone, fax, pIva, cFiscale, email, password, salt, sendNewsletter, countryID, stateID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UpdateUserFullNoPassword")]
		[return: Parameter(DbType="Int")]
		public int Rb_UpdateUserFullNoPassword([Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Name", DbType="NVarChar(50)")] string name, [Parameter(Name="Company", DbType="NVarChar(50)")] string company, [Parameter(Name="Address", DbType="NVarChar(50)")] string address, [Parameter(Name="City", DbType="NVarChar(50)")] string city, [Parameter(Name="Zip", DbType="NVarChar(6)")] string zip, [Parameter(Name="Phone", DbType="NVarChar(50)")] string phone, [Parameter(Name="Fax", DbType="NVarChar(50)")] string fax, [Parameter(Name="PIva", DbType="NVarChar(11)")] string pIva, [Parameter(Name="CFiscale", DbType="NVarChar(16)")] string cFiscale, [Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="SendNewsletter", DbType="Bit")] System.Nullable<bool> sendNewsletter, [Parameter(Name="CountryID", DbType="NChar(2)")] string countryID, [Parameter(Name="StateID", DbType="Int")] System.Nullable<int> stateID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, portalID, name, company, address, city, zip, phone, fax, pIva, cFiscale, email, sendNewsletter, countryID, stateID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UserLogin")]
		public ISingleResult<Rb_UserLoginResult> Rb_UserLogin([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Email", DbType="NVarChar(100)")] string email)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, email);
			return ((ISingleResult<Rb_UserLoginResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UserLoginByID")]
		public ISingleResult<Rb_UserLoginByIDResult> Rb_UserLoginByID([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, userID);
			return ((ISingleResult<Rb_UserLoginByIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UserLoginPlain")]
		public ISingleResult<Rb_UserLoginPlainResult> Rb_UserLoginPlain([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Email", DbType="NVarChar(100)")] string email, [Parameter(Name="Password", DbType="NVarChar(20)")] string password)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, email, password);
			return ((ISingleResult<Rb_UserLoginPlainResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.rb_UserLoginPlainByID")]
		public ISingleResult<Rb_UserLoginPlainByIDResult> Rb_UserLoginPlainByID([Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="UserID", DbType="Int")] System.Nullable<int> userID, [Parameter(Name="Password", DbType="NVarChar(20)")] string password)
		
    {
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, userID, password);
			return ((ISingleResult<Rb_UserLoginPlainByIDResult>)(result.ReturnValue));
		}
    #endregion
	}
	
	[Table(Name="dbo.vw_aspnet_Applications")]
	[DataContract()]
	public partial class Vw_aspnet_Application
	
  {
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		public Vw_aspnet_Application()
		
    {
		}
		
		[Column(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string ApplicationName
		
    {
			get
			
      {
				return this._ApplicationName;
			}
			set
			
      {
				if ((this._ApplicationName != value))
				
        {
					this._ApplicationName = value;
				}
			}
		}
		
		[Column(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string LoweredApplicationName
		
    {
			get
			
      {
				return this._LoweredApplicationName;
			}
			set
			
      {
				if ((this._LoweredApplicationName != value))
				
        {
					this._LoweredApplicationName = value;
				}
			}
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=3)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_MembershipUsers")]
	[DataContract()]
	public partial class Vw_aspnet_MembershipUser
	
  {
		
		private System.Guid _UserId;
		
		private int _PasswordFormat;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private System.Guid _ApplicationId;
		
		private string _UserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		public Vw_aspnet_MembershipUser()
		
    {
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int PasswordFormat
		
    {
			get
			
      {
				return this._PasswordFormat;
			}
			set
			
      {
				if ((this._PasswordFormat != value))
				
        {
					this._PasswordFormat = value;
				}
			}
		}
		
		[Column(Storage="_MobilePIN", DbType="NVarChar(16)")]
		[DataMember(Order=3)]
		public string MobilePIN
		
    {
			get
			
      {
				return this._MobilePIN;
			}
			set
			
      {
				if ((this._MobilePIN != value))
				
        {
					this._MobilePIN = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string LoweredEmail
		
    {
			get
			
      {
				return this._LoweredEmail;
			}
			set
			
      {
				if ((this._LoweredEmail != value))
				
        {
					this._LoweredEmail = value;
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		[DataMember(Order=6)]
		public string PasswordQuestion
		
    {
			get
			
      {
				return this._PasswordQuestion;
			}
			set
			
      {
				if ((this._PasswordQuestion != value))
				
        {
					this._PasswordQuestion = value;
				}
			}
		}
		
		[Column(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		[DataMember(Order=7)]
		public string PasswordAnswer
		
    {
			get
			
      {
				return this._PasswordAnswer;
			}
			set
			
      {
				if ((this._PasswordAnswer != value))
				
        {
					this._PasswordAnswer = value;
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit NOT NULL")]
		[DataMember(Order=8)]
		public bool IsApproved
		
    {
			get
			
      {
				return this._IsApproved;
			}
			set
			
      {
				if ((this._IsApproved != value))
				
        {
					this._IsApproved = value;
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		[DataMember(Order=9)]
		public bool IsLockedOut
		
    {
			get
			
      {
				return this._IsLockedOut;
			}
			set
			
      {
				if ((this._IsLockedOut != value))
				
        {
					this._IsLockedOut = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=10)]
		public System.DateTime CreateDate
		
    {
			get
			
      {
				return this._CreateDate;
			}
			set
			
      {
				if ((this._CreateDate != value))
				
        {
					this._CreateDate = value;
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=11)]
		public System.DateTime LastLoginDate
		
    {
			get
			
      {
				return this._LastLoginDate;
			}
			set
			
      {
				if ((this._LastLoginDate != value))
				
        {
					this._LastLoginDate = value;
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=12)]
		public System.DateTime LastPasswordChangedDate
		
    {
			get
			
      {
				return this._LastPasswordChangedDate;
			}
			set
			
      {
				if ((this._LastPasswordChangedDate != value))
				
        {
					this._LastPasswordChangedDate = value;
				}
			}
		}
		
		[Column(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=13)]
		public System.DateTime LastLockoutDate
		
    {
			get
			
      {
				return this._LastLockoutDate;
			}
			set
			
      {
				if ((this._LastLockoutDate != value))
				
        {
					this._LastLockoutDate = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		[DataMember(Order=14)]
		public int FailedPasswordAttemptCount
		
    {
			get
			
      {
				return this._FailedPasswordAttemptCount;
			}
			set
			
      {
				if ((this._FailedPasswordAttemptCount != value))
				
        {
					this._FailedPasswordAttemptCount = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		[DataMember(Order=15)]
		public System.DateTime FailedPasswordAttemptWindowStart
		
    {
			get
			
      {
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			
      {
				if ((this._FailedPasswordAttemptWindowStart != value))
				
        {
					this._FailedPasswordAttemptWindowStart = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		[DataMember(Order=16)]
		public int FailedPasswordAnswerAttemptCount
		
    {
			get
			
      {
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			
      {
				if ((this._FailedPasswordAnswerAttemptCount != value))
				
        {
					this._FailedPasswordAnswerAttemptCount = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		[DataMember(Order=17)]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		
    {
			get
			
      {
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			
      {
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				
        {
					this._FailedPasswordAnswerAttemptWindowStart = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=18)]
		public string Comment
		
    {
			get
			
      {
				return this._Comment;
			}
			set
			
      {
				if ((this._Comment != value))
				
        {
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=19)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=20)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		[DataMember(Order=21)]
		public string MobileAlias
		
    {
			get
			
      {
				return this._MobileAlias;
			}
			set
			
      {
				if ((this._MobileAlias != value))
				
        {
					this._MobileAlias = value;
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		[DataMember(Order=22)]
		public bool IsAnonymous
		
    {
			get
			
      {
				return this._IsAnonymous;
			}
			set
			
      {
				if ((this._IsAnonymous != value))
				
        {
					this._IsAnonymous = value;
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=23)]
		public System.DateTime LastActivityDate
		
    {
			get
			
      {
				return this._LastActivityDate;
			}
			set
			
      {
				if ((this._LastActivityDate != value))
				
        {
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_Profiles")]
	[DataContract()]
	public partial class Vw_aspnet_Profile
	
  {
		
		private System.Guid _UserId;
		
		private System.DateTime _LastUpdatedDate;
		
		private System.Nullable<int> _DataSize;
		
		public Vw_aspnet_Profile()
		
    {
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=2)]
		public System.DateTime LastUpdatedDate
		
    {
			get
			
      {
				return this._LastUpdatedDate;
			}
			set
			
      {
				if ((this._LastUpdatedDate != value))
				
        {
					this._LastUpdatedDate = value;
				}
			}
		}
		
		[Column(Storage="_DataSize", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> DataSize
		
    {
			get
			
      {
				return this._DataSize;
			}
			set
			
      {
				if ((this._DataSize != value))
				
        {
					this._DataSize = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_Roles")]
	[DataContract()]
	public partial class Vw_aspnet_Role
	
  {
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		public Vw_aspnet_Role()
		
    {
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string LoweredRoleName
		
    {
			get
			
      {
				return this._LoweredRoleName;
			}
			set
			
      {
				if ((this._LoweredRoleName != value))
				
        {
					this._LoweredRoleName = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_Users")]
	[DataContract()]
	public partial class Vw_aspnet_User
	
  {
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		public Vw_aspnet_User()
		
    {
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string LoweredUserName
		
    {
			get
			
      {
				return this._LoweredUserName;
			}
			set
			
      {
				if ((this._LoweredUserName != value))
				
        {
					this._LoweredUserName = value;
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		[DataMember(Order=5)]
		public string MobileAlias
		
    {
			get
			
      {
				return this._MobileAlias;
			}
			set
			
      {
				if ((this._MobileAlias != value))
				
        {
					this._MobileAlias = value;
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		[DataMember(Order=6)]
		public bool IsAnonymous
		
    {
			get
			
      {
				return this._IsAnonymous;
			}
			set
			
      {
				if ((this._IsAnonymous != value))
				
        {
					this._IsAnonymous = value;
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=7)]
		public System.DateTime LastActivityDate
		
    {
			get
			
      {
				return this._LastActivityDate;
			}
			set
			
      {
				if ((this._LastActivityDate != value))
				
        {
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_UsersInRoles")]
	[DataContract()]
	public partial class Vw_aspnet_UsersInRole
	
  {
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		public Vw_aspnet_UsersInRole()
		
    {
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_WebPartState_Paths")]
	[DataContract()]
	public partial class Vw_aspnet_WebPartState_Path
	
  {
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		public Vw_aspnet_WebPartState_Path()
		
    {
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_PathId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid PathId
		
    {
			get
			
      {
				return this._PathId;
			}
			set
			
      {
				if ((this._PathId != value))
				
        {
					this._PathId = value;
				}
			}
		}
		
		[Column(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Path
		
    {
			get
			
      {
				return this._Path;
			}
			set
			
      {
				if ((this._Path != value))
				
        {
					this._Path = value;
				}
			}
		}
		
		[Column(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string LoweredPath
		
    {
			get
			
      {
				return this._LoweredPath;
			}
			set
			
      {
				if ((this._LoweredPath != value))
				
        {
					this._LoweredPath = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_WebPartState_Shared")]
	[DataContract()]
	public partial class Vw_aspnet_WebPartState_Shared
	
  {
		
		private System.Guid _PathId;
		
		private System.Nullable<int> _DataSize;
		
		private System.DateTime _LastUpdatedDate;
		
		public Vw_aspnet_WebPartState_Shared()
		
    {
		}
		
		[Column(Storage="_PathId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid PathId
		
    {
			get
			
      {
				return this._PathId;
			}
			set
			
      {
				if ((this._PathId != value))
				
        {
					this._PathId = value;
				}
			}
		}
		
		[Column(Storage="_DataSize", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> DataSize
		
    {
			get
			
      {
				return this._DataSize;
			}
			set
			
      {
				if ((this._DataSize != value))
				
        {
					this._DataSize = value;
				}
			}
		}
		
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=3)]
		public System.DateTime LastUpdatedDate
		
    {
			get
			
      {
				return this._LastUpdatedDate;
			}
			set
			
      {
				if ((this._LastUpdatedDate != value))
				
        {
					this._LastUpdatedDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_WebPartState_User")]
	[DataContract()]
	public partial class Vw_aspnet_WebPartState_User
	
  {
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<int> _DataSize;
		
		private System.DateTime _LastUpdatedDate;
		
		public Vw_aspnet_WebPartState_User()
		
    {
		}
		
		[Column(Storage="_PathId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> PathId
		
    {
			get
			
      {
				return this._PathId;
			}
			set
			
      {
				if ((this._PathId != value))
				
        {
					this._PathId = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_DataSize", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> DataSize
		
    {
			get
			
      {
				return this._DataSize;
			}
			set
			
      {
				if ((this._DataSize != value))
				
        {
					this._DataSize = value;
				}
			}
		}
		
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=4)]
		public System.DateTime LastUpdatedDate
		
    {
			get
			
      {
				return this._LastUpdatedDate;
			}
			set
			
      {
				if ((this._LastUpdatedDate != value))
				
        {
					this._LastUpdatedDate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_AnyDataInTablesResult1
	
  {
		
		private string _Column1;
		
		public Aspnet_AnyDataInTablesResult1()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="NVarChar(17)")]
		[DataMember(Order=1)]
		public string Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_AnyDataInTablesResult2
	
  {
		
		private string _Column1;
		
		public Aspnet_AnyDataInTablesResult2()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="NVarChar(12)")]
		[DataMember(Order=1)]
		public string Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_AnyDataInTablesResult3
	
  {
		
		private string _Column1;
		
		public Aspnet_AnyDataInTablesResult3()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="NVarChar(14)")]
		[DataMember(Order=1)]
		public string Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_AnyDataInTablesResult4
	
  {
		
		private string _Column1;
		
		public Aspnet_AnyDataInTablesResult4()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="NVarChar(29)")]
		[DataMember(Order=1)]
		public string Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_AnyDataInTablesResult5
	
  {
		
		private string _Column1;
		
		public Aspnet_AnyDataInTablesResult5()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="NVarChar(22)")]
		[DataMember(Order=1)]
		public string Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_AnyDataInTablesResult6
	
  {
		
		private string _Column1;
		
		public Aspnet_AnyDataInTablesResult6()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="NVarChar(19)")]
		[DataMember(Order=1)]
		public string Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Membership_GetUserByEmailResult
	
  {
		
		private string _UserName;
		
		public Aspnet_Membership_GetUserByEmailResult()
		
    {
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		[DataMember(Order=1)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Membership_GetUserByNameResult
	
  {
		
		private string _Email;
		
		private string _PasswordQuestion;
		
		private string _Comment;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _Column7;
		
		private System.Nullable<System.DateTime> _LastPasswordChangedDate;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<bool> _IsLockedOut;
		
		private System.Nullable<System.DateTime> _LastLockoutDate;
		
		public Aspnet_Membership_GetUserByNameResult()
		
    {
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		[DataMember(Order=1)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string PasswordQuestion
		
    {
			get
			
      {
				return this._PasswordQuestion;
			}
			set
			
      {
				if ((this._PasswordQuestion != value))
				
        {
					this._PasswordQuestion = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText")]
		[DataMember(Order=3)]
		public string Comment
		
    {
			get
			
      {
				return this._Comment;
			}
			set
			
      {
				if ((this._Comment != value))
				
        {
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> IsApproved
		
    {
			get
			
      {
				return this._IsApproved;
			}
			set
			
      {
				if ((this._IsApproved != value))
				
        {
					this._IsApproved = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> CreateDate
		
    {
			get
			
      {
				return this._CreateDate;
			}
			set
			
      {
				if ((this._CreateDate != value))
				
        {
					this._CreateDate = value;
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> LastLoginDate
		
    {
			get
			
      {
				return this._LastLoginDate;
			}
			set
			
      {
				if ((this._LastLoginDate != value))
				
        {
					this._LastLoginDate = value;
				}
			}
		}
		
		[Column(Name="", Storage="_Column7", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> Column7
		
    {
			get
			
      {
				return this._Column7;
			}
			set
			
      {
				if ((this._Column7 != value))
				
        {
					this._Column7 = value;
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> LastPasswordChangedDate
		
    {
			get
			
      {
				return this._LastPasswordChangedDate;
			}
			set
			
      {
				if ((this._LastPasswordChangedDate != value))
				
        {
					this._LastPasswordChangedDate = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		[DataMember(Order=9)]
		public System.Nullable<System.Guid> UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit")]
		[DataMember(Order=10)]
		public System.Nullable<bool> IsLockedOut
		
    {
			get
			
      {
				return this._IsLockedOut;
			}
			set
			
      {
				if ((this._IsLockedOut != value))
				
        {
					this._IsLockedOut = value;
				}
			}
		}
		
		[Column(Storage="_LastLockoutDate", DbType="DateTime")]
		[DataMember(Order=11)]
		public System.Nullable<System.DateTime> LastLockoutDate
		
    {
			get
			
      {
				return this._LastLockoutDate;
			}
			set
			
      {
				if ((this._LastLockoutDate != value))
				
        {
					this._LastLockoutDate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Membership_GetUserByUserIdResult
	
  {
		
		private string _Email;
		
		private string _PasswordQuestion;
		
		private string _Comment;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _LastActivityDate;
		
		private System.Nullable<System.DateTime> _LastPasswordChangedDate;
		
		private string _UserName;
		
		private System.Nullable<bool> _IsLockedOut;
		
		private System.Nullable<System.DateTime> _LastLockoutDate;
		
		public Aspnet_Membership_GetUserByUserIdResult()
		
    {
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		[DataMember(Order=1)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string PasswordQuestion
		
    {
			get
			
      {
				return this._PasswordQuestion;
			}
			set
			
      {
				if ((this._PasswordQuestion != value))
				
        {
					this._PasswordQuestion = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText")]
		[DataMember(Order=3)]
		public string Comment
		
    {
			get
			
      {
				return this._Comment;
			}
			set
			
      {
				if ((this._Comment != value))
				
        {
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> IsApproved
		
    {
			get
			
      {
				return this._IsApproved;
			}
			set
			
      {
				if ((this._IsApproved != value))
				
        {
					this._IsApproved = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> CreateDate
		
    {
			get
			
      {
				return this._CreateDate;
			}
			set
			
      {
				if ((this._CreateDate != value))
				
        {
					this._CreateDate = value;
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> LastLoginDate
		
    {
			get
			
      {
				return this._LastLoginDate;
			}
			set
			
      {
				if ((this._LastLoginDate != value))
				
        {
					this._LastLoginDate = value;
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> LastActivityDate
		
    {
			get
			
      {
				return this._LastActivityDate;
			}
			set
			
      {
				if ((this._LastActivityDate != value))
				
        {
					this._LastActivityDate = value;
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> LastPasswordChangedDate
		
    {
			get
			
      {
				return this._LastPasswordChangedDate;
			}
			set
			
      {
				if ((this._LastPasswordChangedDate != value))
				
        {
					this._LastPasswordChangedDate = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		[DataMember(Order=9)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit")]
		[DataMember(Order=10)]
		public System.Nullable<bool> IsLockedOut
		
    {
			get
			
      {
				return this._IsLockedOut;
			}
			set
			
      {
				if ((this._IsLockedOut != value))
				
        {
					this._IsLockedOut = value;
				}
			}
		}
		
		[Column(Storage="_LastLockoutDate", DbType="DateTime")]
		[DataMember(Order=11)]
		public System.Nullable<System.DateTime> LastLockoutDate
		
    {
			get
			
      {
				return this._LastLockoutDate;
			}
			set
			
      {
				if ((this._LastLockoutDate != value))
				
        {
					this._LastLockoutDate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_PersonalizationAllUsers_GetPageSettingsResult
	
  {
		
		private System.Data.Linq.Binary _PageSettings;
		
		public Aspnet_PersonalizationAllUsers_GetPageSettingsResult()
		
    {
		}
		
		[Column(Storage="_PageSettings", DbType="Image", CanBeNull=true)]
		[DataMember(Order=1)]
		public System.Data.Linq.Binary PageSettings
		
    {
			get
			
      {
				return this._PageSettings;
			}
			set
			
      {
				if ((this._PageSettings != value))
				
        {
					this._PageSettings = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_PersonalizationPerUser_GetPageSettingsResult
	
  {
		
		private System.Data.Linq.Binary _PageSettings;
		
		public Aspnet_PersonalizationPerUser_GetPageSettingsResult()
		
    {
		}
		
		[Column(Storage="_PageSettings", DbType="Image", CanBeNull=true)]
		[DataMember(Order=1)]
		public System.Data.Linq.Binary PageSettings
		
    {
			get
			
      {
				return this._PageSettings;
			}
			set
			
      {
				if ((this._PageSettings != value))
				
        {
					this._PageSettings = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Profile_DeleteInactiveProfilesResult
	
  {
		
		private System.Nullable<int> _Column1;
		
		public Aspnet_Profile_DeleteInactiveProfilesResult()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Profile_DeleteProfilesResult
	
  {
		
		private System.Nullable<int> _Column1;
		
		public Aspnet_Profile_DeleteProfilesResult()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Profile_GetNumberOfInactiveProfilesResult
	
  {
		
		private System.Nullable<int> _Column1;
		
		public Aspnet_Profile_GetNumberOfInactiveProfilesResult()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Profile_GetPropertiesResult
	
  {
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		public Aspnet_Profile_GetPropertiesResult()
		
    {
		}
		
		[Column(Storage="_PropertyNames", DbType="NText")]
		[DataMember(Order=1)]
		public string PropertyNames
		
    {
			get
			
      {
				return this._PropertyNames;
			}
			set
			
      {
				if ((this._PropertyNames != value))
				
        {
					this._PropertyNames = value;
				}
			}
		}
		
		[Column(Storage="_PropertyValuesString", DbType="NText")]
		[DataMember(Order=2)]
		public string PropertyValuesString
		
    {
			get
			
      {
				return this._PropertyValuesString;
			}
			set
			
      {
				if ((this._PropertyValuesString != value))
				
        {
					this._PropertyValuesString = value;
				}
			}
		}
		
		[Column(Storage="_PropertyValuesBinary", DbType="Image", CanBeNull=true)]
		[DataMember(Order=3)]
		public System.Data.Linq.Binary PropertyValuesBinary
		
    {
			get
			
      {
				return this._PropertyValuesBinary;
			}
			set
			
      {
				if ((this._PropertyValuesBinary != value))
				
        {
					this._PropertyValuesBinary = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Roles_GetAllRolesResult
	
  {
		
		private System.Nullable<System.Guid> _RoleId;
		
		private string _RoleName;
		
		private string _Description;
		
		public Aspnet_Roles_GetAllRolesResult()
		
    {
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_Roles_GetRoleByNameResult
	
  {
		
		private System.Nullable<System.Guid> _RoleId;
		
		private string _RoleName;
		
		private string _Description;
		
		public Aspnet_Roles_GetRoleByNameResult()
		
    {
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_AddUsersToRolesResult
	
  {
		
		private string _UserName;
		
		private string _RoleName;
		
		public Aspnet_UsersInRoles_AddUsersToRolesResult()
		
    {
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		[DataMember(Order=1)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_FindUsersInRoleResult
	
  {
		
		private string _UserName;
		
		public Aspnet_UsersInRoles_FindUsersInRoleResult()
		
    {
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		[DataMember(Order=1)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_GetRolesForUserResult
	
  {
		
		private System.Nullable<System.Guid> _RoleId;
		
		private string _RoleName;
		
		private string _Description;
		
		public Aspnet_UsersInRoles_GetRolesForUserResult()
		
    {
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_GetUsersInRolesResult
	
  {
		
		private string _UserName;
		
		public Aspnet_UsersInRoles_GetUsersInRolesResult()
		
    {
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		[DataMember(Order=1)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_IsUserInRoleResult1
	
  {
		
		private System.Nullable<System.Guid> _ApplicationId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private System.Nullable<bool> _IsAnonymous;
		
		private System.Nullable<System.DateTime> _LastActivityDate;
		
		public Aspnet_UsersInRoles_IsUserInRoleResult1()
		
    {
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string LoweredUserName
		
    {
			get
			
      {
				return this._LoweredUserName;
			}
			set
			
      {
				if ((this._LoweredUserName != value))
				
        {
					this._LoweredUserName = value;
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		[DataMember(Order=5)]
		public string MobileAlias
		
    {
			get
			
      {
				return this._MobileAlias;
			}
			set
			
      {
				if ((this._MobileAlias != value))
				
        {
					this._MobileAlias = value;
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit")]
		[DataMember(Order=6)]
		public System.Nullable<bool> IsAnonymous
		
    {
			get
			
      {
				return this._IsAnonymous;
			}
			set
			
      {
				if ((this._IsAnonymous != value))
				
        {
					this._IsAnonymous = value;
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> LastActivityDate
		
    {
			get
			
      {
				return this._LastActivityDate;
			}
			set
			
      {
				if ((this._LastActivityDate != value))
				
        {
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_IsUserInRoleResult2
	
  {
		
		private System.Nullable<System.Guid> _ApplicationId;
		
		private System.Nullable<System.Guid> _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		public Aspnet_UsersInRoles_IsUserInRoleResult2()
		
    {
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string LoweredRoleName
		
    {
			get
			
      {
				return this._LoweredRoleName;
			}
			set
			
      {
				if ((this._LoweredRoleName != value))
				
        {
					this._LoweredRoleName = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_RemoveUsersFromRolesResult1
	
  {
		
		private System.Nullable<System.Guid> _RoleId;
		
		public Aspnet_UsersInRoles_RemoveUsersFromRolesResult1()
		
    {
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_RemoveUsersFromRolesResult2
	
  {
		
		private string _Column1;
		
		private System.Nullable<System.Guid> _RoleId;
		
		public Aspnet_UsersInRoles_RemoveUsersFromRolesResult2()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="NVarChar(1)")]
		[DataMember(Order=1)]
		public string Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this._RoleId = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_RemoveUsersFromRolesResult3
	
  {
		
		private System.Nullable<System.Guid> _UserId;
		
		public Aspnet_UsersInRoles_RemoveUsersFromRolesResult3()
		
    {
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_RemoveUsersFromRolesResult4
	
  {
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _Column2;
		
		public Aspnet_UsersInRoles_RemoveUsersFromRolesResult4()
		
    {
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this._UserId = value;
				}
			}
		}
		
		[Column(Name="", Storage="_Column2", DbType="NVarChar(1)")]
		[DataMember(Order=2)]
		public string Column2
		
    {
			get
			
      {
				return this._Column2;
			}
			set
			
      {
				if ((this._Column2 != value))
				
        {
					this._Column2 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Aspnet_UsersInRoles_RemoveUsersFromRolesResult5
	
  {
		
		private string _UserName;
		
		private string _RoleName;
		
		public Aspnet_UsersInRoles_RemoveUsersFromRolesResult5()
		
    {
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		[DataMember(Order=1)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_AddUserRoleResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _Id;
		
		public Rb_AddUserRoleResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> RoleID
		
    {
			get
			
      {
				return this._RoleID;
			}
			set
			
      {
				if ((this._RoleID != value))
				
        {
					this._RoleID = value;
				}
			}
		}
		
		[Column(Storage="_Id", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this._Id = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_BlogCommentsGetResult
	
  {
		
		private System.Nullable<int> _BlogCommentID;
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _Name;
		
		private string _Title;
		
		private string _URL;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		public Rb_BlogCommentsGetResult()
		
    {
		}
		
		[Column(Storage="_BlogCommentID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> BlogCommentID
		
    {
			get
			
      {
				return this._BlogCommentID;
			}
			set
			
      {
				if ((this._BlogCommentID != value))
				
        {
					this._BlogCommentID = value;
				}
			}
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_URL", DbType="NVarChar(200)")]
		[DataMember(Order=6)]
		public string URL
		
    {
			get
			
      {
				return this._URL;
			}
			set
			
      {
				if ((this._URL != value))
				
        {
					this._URL = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText")]
		[DataMember(Order=7)]
		public string Comment
		
    {
			get
			
      {
				return this._Comment;
			}
			set
			
      {
				if ((this._Comment != value))
				
        {
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> DateCreated
		
    {
			get
			
      {
				return this._DateCreated;
			}
			set
			
      {
				if ((this._DateCreated != value))
				
        {
					this._DateCreated = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_BlogGetSingleResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Excerpt;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _IsInNewsletter;
		
		public Rb_BlogGetSingleResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Excerpt", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string Excerpt
		
    {
			get
			
      {
				return this._Excerpt;
			}
			set
			
      {
				if ((this._Excerpt != value))
				
        {
					this._Excerpt = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=9)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this._IsInNewsletter = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_BlogGetSingleWithImagesResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Excerpt;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _IsInNewsletter;
		
		public Rb_BlogGetSingleWithImagesResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Excerpt", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string Excerpt
		
    {
			get
			
      {
				return this._Excerpt;
			}
			set
			
      {
				if ((this._Excerpt != value))
				
        {
					this._Excerpt = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=9)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this._IsInNewsletter = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_BlogsByMonthArchiveGetResult
	
  {
		
		private System.Nullable<int> _MONTH;
		
		private string _MonthName;
		
		private System.Nullable<int> _YEAR;
		
		private System.Nullable<int> _Day;
		
		private System.Nullable<int> _COUNT;
		
		public Rb_BlogsByMonthArchiveGetResult()
		
    {
		}
		
		[Column(Storage="_MONTH", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> MONTH
		
    {
			get
			
      {
				return this._MONTH;
			}
			set
			
      {
				if ((this._MONTH != value))
				
        {
					this._MONTH = value;
				}
			}
		}
		
		[Column(Storage="_MonthName", DbType="NVarChar(30)")]
		[DataMember(Order=2)]
		public string MonthName
		
    {
			get
			
      {
				return this._MonthName;
			}
			set
			
      {
				if ((this._MonthName != value))
				
        {
					this._MonthName = value;
				}
			}
		}
		
		[Column(Storage="_YEAR", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> YEAR
		
    {
			get
			
      {
				return this._YEAR;
			}
			set
			
      {
				if ((this._YEAR != value))
				
        {
					this._YEAR = value;
				}
			}
		}
		
		[Column(Storage="_Day", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> Day
		
    {
			get
			
      {
				return this._Day;
			}
			set
			
      {
				if ((this._Day != value))
				
        {
					this._Day = value;
				}
			}
		}
		
		[Column(Storage="_COUNT", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> COUNT
		
    {
			get
			
      {
				return this._COUNT;
			}
			set
			
      {
				if ((this._COUNT != value))
				
        {
					this._COUNT = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_BlogsByMonthGetResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Excerpt;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _IsInNewsletter;
		
		private string _Description;
		
		private System.Nullable<int> _CommentCount;
		
		private System.Nullable<int> _TrackBackCount;
		
		public Rb_BlogsByMonthGetResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Excerpt", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string Excerpt
		
    {
			get
			
      {
				return this._Excerpt;
			}
			set
			
      {
				if ((this._Excerpt != value))
				
        {
					this._Excerpt = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this._IsInNewsletter = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_CommentCount", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> CommentCount
		
    {
			get
			
      {
				return this._CommentCount;
			}
			set
			
      {
				if ((this._CommentCount != value))
				
        {
					this._CommentCount = value;
				}
			}
		}
		
		[Column(Storage="_TrackBackCount", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> TrackBackCount
		
    {
			get
			
      {
				return this._TrackBackCount;
			}
			set
			
      {
				if ((this._TrackBackCount != value))
				
        {
					this._TrackBackCount = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_BlogsGetResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Excerpt;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _IsInNewsletter;
		
		private string _CommentCount;
		
		public Rb_BlogsGetResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Excerpt", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string Excerpt
		
    {
			get
			
      {
				return this._Excerpt;
			}
			set
			
      {
				if ((this._Excerpt != value))
				
        {
					this._Excerpt = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=9)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this._IsInNewsletter = value;
				}
			}
		}
		
		[Column(Storage="_CommentCount", DbType="NVarChar(20)")]
		[DataMember(Order=10)]
		public string CommentCount
		
    {
			get
			
      {
				return this._CommentCount;
			}
			set
			
      {
				if ((this._CommentCount != value))
				
        {
					this._CommentCount = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_BlogStatsGetResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _EntryCount;
		
		private System.Nullable<int> _CommentCount;
		
		public Rb_BlogStatsGetResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_EntryCount", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> EntryCount
		
    {
			get
			
      {
				return this._EntryCount;
			}
			set
			
      {
				if ((this._EntryCount != value))
				
        {
					this._EntryCount = value;
				}
			}
		}
		
		[Column(Storage="_CommentCount", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> CommentCount
		
    {
			get
			
      {
				return this._CommentCount;
			}
			set
			
      {
				if ((this._CommentCount != value))
				
        {
					this._CommentCount = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_CartListResult
	
  {
		
		private System.Nullable<int> _ProductID;
		
		private string _ModelName;
		
		private string _ModelNumber;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _UnitCost;
		
		private System.Nullable<double> _UnitCostWithTaxes;
		
		private System.Nullable<decimal> _ExtendedAmount;
		
		private string _ISOCurrencySymbol;
		
		private System.Nullable<double> _Weight;
		
		public Rb_CartListResult()
		
    {
		}
		
		[Column(Storage="_ProductID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this._ProductID = value;
				}
			}
		}
		
		[Column(Storage="_ModelName", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string ModelName
		
    {
			get
			
      {
				return this._ModelName;
			}
			set
			
      {
				if ((this._ModelName != value))
				
        {
					this._ModelName = value;
				}
			}
		}
		
		[Column(Storage="_ModelNumber", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string ModelNumber
		
    {
			get
			
      {
				return this._ModelNumber;
			}
			set
			
      {
				if ((this._ModelNumber != value))
				
        {
					this._ModelNumber = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> Quantity
		
    {
			get
			
      {
				return this._Quantity;
			}
			set
			
      {
				if ((this._Quantity != value))
				
        {
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_UnitCost", DbType="Money")]
		[DataMember(Order=5)]
		public System.Nullable<decimal> UnitCost
		
    {
			get
			
      {
				return this._UnitCost;
			}
			set
			
      {
				if ((this._UnitCost != value))
				
        {
					this._UnitCost = value;
				}
			}
		}
		
		[Column(Storage="_UnitCostWithTaxes", DbType="Float")]
		[DataMember(Order=6)]
		public System.Nullable<double> UnitCostWithTaxes
		
    {
			get
			
      {
				return this._UnitCostWithTaxes;
			}
			set
			
      {
				if ((this._UnitCostWithTaxes != value))
				
        {
					this._UnitCostWithTaxes = value;
				}
			}
		}
		
		[Column(Storage="_ExtendedAmount", DbType="Money")]
		[DataMember(Order=7)]
		public System.Nullable<decimal> ExtendedAmount
		
    {
			get
			
      {
				return this._ExtendedAmount;
			}
			set
			
      {
				if ((this._ExtendedAmount != value))
				
        {
					this._ExtendedAmount = value;
				}
			}
		}
		
		[Column(Storage="_ISOCurrencySymbol", DbType="NVarChar(1500)")]
		[DataMember(Order=8)]
		public string ISOCurrencySymbol
		
    {
			get
			
      {
				return this._ISOCurrencySymbol;
			}
			set
			
      {
				if ((this._ISOCurrencySymbol != value))
				
        {
					this._ISOCurrencySymbol = value;
				}
			}
		}
		
		[Column(Storage="_Weight", DbType="Float")]
		[DataMember(Order=9)]
		public System.Nullable<double> Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this._Weight = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_ContentMgr_GetModuleTypesResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _FriendlyName;
		
		public Rb_ContentMgr_GetModuleTypesResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_FriendlyName", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string FriendlyName
		
    {
			get
			
      {
				return this._FriendlyName;
			}
			set
			
      {
				if ((this._FriendlyName != value))
				
        {
					this._FriendlyName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_ContentMgr_GetPortalsResult
	
  {
		
		private System.Nullable<int> _PortalID;
		
		private string _PortalAlias;
		
		public Rb_ContentMgr_GetPortalsResult()
		
    {
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_PortalAlias", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string PortalAlias
		
    {
			get
			
      {
				return this._PortalAlias;
			}
			set
			
      {
				if ((this._PortalAlias != value))
				
        {
					this._PortalAlias = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_DiscussionGetMessageResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _Title;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Body;
		
		private string _DisplayOrder;
		
		public Rb_DiscussionGetMessageResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(3000)")]
		[DataMember(Order=5)]
		public string Body
		
    {
			get
			
      {
				return this._Body;
			}
			set
			
      {
				if ((this._Body != value))
				
        {
					this._Body = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="NVarChar(750)")]
		[DataMember(Order=6)]
		public string DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this._DisplayOrder = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_DiscussionGetThreadMessagesResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _DisplayOrder;
		
		private string _BlockQuoteStart;
		
		private string _BlockQuoteEnd;
		
		private string _Title;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Body;
		
		public Rb_DiscussionGetThreadMessagesResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="NVarChar(750)")]
		[DataMember(Order=2)]
		public string DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_BlockQuoteStart", DbType="VarChar(8000)")]
		[DataMember(Order=3)]
		public string BlockQuoteStart
		
    {
			get
			
      {
				return this._BlockQuoteStart;
			}
			set
			
      {
				if ((this._BlockQuoteStart != value))
				
        {
					this._BlockQuoteStart = value;
				}
			}
		}
		
		[Column(Storage="_BlockQuoteEnd", DbType="VarChar(8000)")]
		[DataMember(Order=4)]
		public string BlockQuoteEnd
		
    {
			get
			
      {
				return this._BlockQuoteEnd;
			}
			set
			
      {
				if ((this._BlockQuoteEnd != value))
				
        {
					this._BlockQuoteEnd = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=6)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(3000)")]
		[DataMember(Order=8)]
		public string Body
		
    {
			get
			
      {
				return this._Body;
			}
			set
			
      {
				if ((this._Body != value))
				
        {
					this._Body = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_DiscussionGetTopLevelMessagesResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _DisplayOrder;
		
		private string _Parent;
		
		private System.Nullable<int> _ChildCount;
		
		private string _Title;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Body;
		
		private System.Nullable<int> _ViewCount;
		
		private System.Nullable<System.DateTime> _DateofLastReply;
		
		public Rb_DiscussionGetTopLevelMessagesResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="NVarChar(750)")]
		[DataMember(Order=2)]
		public string DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_Parent", DbType="NVarChar(23)")]
		[DataMember(Order=3)]
		public string Parent
		
    {
			get
			
      {
				return this._Parent;
			}
			set
			
      {
				if ((this._Parent != value))
				
        {
					this._Parent = value;
				}
			}
		}
		
		[Column(Storage="_ChildCount", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> ChildCount
		
    {
			get
			
      {
				return this._ChildCount;
			}
			set
			
      {
				if ((this._ChildCount != value))
				
        {
					this._ChildCount = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=6)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(3000)")]
		[DataMember(Order=8)]
		public string Body
		
    {
			get
			
      {
				return this._Body;
			}
			set
			
      {
				if ((this._Body != value))
				
        {
					this._Body = value;
				}
			}
		}
		
		[Column(Storage="_ViewCount", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> ViewCount
		
    {
			get
			
      {
				return this._ViewCount;
			}
			set
			
      {
				if ((this._ViewCount != value))
				
        {
					this._ViewCount = value;
				}
			}
		}
		
		[Column(Storage="_DateofLastReply", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> DateofLastReply
		
    {
			get
			
      {
				return this._DateofLastReply;
			}
			set
			
      {
				if ((this._DateofLastReply != value))
				
        {
					this._DateofLastReply = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_DiscussionIncrementViewCountResult
	
  {
		
		private System.Nullable<int> _ViewCount;
		
		public Rb_DiscussionIncrementViewCountResult()
		
    {
		}
		
		[Column(Storage="_ViewCount", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ViewCount
		
    {
			get
			
      {
				return this._ViewCount;
			}
			set
			
      {
				if ((this._ViewCount != value))
				
        {
					this._ViewCount = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_EcommerceGetMerchantResult
	
  {
		
		private string _MerchantID;
		
		private string _GatewayName;
		
		private string _Name;
		
		private string _MerchantEmail;
		
		private string _TechnicalEmail;
		
		private string _MetadataXml;
		
		private System.Nullable<int> _Id;
		
		public Rb_EcommerceGetMerchantResult()
		
    {
		}
		
		[Column(Storage="_MerchantID", DbType="NVarChar(25)")]
		[DataMember(Order=1)]
		public string MerchantID
		
    {
			get
			
      {
				return this._MerchantID;
			}
			set
			
      {
				if ((this._MerchantID != value))
				
        {
					this._MerchantID = value;
				}
			}
		}
		
		[Column(Storage="_GatewayName", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string GatewayName
		
    {
			get
			
      {
				return this._GatewayName;
			}
			set
			
      {
				if ((this._GatewayName != value))
				
        {
					this._GatewayName = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_MerchantEmail", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string MerchantEmail
		
    {
			get
			
      {
				return this._MerchantEmail;
			}
			set
			
      {
				if ((this._MerchantEmail != value))
				
        {
					this._MerchantEmail = value;
				}
			}
		}
		
		[Column(Storage="_TechnicalEmail", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string TechnicalEmail
		
    {
			get
			
      {
				return this._TechnicalEmail;
			}
			set
			
      {
				if ((this._TechnicalEmail != value))
				
        {
					this._TechnicalEmail = value;
				}
			}
		}
		
		[Column(Storage="_MetadataXml", DbType="NVarChar(3000)")]
		[DataMember(Order=6)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this._MetadataXml = value;
				}
			}
		}
		
		[Column(Storage="_Id", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this._Id = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_ExistAddSurveyResult
	
  {
		
		private System.Nullable<int> _SurveyID;
		
		public Rb_ExistAddSurveyResult()
		
    {
		}
		
		[Column(Storage="_SurveyID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					this._SurveyID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_ExistSurveyResult
	
  {
		
		private System.Nullable<int> _SurveyID;
		
		public Rb_ExistSurveyResult()
		
    {
		}
		
		[Column(Storage="_SurveyID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					this._SurveyID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_FindModulesByGuidResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		public Rb_FindModulesByGuidResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetAnnoucements_SummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_GetAnnoucements_SummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(356)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetArticlesResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Subtitle;
		
		private string _Abstract;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private System.Nullable<bool> _IsInNewsletter;
		
		private string _MoreLink;
		
		private System.Nullable<int> _Expired;
		
		public Rb_GetArticlesResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Subtitle", DbType="NVarChar(200)")]
		[DataMember(Order=6)]
		public string Subtitle
		
    {
			get
			
      {
				return this._Subtitle;
			}
			set
			
      {
				if ((this._Subtitle != value))
				
        {
					this._Subtitle = value;
				}
			}
		}
		
		[Column(Storage="_Abstract", DbType="NText")]
		[DataMember(Order=7)]
		public string Abstract
		
    {
			get
			
      {
				return this._Abstract;
			}
			set
			
      {
				if ((this._Abstract != value))
				
        {
					this._Abstract = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=8)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this._ExpireDate = value;
				}
			}
		}
		
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=11)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this._IsInNewsletter = value;
				}
			}
		}
		
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=12)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this._MoreLink = value;
				}
			}
		}
		
		[Column(Storage="_Expired", DbType="Int")]
		[DataMember(Order=13)]
		public System.Nullable<int> Expired
		
    {
			get
			
      {
				return this._Expired;
			}
			set
			
      {
				if ((this._Expired != value))
				
        {
					this._Expired = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetArticles_SummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_GetArticles_SummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(306)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetArticlesAllResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Subtitle;
		
		private string _Abstract;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private System.Nullable<bool> _IsInNewsletter;
		
		private string _MoreLink;
		
		private System.Nullable<int> _Expired;
		
		public Rb_GetArticlesAllResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Subtitle", DbType="NVarChar(200)")]
		[DataMember(Order=6)]
		public string Subtitle
		
    {
			get
			
      {
				return this._Subtitle;
			}
			set
			
      {
				if ((this._Subtitle != value))
				
        {
					this._Subtitle = value;
				}
			}
		}
		
		[Column(Storage="_Abstract", DbType="NText")]
		[DataMember(Order=7)]
		public string Abstract
		
    {
			get
			
      {
				return this._Abstract;
			}
			set
			
      {
				if ((this._Abstract != value))
				
        {
					this._Abstract = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=8)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this._ExpireDate = value;
				}
			}
		}
		
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=11)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this._IsInNewsletter = value;
				}
			}
		}
		
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=12)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this._MoreLink = value;
				}
			}
		}
		
		[Column(Storage="_Expired", DbType="Int")]
		[DataMember(Order=13)]
		public System.Nullable<int> Expired
		
    {
			get
			
      {
				return this._Expired;
			}
			set
			
      {
				if ((this._Expired != value))
				
        {
					this._Expired = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetBlogs_SummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_GetBlogs_SummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetBooksResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ISBN;
		
		private string _Caption;
		
		public Rb_GetBooksResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_ISBN", DbType="NVarChar(10)")]
		[DataMember(Order=4)]
		public string ISBN
		
    {
			get
			
      {
				return this._ISBN;
			}
			set
			
      {
				if ((this._ISBN != value))
				
        {
					this._ISBN = value;
				}
			}
		}
		
		[Column(Storage="_Caption", DbType="NText")]
		[DataMember(Order=5)]
		public string Caption
		
    {
			get
			
      {
				return this._Caption;
			}
			set
			
      {
				if ((this._Caption != value))
				
        {
					this._Caption = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetComponentModuleResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Component;
		
		public Rb_GetComponentModuleResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Component", DbType="NVarChar(2000)")]
		[DataMember(Order=5)]
		public string Component
		
    {
			get
			
      {
				return this._Component;
			}
			set
			
      {
				if ((this._Component != value))
				
        {
					this._Component = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetContactsResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedByUser;
		
		private string _Name;
		
		private string _Role;
		
		private string _Email;
		
		private string _Contact1;
		
		private string _Contact2;
		
		private string _Fax;
		
		private string _Address;
		
		public Rb_GetContactsResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Role
		
    {
			get
			
      {
				return this._Role;
			}
			set
			
      {
				if ((this._Role != value))
				
        {
					this._Role = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=6)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Contact1", DbType="NVarChar(250)")]
		[DataMember(Order=7)]
		public string Contact1
		
    {
			get
			
      {
				return this._Contact1;
			}
			set
			
      {
				if ((this._Contact1 != value))
				
        {
					this._Contact1 = value;
				}
			}
		}
		
		[Column(Storage="_Contact2", DbType="NVarChar(250)")]
		[DataMember(Order=8)]
		public string Contact2
		
    {
			get
			
      {
				return this._Contact2;
			}
			set
			
      {
				if ((this._Contact2 != value))
				
        {
					this._Contact2 = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(250)")]
		[DataMember(Order=9)]
		public string Fax
		
    {
			get
			
      {
				return this._Fax;
			}
			set
			
      {
				if ((this._Fax != value))
				
        {
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(250)")]
		[DataMember(Order=10)]
		public string Address
		
    {
			get
			
      {
				return this._Address;
			}
			set
			
      {
				if ((this._Address != value))
				
        {
					this._Address = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetContacts_SummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_GetContacts_SummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(262)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetCountriesResult
	
  {
		
		private string _CountryID;
		
		private string _NeutralName;
		
		private string _AdministrativeDivisionNeutralName;
		
		public Rb_GetCountriesResult()
		
    {
		}
		
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=1)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this._CountryID = value;
				}
			}
		}
		
		[Column(Storage="_NeutralName", DbType="NVarChar(255)")]
		[DataMember(Order=2)]
		public string NeutralName
		
    {
			get
			
      {
				return this._NeutralName;
			}
			set
			
      {
				if ((this._NeutralName != value))
				
        {
					this._NeutralName = value;
				}
			}
		}
		
		[Column(Storage="_AdministrativeDivisionNeutralName", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string AdministrativeDivisionNeutralName
		
    {
			get
			
      {
				return this._AdministrativeDivisionNeutralName;
			}
			set
			
      {
				if ((this._AdministrativeDivisionNeutralName != value))
				
        {
					this._AdministrativeDivisionNeutralName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetCountriesFilteredResult
	
  {
		
		private string _CountryID;
		
		private string _NeutralName;
		
		private string _AdministrativeDivisionNeutralName;
		
		public Rb_GetCountriesFilteredResult()
		
    {
		}
		
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=1)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this._CountryID = value;
				}
			}
		}
		
		[Column(Storage="_NeutralName", DbType="NVarChar(255)")]
		[DataMember(Order=2)]
		public string NeutralName
		
    {
			get
			
      {
				return this._NeutralName;
			}
			set
			
      {
				if ((this._NeutralName != value))
				
        {
					this._NeutralName = value;
				}
			}
		}
		
		[Column(Storage="_AdministrativeDivisionNeutralName", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string AdministrativeDivisionNeutralName
		
    {
			get
			
      {
				return this._AdministrativeDivisionNeutralName;
			}
			set
			
      {
				if ((this._AdministrativeDivisionNeutralName != value))
				
        {
					this._AdministrativeDivisionNeutralName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetCultureResult
	
  {
		
		private string _CultureCode;
		
		private string _CountryID;
		
		public Rb_GetCultureResult()
		
    {
		}
		
		[Column(Storage="_CultureCode", DbType="VarChar(10)")]
		[DataMember(Order=1)]
		public string CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this._CultureCode = value;
				}
			}
		}
		
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=2)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this._CountryID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetCurrentDbVersionResult
	
  {
		
		private System.Nullable<int> _Release;
		
		public Rb_GetCurrentDbVersionResult()
		
    {
		}
		
		[Column(Storage="_Release", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> Release
		
    {
			get
			
      {
				return this._Release;
			}
			set
			
      {
				if ((this._Release != value))
				
        {
					this._Release = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetCurrentModuleDefinitionsResult
	
  {
		
		private string _FriendlyName;
		
		private string _DesktopSrc;
		
		private string _MobileSrc;
		
		private System.Nullable<bool> _Admin;
		
		private System.Nullable<int> _ModuleDefID;
		
		private string _AssemblyName;
		
		private string _ClassName;
		
		private System.Nullable<bool> _Searchable;
		
		public Rb_GetCurrentModuleDefinitionsResult()
		
    {
		}
		
		[Column(Storage="_FriendlyName", DbType="NVarChar(128)")]
		[DataMember(Order=1)]
		public string FriendlyName
		
    {
			get
			
      {
				return this._FriendlyName;
			}
			set
			
      {
				if ((this._FriendlyName != value))
				
        {
					this._FriendlyName = value;
				}
			}
		}
		
		[Column(Storage="_DesktopSrc", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string DesktopSrc
		
    {
			get
			
      {
				return this._DesktopSrc;
			}
			set
			
      {
				if ((this._DesktopSrc != value))
				
        {
					this._DesktopSrc = value;
				}
			}
		}
		
		[Column(Storage="_MobileSrc", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string MobileSrc
		
    {
			get
			
      {
				return this._MobileSrc;
			}
			set
			
      {
				if ((this._MobileSrc != value))
				
        {
					this._MobileSrc = value;
				}
			}
		}
		
		[Column(Storage="_Admin", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> Admin
		
    {
			get
			
      {
				return this._Admin;
			}
			set
			
      {
				if ((this._Admin != value))
				
        {
					this._Admin = value;
				}
			}
		}
		
		[Column(Storage="_ModuleDefID", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> ModuleDefID
		
    {
			get
			
      {
				return this._ModuleDefID;
			}
			set
			
      {
				if ((this._ModuleDefID != value))
				
        {
					this._ModuleDefID = value;
				}
			}
		}
		
		[Column(Storage="_AssemblyName", DbType="VarChar(50)")]
		[DataMember(Order=6)]
		public string AssemblyName
		
    {
			get
			
      {
				return this._AssemblyName;
			}
			set
			
      {
				if ((this._AssemblyName != value))
				
        {
					this._AssemblyName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(128)")]
		[DataMember(Order=7)]
		public string ClassName
		
    {
			get
			
      {
				return this._ClassName;
			}
			set
			
      {
				if ((this._ClassName != value))
				
        {
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_Searchable", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> Searchable
		
    {
			get
			
      {
				return this._Searchable;
			}
			set
			
      {
				if ((this._Searchable != value))
				
        {
					this._Searchable = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetDefaultCultureResult
	
  {
		
		private string _CultureCode;
		
		private string _CountryID;
		
		public Rb_GetDefaultCultureResult()
		
    {
		}
		
		[Column(Storage="_CultureCode", DbType="VarChar(10)")]
		[DataMember(Order=1)]
		public string CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this._CultureCode = value;
				}
			}
		}
		
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=2)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this._CountryID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetDocumentContentResult
	
  {
		
		private System.Data.Linq.Binary _Content;
		
		private string _ContentType;
		
		private System.Nullable<int> _ContentSize;
		
		private string _FileFriendlyName;
		
		private string _FileNameUrl;
		
		public Rb_GetDocumentContentResult()
		
    {
		}
		
		[Column(Storage="_Content", DbType="Image", CanBeNull=true)]
		[DataMember(Order=1)]
		public System.Data.Linq.Binary Content
		
    {
			get
			
      {
				return this._Content;
			}
			set
			
      {
				if ((this._Content != value))
				
        {
					this._Content = value;
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string ContentType
		
    {
			get
			
      {
				return this._ContentType;
			}
			set
			
      {
				if ((this._ContentType != value))
				
        {
					this._ContentType = value;
				}
			}
		}
		
		[Column(Storage="_ContentSize", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> ContentSize
		
    {
			get
			
      {
				return this._ContentSize;
			}
			set
			
      {
				if ((this._ContentSize != value))
				
        {
					this._ContentSize = value;
				}
			}
		}
		
		[Column(Storage="_FileFriendlyName", DbType="NVarChar(150)")]
		[DataMember(Order=4)]
		public string FileFriendlyName
		
    {
			get
			
      {
				return this._FileFriendlyName;
			}
			set
			
      {
				if ((this._FileFriendlyName != value))
				
        {
					this._FileFriendlyName = value;
				}
			}
		}
		
		[Column(Storage="_FileNameUrl", DbType="NVarChar(250)")]
		[DataMember(Order=5)]
		public string FileNameUrl
		
    {
			get
			
      {
				return this._FileNameUrl;
			}
			set
			
      {
				if ((this._FileNameUrl != value))
				
        {
					this._FileNameUrl = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetDocumentsResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _FileFriendlyName;
		
		private string _FileNameUrl;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Category;
		
		private System.Nullable<int> _ContentSize;
		
		private string _ContentType;
		
		public Rb_GetDocumentsResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_FileFriendlyName", DbType="NVarChar(150)")]
		[DataMember(Order=2)]
		public string FileFriendlyName
		
    {
			get
			
      {
				return this._FileFriendlyName;
			}
			set
			
      {
				if ((this._FileFriendlyName != value))
				
        {
					this._FileFriendlyName = value;
				}
			}
		}
		
		[Column(Storage="_FileNameUrl", DbType="NVarChar(250)")]
		[DataMember(Order=3)]
		public string FileNameUrl
		
    {
			get
			
      {
				return this._FileNameUrl;
			}
			set
			
      {
				if ((this._FileNameUrl != value))
				
        {
					this._FileNameUrl = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Category
		
    {
			get
			
      {
				return this._Category;
			}
			set
			
      {
				if ((this._Category != value))
				
        {
					this._Category = value;
				}
			}
		}
		
		[Column(Storage="_ContentSize", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> ContentSize
		
    {
			get
			
      {
				return this._ContentSize;
			}
			set
			
      {
				if ((this._ContentSize != value))
				
        {
					this._ContentSize = value;
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="NVarChar(50)")]
		[DataMember(Order=8)]
		public string ContentType
		
    {
			get
			
      {
				return this._ContentType;
			}
			set
			
      {
				if ((this._ContentType != value))
				
        {
					this._ContentType = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetDocuments_SummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_GetDocuments_SummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(312)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetEnhancedHtmlResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private System.Nullable<int> _ViewOrder;
		
		private System.Nullable<int> _CultureCode;
		
		private string _DesktopHtml;
		
		public Rb_GetEnhancedHtmlResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
		
		[Column(Storage="_CultureCode", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this._CultureCode = value;
				}
			}
		}
		
		[Column(Storage="_DesktopHtml", DbType="NText")]
		[DataMember(Order=7)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this._DesktopHtml = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetEnhancedLinksResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Url;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _Description;
		
		private string _ImageUrl;
		
		private System.Nullable<int> _Clicks;
		
		private string _Target;
		
		public Rb_GetEnhancedLinksResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=5)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(250)")]
		[DataMember(Order=8)]
		public string ImageUrl
		
    {
			get
			
      {
				return this._ImageUrl;
			}
			set
			
      {
				if ((this._ImageUrl != value))
				
        {
					this._ImageUrl = value;
				}
			}
		}
		
		[Column(Storage="_Clicks", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> Clicks
		
    {
			get
			
      {
				return this._Clicks;
			}
			set
			
      {
				if ((this._Clicks != value))
				
        {
					this._Clicks = value;
				}
			}
		}
		
		[Column(Storage="_Target", DbType="NVarChar(10)")]
		[DataMember(Order=10)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this._Target = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetEnhancedLocalizedHtmlResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _Title;
		
		private string _DesktopHtml;
		
		public Rb_GetEnhancedLocalizedHtmlResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_DesktopHtml", DbType="NText")]
		[DataMember(Order=3)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this._DesktopHtml = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetEvents_SummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_GetEvents_SummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(506)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetFAQResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Question;
		
		private string _Answer;
		
		public Rb_GetFAQResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Question", DbType="NVarChar(500)")]
		[DataMember(Order=4)]
		public string Question
		
    {
			get
			
      {
				return this._Question;
			}
			set
			
      {
				if ((this._Question != value))
				
        {
					this._Question = value;
				}
			}
		}
		
		[Column(Storage="_Answer", DbType="NText")]
		[DataMember(Order=5)]
		public string Answer
		
    {
			get
			
      {
				return this._Answer;
			}
			set
			
      {
				if ((this._Answer != value))
				
        {
					this._Answer = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetFAQs_SummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_GetFAQs_SummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetGuidResult
	
  {
		
		private System.Nullable<System.Guid> _GeneralModDefID;
		
		public Rb_GetGuidResult()
		
    {
		}
		
		[Column(Storage="_GeneralModDefID", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> GeneralModDefID
		
    {
			get
			
      {
				return this._GeneralModDefID;
			}
			set
			
      {
				if ((this._GeneralModDefID != value))
				
        {
					this._GeneralModDefID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetHtmlTextResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		private string _DesktopHtml;
		
		private string _MobileSummary;
		
		private string _MobileDetails;
		
		private System.Nullable<int> _Id;
		
		public Rb_GetHtmlTextResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_DesktopHtml", DbType="NText")]
		[DataMember(Order=2)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this._DesktopHtml = value;
				}
			}
		}
		
		[Column(Storage="_MobileSummary", DbType="NText")]
		[DataMember(Order=3)]
		public string MobileSummary
		
    {
			get
			
      {
				return this._MobileSummary;
			}
			set
			
      {
				if ((this._MobileSummary != value))
				
        {
					this._MobileSummary = value;
				}
			}
		}
		
		[Column(Storage="_MobileDetails", DbType="NText")]
		[DataMember(Order=4)]
		public string MobileDetails
		
    {
			get
			
      {
				return this._MobileDetails;
			}
			set
			
      {
				if ((this._MobileDetails != value))
				
        {
					this._MobileDetails = value;
				}
			}
		}
		
		[Column(Storage="_Id", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this._Id = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetLinksResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Url;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _Description;
		
		private string _Target;
		
		public Rb_GetLinksResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=5)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_Target", DbType="NVarChar(10)")]
		[DataMember(Order=8)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this._Target = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetMilestonesResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _EstCompleteDate;
		
		private string _Status;
		
		public Rb_GetMilestonesResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_EstCompleteDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> EstCompleteDate
		
    {
			get
			
      {
				return this._EstCompleteDate;
			}
			set
			
      {
				if ((this._EstCompleteDate != value))
				
        {
					this._EstCompleteDate = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this._Status = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetModuleDefinitionByIDResult
	
  {
		
		private System.Nullable<int> _ModuleDefID;
		
		private System.Nullable<int> _PortalID;
		
		private string _FriendlyName;
		
		private string _DesktopSrc;
		
		private string _MobileSrc;
		
		private System.Nullable<bool> _Admin;
		
		private System.Nullable<int> _ModuleID;
		
		public Rb_GetModuleDefinitionByIDResult()
		
    {
		}
		
		[Column(Storage="_ModuleDefID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleDefID
		
    {
			get
			
      {
				return this._ModuleDefID;
			}
			set
			
      {
				if ((this._ModuleDefID != value))
				
        {
					this._ModuleDefID = value;
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_FriendlyName", DbType="NVarChar(128)")]
		[DataMember(Order=3)]
		public string FriendlyName
		
    {
			get
			
      {
				return this._FriendlyName;
			}
			set
			
      {
				if ((this._FriendlyName != value))
				
        {
					this._FriendlyName = value;
				}
			}
		}
		
		[Column(Storage="_DesktopSrc", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string DesktopSrc
		
    {
			get
			
      {
				return this._DesktopSrc;
			}
			set
			
      {
				if ((this._DesktopSrc != value))
				
        {
					this._DesktopSrc = value;
				}
			}
		}
		
		[Column(Storage="_MobileSrc", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string MobileSrc
		
    {
			get
			
      {
				return this._MobileSrc;
			}
			set
			
      {
				if ((this._MobileSrc != value))
				
        {
					this._MobileSrc = value;
				}
			}
		}
		
		[Column(Storage="_Admin", DbType="Bit")]
		[DataMember(Order=6)]
		public System.Nullable<bool> Admin
		
    {
			get
			
      {
				return this._Admin;
			}
			set
			
      {
				if ((this._Admin != value))
				
        {
					this._Admin = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetModuleDefinitionsResult
	
  {
		
		private System.Nullable<System.Guid> _GeneralModDefID;
		
		private string _FriendlyName;
		
		private string _DesktopSrc;
		
		private string _MobileSrc;
		
		public Rb_GetModuleDefinitionsResult()
		
    {
		}
		
		[Column(Storage="_GeneralModDefID", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> GeneralModDefID
		
    {
			get
			
      {
				return this._GeneralModDefID;
			}
			set
			
      {
				if ((this._GeneralModDefID != value))
				
        {
					this._GeneralModDefID = value;
				}
			}
		}
		
		[Column(Storage="_FriendlyName", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string FriendlyName
		
    {
			get
			
      {
				return this._FriendlyName;
			}
			set
			
      {
				if ((this._FriendlyName != value))
				
        {
					this._FriendlyName = value;
				}
			}
		}
		
		[Column(Storage="_DesktopSrc", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string DesktopSrc
		
    {
			get
			
      {
				return this._DesktopSrc;
			}
			set
			
      {
				if ((this._DesktopSrc != value))
				
        {
					this._DesktopSrc = value;
				}
			}
		}
		
		[Column(Storage="_MobileSrc", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string MobileSrc
		
    {
			get
			
      {
				return this._MobileSrc;
			}
			set
			
      {
				if ((this._MobileSrc != value))
				
        {
					this._MobileSrc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetModuleInUseResult
	
  {
		
		private System.Nullable<int> _PortalID;
		
		private string _PortalAlias;
		
		private string _PortalName;
		
		private string _Checked;
		
		public Rb_GetModuleInUseResult()
		
    {
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_PortalAlias", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string PortalAlias
		
    {
			get
			
      {
				return this._PortalAlias;
			}
			set
			
      {
				if ((this._PortalAlias != value))
				
        {
					this._PortalAlias = value;
				}
			}
		}
		
		[Column(Storage="_PortalName", DbType="NVarChar(128)")]
		[DataMember(Order=3)]
		public string PortalName
		
    {
			get
			
      {
				return this._PortalName;
			}
			set
			
      {
				if ((this._PortalName != value))
				
        {
					this._PortalName = value;
				}
			}
		}
		
		[Column(Storage="_Checked", DbType="VarChar(1)")]
		[DataMember(Order=4)]
		public string Checked
		
    {
			get
			
      {
				return this._Checked;
			}
			set
			
      {
				if ((this._Checked != value))
				
        {
					this._Checked = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetModulesAllPortalsResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		private string _ModuleTitle;
		
		private string _PortalAlias;
		
		private System.Nullable<int> _TabOrder;
		
		public Rb_GetModulesAllPortalsResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleTitle", DbType="NVarChar(567)")]
		[DataMember(Order=2)]
		public string ModuleTitle
		
    {
			get
			
      {
				return this._ModuleTitle;
			}
			set
			
      {
				if ((this._ModuleTitle != value))
				
        {
					this._ModuleTitle = value;
				}
			}
		}
		
		[Column(Storage="_PortalAlias", DbType="NVarChar(128)")]
		[DataMember(Order=3)]
		public string PortalAlias
		
    {
			get
			
      {
				return this._PortalAlias;
			}
			set
			
      {
				if ((this._PortalAlias != value))
				
        {
					this._PortalAlias = value;
				}
			}
		}
		
		[Column(Storage="_TabOrder", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> TabOrder
		
    {
			get
			
      {
				return this._TabOrder;
			}
			set
			
      {
				if ((this._TabOrder != value))
				
        {
					this._TabOrder = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetModulesInTabResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<System.Guid> _GeneralModDefID;
		
		public Rb_GetModulesInTabResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_GeneralModDefID", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> GeneralModDefID
		
    {
			get
			
      {
				return this._GeneralModDefID;
			}
			set
			
      {
				if ((this._GeneralModDefID != value))
				
        {
					this._GeneralModDefID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetModulesSinglePortalResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		private string _ModuleTitle;
		
		private System.Nullable<int> _PageOrder;
		
		public Rb_GetModulesSinglePortalResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleTitle", DbType="NVarChar(438)")]
		[DataMember(Order=2)]
		public string ModuleTitle
		
    {
			get
			
      {
				return this._ModuleTitle;
			}
			set
			
      {
				if ((this._ModuleTitle != value))
				
        {
					this._ModuleTitle = value;
				}
			}
		}
		
		[Column(Storage="_PageOrder", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> PageOrder
		
    {
			get
			
      {
				return this._PageOrder;
			}
			set
			
      {
				if ((this._PageOrder != value))
				
        {
					this._PageOrder = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetModuleUserSettingsResult
	
  {
		
		private string _SettingName;
		
		private string _SettingValue;
		
		public Rb_GetModuleUserSettingsResult()
		
    {
		}
		
		[Column(Storage="_SettingName", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string SettingName
		
    {
			get
			
      {
				return this._SettingName;
			}
			set
			
      {
				if ((this._SettingName != value))
				
        {
					this._SettingName = value;
				}
			}
		}
		
		[Column(Storage="_SettingValue", DbType="NVarChar(1500)")]
		[DataMember(Order=2)]
		public string SettingValue
		
    {
			get
			
      {
				return this._SettingValue;
			}
			set
			
      {
				if ((this._SettingValue != value))
				
        {
					this._SettingValue = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetOrderDetailsResult
	
  {
		
		private System.Nullable<int> _ProductID;
		
		private string _ModelName;
		
		private string _ModelNumber;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _Quantity;
		
		private string _ISOCurrencySymbol;
		
		private System.Nullable<float> _Weight;
		
		public Rb_GetOrderDetailsResult()
		
    {
		}
		
		[Column(Storage="_ProductID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this._ProductID = value;
				}
			}
		}
		
		[Column(Storage="_ModelName", DbType="NVarChar(256)")]
		[DataMember(Order=2)]
		public string ModelName
		
    {
			get
			
      {
				return this._ModelName;
			}
			set
			
      {
				if ((this._ModelName != value))
				
        {
					this._ModelName = value;
				}
			}
		}
		
		[Column(Storage="_ModelNumber", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string ModelNumber
		
    {
			get
			
      {
				return this._ModelNumber;
			}
			set
			
      {
				if ((this._ModelNumber != value))
				
        {
					this._ModelNumber = value;
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Money")]
		[DataMember(Order=4)]
		public System.Nullable<decimal> UnitPrice
		
    {
			get
			
      {
				return this._UnitPrice;
			}
			set
			
      {
				if ((this._UnitPrice != value))
				
        {
					this._UnitPrice = value;
				}
			}
		}
		
		[Column(Storage="_Quantity", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> Quantity
		
    {
			get
			
      {
				return this._Quantity;
			}
			set
			
      {
				if ((this._Quantity != value))
				
        {
					this._Quantity = value;
				}
			}
		}
		
		[Column(Storage="_ISOCurrencySymbol", DbType="Char(3)")]
		[DataMember(Order=6)]
		public string ISOCurrencySymbol
		
    {
			get
			
      {
				return this._ISOCurrencySymbol;
			}
			set
			
      {
				if ((this._ISOCurrencySymbol != value))
				
        {
					this._ISOCurrencySymbol = value;
				}
			}
		}
		
		[Column(Storage="_Weight", DbType="Real")]
		[DataMember(Order=7)]
		public System.Nullable<float> Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this._Weight = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetOrdersResult
	
  {
		
		private string _OrderID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<decimal> _TotalGoods;
		
		private System.Nullable<decimal> _TotalShipping;
		
		private System.Nullable<decimal> _TotalTaxes;
		
		private System.Nullable<decimal> _TotalExpenses;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _PaymentMethod;
		
		private string _ShippingMethod;
		
		private System.Nullable<float> _TotalWeight;
		
		private string _ShippingData;
		
		private string _BillingData;
		
		private string _TransactionID;
		
		private string _AuthCode;
		
		private string _Name;
		
		private string _Company;
		
		public Rb_GetOrdersResult()
		
    {
		}
		
		[Column(Storage="_OrderID", DbType="Char(24)")]
		[DataMember(Order=1)]
		public string OrderID
		
    {
			get
			
      {
				return this._OrderID;
			}
			set
			
      {
				if ((this._OrderID != value))
				
        {
					this._OrderID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_TotalGoods", DbType="Money")]
		[DataMember(Order=4)]
		public System.Nullable<decimal> TotalGoods
		
    {
			get
			
      {
				return this._TotalGoods;
			}
			set
			
      {
				if ((this._TotalGoods != value))
				
        {
					this._TotalGoods = value;
				}
			}
		}
		
		[Column(Storage="_TotalShipping", DbType="Money")]
		[DataMember(Order=5)]
		public System.Nullable<decimal> TotalShipping
		
    {
			get
			
      {
				return this._TotalShipping;
			}
			set
			
      {
				if ((this._TotalShipping != value))
				
        {
					this._TotalShipping = value;
				}
			}
		}
		
		[Column(Storage="_TotalTaxes", DbType="Money")]
		[DataMember(Order=6)]
		public System.Nullable<decimal> TotalTaxes
		
    {
			get
			
      {
				return this._TotalTaxes;
			}
			set
			
      {
				if ((this._TotalTaxes != value))
				
        {
					this._TotalTaxes = value;
				}
			}
		}
		
		[Column(Storage="_TotalExpenses", DbType="Money")]
		[DataMember(Order=7)]
		public System.Nullable<decimal> TotalExpenses
		
    {
			get
			
      {
				return this._TotalExpenses;
			}
			set
			
      {
				if ((this._TotalExpenses != value))
				
        {
					this._TotalExpenses = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> DateCreated
		
    {
			get
			
      {
				return this._DateCreated;
			}
			set
			
      {
				if ((this._DateCreated != value))
				
        {
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_DateModified", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> DateModified
		
    {
			get
			
      {
				return this._DateModified;
			}
			set
			
      {
				if ((this._DateModified != value))
				
        {
					this._DateModified = value;
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="NVarChar(50)")]
		[DataMember(Order=11)]
		public string PaymentMethod
		
    {
			get
			
      {
				return this._PaymentMethod;
			}
			set
			
      {
				if ((this._PaymentMethod != value))
				
        {
					this._PaymentMethod = value;
				}
			}
		}
		
		[Column(Storage="_ShippingMethod", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string ShippingMethod
		
    {
			get
			
      {
				return this._ShippingMethod;
			}
			set
			
      {
				if ((this._ShippingMethod != value))
				
        {
					this._ShippingMethod = value;
				}
			}
		}
		
		[Column(Storage="_TotalWeight", DbType="Real")]
		[DataMember(Order=13)]
		public System.Nullable<float> TotalWeight
		
    {
			get
			
      {
				return this._TotalWeight;
			}
			set
			
      {
				if ((this._TotalWeight != value))
				
        {
					this._TotalWeight = value;
				}
			}
		}
		
		[Column(Storage="_ShippingData", DbType="NText")]
		[DataMember(Order=14)]
		public string ShippingData
		
    {
			get
			
      {
				return this._ShippingData;
			}
			set
			
      {
				if ((this._ShippingData != value))
				
        {
					this._ShippingData = value;
				}
			}
		}
		
		[Column(Storage="_BillingData", DbType="NText")]
		[DataMember(Order=15)]
		public string BillingData
		
    {
			get
			
      {
				return this._BillingData;
			}
			set
			
      {
				if ((this._BillingData != value))
				
        {
					this._BillingData = value;
				}
			}
		}
		
		[Column(Storage="_TransactionID", DbType="NVarChar(50)")]
		[DataMember(Order=16)]
		public string TransactionID
		
    {
			get
			
      {
				return this._TransactionID;
			}
			set
			
      {
				if ((this._TransactionID != value))
				
        {
					this._TransactionID = value;
				}
			}
		}
		
		[Column(Storage="_AuthCode", DbType="NVarChar(50)")]
		[DataMember(Order=17)]
		public string AuthCode
		
    {
			get
			
      {
				return this._AuthCode;
			}
			set
			
      {
				if ((this._AuthCode != value))
				
        {
					this._AuthCode = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=18)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(50)")]
		[DataMember(Order=19)]
		public string Company
		
    {
			get
			
      {
				return this._Company;
			}
			set
			
      {
				if ((this._Company != value))
				
        {
					this._Company = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetOrdersByUserResult
	
  {
		
		private string _OrderID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<decimal> _TotalGoods;
		
		private System.Nullable<decimal> _TotalShipping;
		
		private System.Nullable<decimal> _TotalTaxes;
		
		private System.Nullable<decimal> _TotalExpenses;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _PaymentMethod;
		
		private string _ShippingMethod;
		
		private System.Nullable<float> _TotalWeight;
		
		private string _ShippingData;
		
		private string _BillingData;
		
		private string _TransactionID;
		
		private string _AuthCode;
		
		private string _Name;
		
		private string _Company;
		
		public Rb_GetOrdersByUserResult()
		
    {
		}
		
		[Column(Storage="_OrderID", DbType="Char(24)")]
		[DataMember(Order=1)]
		public string OrderID
		
    {
			get
			
      {
				return this._OrderID;
			}
			set
			
      {
				if ((this._OrderID != value))
				
        {
					this._OrderID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_TotalGoods", DbType="Money")]
		[DataMember(Order=4)]
		public System.Nullable<decimal> TotalGoods
		
    {
			get
			
      {
				return this._TotalGoods;
			}
			set
			
      {
				if ((this._TotalGoods != value))
				
        {
					this._TotalGoods = value;
				}
			}
		}
		
		[Column(Storage="_TotalShipping", DbType="Money")]
		[DataMember(Order=5)]
		public System.Nullable<decimal> TotalShipping
		
    {
			get
			
      {
				return this._TotalShipping;
			}
			set
			
      {
				if ((this._TotalShipping != value))
				
        {
					this._TotalShipping = value;
				}
			}
		}
		
		[Column(Storage="_TotalTaxes", DbType="Money")]
		[DataMember(Order=6)]
		public System.Nullable<decimal> TotalTaxes
		
    {
			get
			
      {
				return this._TotalTaxes;
			}
			set
			
      {
				if ((this._TotalTaxes != value))
				
        {
					this._TotalTaxes = value;
				}
			}
		}
		
		[Column(Storage="_TotalExpenses", DbType="Money")]
		[DataMember(Order=7)]
		public System.Nullable<decimal> TotalExpenses
		
    {
			get
			
      {
				return this._TotalExpenses;
			}
			set
			
      {
				if ((this._TotalExpenses != value))
				
        {
					this._TotalExpenses = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> DateCreated
		
    {
			get
			
      {
				return this._DateCreated;
			}
			set
			
      {
				if ((this._DateCreated != value))
				
        {
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_DateModified", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> DateModified
		
    {
			get
			
      {
				return this._DateModified;
			}
			set
			
      {
				if ((this._DateModified != value))
				
        {
					this._DateModified = value;
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="NVarChar(50)")]
		[DataMember(Order=11)]
		public string PaymentMethod
		
    {
			get
			
      {
				return this._PaymentMethod;
			}
			set
			
      {
				if ((this._PaymentMethod != value))
				
        {
					this._PaymentMethod = value;
				}
			}
		}
		
		[Column(Storage="_ShippingMethod", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string ShippingMethod
		
    {
			get
			
      {
				return this._ShippingMethod;
			}
			set
			
      {
				if ((this._ShippingMethod != value))
				
        {
					this._ShippingMethod = value;
				}
			}
		}
		
		[Column(Storage="_TotalWeight", DbType="Real")]
		[DataMember(Order=13)]
		public System.Nullable<float> TotalWeight
		
    {
			get
			
      {
				return this._TotalWeight;
			}
			set
			
      {
				if ((this._TotalWeight != value))
				
        {
					this._TotalWeight = value;
				}
			}
		}
		
		[Column(Storage="_ShippingData", DbType="NText")]
		[DataMember(Order=14)]
		public string ShippingData
		
    {
			get
			
      {
				return this._ShippingData;
			}
			set
			
      {
				if ((this._ShippingData != value))
				
        {
					this._ShippingData = value;
				}
			}
		}
		
		[Column(Storage="_BillingData", DbType="NText")]
		[DataMember(Order=15)]
		public string BillingData
		
    {
			get
			
      {
				return this._BillingData;
			}
			set
			
      {
				if ((this._BillingData != value))
				
        {
					this._BillingData = value;
				}
			}
		}
		
		[Column(Storage="_TransactionID", DbType="NVarChar(50)")]
		[DataMember(Order=16)]
		public string TransactionID
		
    {
			get
			
      {
				return this._TransactionID;
			}
			set
			
      {
				if ((this._TransactionID != value))
				
        {
					this._TransactionID = value;
				}
			}
		}
		
		[Column(Storage="_AuthCode", DbType="NVarChar(50)")]
		[DataMember(Order=17)]
		public string AuthCode
		
    {
			get
			
      {
				return this._AuthCode;
			}
			set
			
      {
				if ((this._AuthCode != value))
				
        {
					this._AuthCode = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=18)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(50)")]
		[DataMember(Order=19)]
		public string Company
		
    {
			get
			
      {
				return this._Company;
			}
			set
			
      {
				if ((this._Company != value))
				
        {
					this._Company = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetPortalRolesResult
	
  {
		
		private string _RoleName;
		
		private System.Nullable<int> _RoleID;
		
		public Rb_GetPortalRolesResult()
		
    {
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> RoleID
		
    {
			get
			
      {
				return this._RoleID;
			}
			set
			
      {
				if ((this._RoleID != value))
				
        {
					this._RoleID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetPortalSettingsLangListResult
	
  {
		
		private string _SettingValue;
		
		public Rb_GetPortalSettingsLangListResult()
		
    {
		}
		
		[Column(Storage="_SettingValue", DbType="NVarChar(1500)")]
		[DataMember(Order=1)]
		public string SettingValue
		
    {
			get
			
      {
				return this._SettingValue;
			}
			set
			
      {
				if ((this._SettingValue != value))
				
        {
					this._SettingValue = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetPortalSettingsPortalIDResult
	
  {
		
		private System.Nullable<int> _PortalID;
		
		private string _PortalName;
		
		private string _PortalPath;
		
		private System.Nullable<bool> _AlwaysShowEditButton;
		
		private string _PortalAlias;
		
		public Rb_GetPortalSettingsPortalIDResult()
		
    {
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_PortalName", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string PortalName
		
    {
			get
			
      {
				return this._PortalName;
			}
			set
			
      {
				if ((this._PortalName != value))
				
        {
					this._PortalName = value;
				}
			}
		}
		
		[Column(Storage="_PortalPath", DbType="NVarChar(128)")]
		[DataMember(Order=3)]
		public string PortalPath
		
    {
			get
			
      {
				return this._PortalPath;
			}
			set
			
      {
				if ((this._PortalPath != value))
				
        {
					this._PortalPath = value;
				}
			}
		}
		
		[Column(Storage="_AlwaysShowEditButton", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> AlwaysShowEditButton
		
    {
			get
			
      {
				return this._AlwaysShowEditButton;
			}
			set
			
      {
				if ((this._AlwaysShowEditButton != value))
				
        {
					this._AlwaysShowEditButton = value;
				}
			}
		}
		
		[Column(Storage="_PortalAlias", DbType="NVarChar(128)")]
		[DataMember(Order=5)]
		public string PortalAlias
		
    {
			get
			
      {
				return this._PortalAlias;
			}
			set
			
      {
				if ((this._PortalAlias != value))
				
        {
					this._PortalAlias = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetPortalsModulesResult
	
  {
		
		private System.Nullable<int> _PortalID;
		
		private string _PortalAlias;
		
		private string _PortalName;
		
		private System.Nullable<int> _ModuleDefID;
		
		public Rb_GetPortalsModulesResult()
		
    {
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_PortalAlias", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string PortalAlias
		
    {
			get
			
      {
				return this._PortalAlias;
			}
			set
			
      {
				if ((this._PortalAlias != value))
				
        {
					this._PortalAlias = value;
				}
			}
		}
		
		[Column(Storage="_PortalName", DbType="NVarChar(128)")]
		[DataMember(Order=3)]
		public string PortalName
		
    {
			get
			
      {
				return this._PortalName;
			}
			set
			
      {
				if ((this._PortalName != value))
				
        {
					this._PortalName = value;
				}
			}
		}
		
		[Column(Storage="_ModuleDefID", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> ModuleDefID
		
    {
			get
			
      {
				return this._ModuleDefID;
			}
			set
			
      {
				if ((this._ModuleDefID != value))
				
        {
					this._ModuleDefID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetProductsResult
	
  {
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _ModelNumber;
		
		private string _ModelName;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<bool> _FeaturedItem;
		
		private string _LongDescription;
		
		private string _ShortDescription;
		
		private string _MetadataXml;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _TaxRate;
		
		public Rb_GetProductsResult()
		
    {
		}
		
		[Column(Storage="_ProductID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this._ProductID = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_ModelNumber", DbType="NVarChar(256)")]
		[DataMember(Order=3)]
		public string ModelNumber
		
    {
			get
			
      {
				return this._ModelNumber;
			}
			set
			
      {
				if ((this._ModelNumber != value))
				
        {
					this._ModelNumber = value;
				}
			}
		}
		
		[Column(Storage="_ModelName", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string ModelName
		
    {
			get
			
      {
				return this._ModelName;
			}
			set
			
      {
				if ((this._ModelName != value))
				
        {
					this._ModelName = value;
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Money")]
		[DataMember(Order=5)]
		public System.Nullable<decimal> UnitPrice
		
    {
			get
			
      {
				return this._UnitPrice;
			}
			set
			
      {
				if ((this._UnitPrice != value))
				
        {
					this._UnitPrice = value;
				}
			}
		}
		
		[Column(Storage="_FeaturedItem", DbType="Bit")]
		[DataMember(Order=6)]
		public System.Nullable<bool> FeaturedItem
		
    {
			get
			
      {
				return this._FeaturedItem;
			}
			set
			
      {
				if ((this._FeaturedItem != value))
				
        {
					this._FeaturedItem = value;
				}
			}
		}
		
		[Column(Storage="_LongDescription", DbType="NText")]
		[DataMember(Order=7)]
		public string LongDescription
		
    {
			get
			
      {
				return this._LongDescription;
			}
			set
			
      {
				if ((this._LongDescription != value))
				
        {
					this._LongDescription = value;
				}
			}
		}
		
		[Column(Storage="_ShortDescription", DbType="NText")]
		[DataMember(Order=8)]
		public string ShortDescription
		
    {
			get
			
      {
				return this._ShortDescription;
			}
			set
			
      {
				if ((this._ShortDescription != value))
				
        {
					this._ShortDescription = value;
				}
			}
		}
		
		[Column(Storage="_MetadataXml", DbType="NText")]
		[DataMember(Order=9)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this._MetadataXml = value;
				}
			}
		}
		
		[Column(Storage="_Weight", DbType="Float")]
		[DataMember(Order=10)]
		public System.Nullable<double> Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this._Weight = value;
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Float")]
		[DataMember(Order=11)]
		public System.Nullable<double> TaxRate
		
    {
			get
			
      {
				return this._TaxRate;
			}
			set
			
      {
				if ((this._TaxRate != value))
				
        {
					this._TaxRate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetRelatedTablesResult
	
  {
		
		private string _ForeignKeyTableSchema;
		
		private string _ForeignKeyTable;
		
		private string _ForeignKeyColumn;
		
		private string _KeyColumn;
		
		private System.Nullable<int> _ForeignKeyTableId;
		
		private System.Nullable<int> _KeyTableId;
		
		private string _KeyTableSchema;
		
		private string _KeyTable;
		
		public Rb_GetRelatedTablesResult()
		
    {
		}
		
		[Column(Storage="_ForeignKeyTableSchema", DbType="NVarChar(128)")]
		[DataMember(Order=1)]
		public string ForeignKeyTableSchema
		
    {
			get
			
      {
				return this._ForeignKeyTableSchema;
			}
			set
			
      {
				if ((this._ForeignKeyTableSchema != value))
				
        {
					this._ForeignKeyTableSchema = value;
				}
			}
		}
		
		[Column(Storage="_ForeignKeyTable", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string ForeignKeyTable
		
    {
			get
			
      {
				return this._ForeignKeyTable;
			}
			set
			
      {
				if ((this._ForeignKeyTable != value))
				
        {
					this._ForeignKeyTable = value;
				}
			}
		}
		
		[Column(Storage="_ForeignKeyColumn", DbType="NVarChar(128)")]
		[DataMember(Order=3)]
		public string ForeignKeyColumn
		
    {
			get
			
      {
				return this._ForeignKeyColumn;
			}
			set
			
      {
				if ((this._ForeignKeyColumn != value))
				
        {
					this._ForeignKeyColumn = value;
				}
			}
		}
		
		[Column(Storage="_KeyColumn", DbType="NVarChar(128)")]
		[DataMember(Order=4)]
		public string KeyColumn
		
    {
			get
			
      {
				return this._KeyColumn;
			}
			set
			
      {
				if ((this._KeyColumn != value))
				
        {
					this._KeyColumn = value;
				}
			}
		}
		
		[Column(Storage="_ForeignKeyTableId", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> ForeignKeyTableId
		
    {
			get
			
      {
				return this._ForeignKeyTableId;
			}
			set
			
      {
				if ((this._ForeignKeyTableId != value))
				
        {
					this._ForeignKeyTableId = value;
				}
			}
		}
		
		[Column(Storage="_KeyTableId", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> KeyTableId
		
    {
			get
			
      {
				return this._KeyTableId;
			}
			set
			
      {
				if ((this._KeyTableId != value))
				
        {
					this._KeyTableId = value;
				}
			}
		}
		
		[Column(Storage="_KeyTableSchema", DbType="NVarChar(128)")]
		[DataMember(Order=7)]
		public string KeyTableSchema
		
    {
			get
			
      {
				return this._KeyTableSchema;
			}
			set
			
      {
				if ((this._KeyTableSchema != value))
				
        {
					this._KeyTableSchema = value;
				}
			}
		}
		
		[Column(Storage="_KeyTable", DbType="NVarChar(128)")]
		[DataMember(Order=8)]
		public string KeyTable
		
    {
			get
			
      {
				return this._KeyTable;
			}
			set
			
      {
				if ((this._KeyTable != value))
				
        {
					this._KeyTable = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetRoleMembershipResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		public Rb_GetRoleMembershipResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetRoleNonMembershipResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		public Rb_GetRoleNonMembershipResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetRolesByUserResult
	
  {
		
		private string _RoleName;
		
		private System.Nullable<int> _RoleID;
		
		public Rb_GetRolesByUserResult()
		
    {
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> RoleID
		
    {
			get
			
      {
				return this._RoleID;
			}
			set
			
      {
				if ((this._RoleID != value))
				
        {
					this._RoleID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSearchableModulesResult
	
  {
		
		private System.Nullable<System.Guid> _GeneralModDefID;
		
		private string _ClassName;
		
		private string _FriendlyName;
		
		private string _DesktopSrc;
		
		private string _MobileSrc;
		
		private System.Nullable<bool> _Admin;
		
		private System.Nullable<bool> _Searchable;
		
		private string _AssemblyName;
		
		private System.Nullable<int> _ModuleDefID;
		
		public Rb_GetSearchableModulesResult()
		
    {
		}
		
		[Column(Storage="_GeneralModDefID", DbType="UniqueIdentifier")]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> GeneralModDefID
		
    {
			get
			
      {
				return this._GeneralModDefID;
			}
			set
			
      {
				if ((this._GeneralModDefID != value))
				
        {
					this._GeneralModDefID = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(128)")]
		[DataMember(Order=2)]
		public string ClassName
		
    {
			get
			
      {
				return this._ClassName;
			}
			set
			
      {
				if ((this._ClassName != value))
				
        {
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_FriendlyName", DbType="NVarChar(128)")]
		[DataMember(Order=3)]
		public string FriendlyName
		
    {
			get
			
      {
				return this._FriendlyName;
			}
			set
			
      {
				if ((this._FriendlyName != value))
				
        {
					this._FriendlyName = value;
				}
			}
		}
		
		[Column(Storage="_DesktopSrc", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string DesktopSrc
		
    {
			get
			
      {
				return this._DesktopSrc;
			}
			set
			
      {
				if ((this._DesktopSrc != value))
				
        {
					this._DesktopSrc = value;
				}
			}
		}
		
		[Column(Storage="_MobileSrc", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string MobileSrc
		
    {
			get
			
      {
				return this._MobileSrc;
			}
			set
			
      {
				if ((this._MobileSrc != value))
				
        {
					this._MobileSrc = value;
				}
			}
		}
		
		[Column(Storage="_Admin", DbType="Bit")]
		[DataMember(Order=6)]
		public System.Nullable<bool> Admin
		
    {
			get
			
      {
				return this._Admin;
			}
			set
			
      {
				if ((this._Admin != value))
				
        {
					this._Admin = value;
				}
			}
		}
		
		[Column(Storage="_Searchable", DbType="Bit")]
		[DataMember(Order=7)]
		public System.Nullable<bool> Searchable
		
    {
			get
			
      {
				return this._Searchable;
			}
			set
			
      {
				if ((this._Searchable != value))
				
        {
					this._Searchable = value;
				}
			}
		}
		
		[Column(Storage="_AssemblyName", DbType="VarChar(50)")]
		[DataMember(Order=8)]
		public string AssemblyName
		
    {
			get
			
      {
				return this._AssemblyName;
			}
			set
			
      {
				if ((this._AssemblyName != value))
				
        {
					this._AssemblyName = value;
				}
			}
		}
		
		[Column(Storage="_ModuleDefID", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> ModuleDefID
		
    {
			get
			
      {
				return this._ModuleDefID;
			}
			set
			
      {
				if ((this._ModuleDefID != value))
				
        {
					this._ModuleDefID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleAnnouncementResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _MoreLink;
		
		private string _MobileMoreLink;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _Description;
		
		public Rb_GetSingleAnnouncementResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(150)")]
		[DataMember(Order=3)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=4)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this._MoreLink = value;
				}
			}
		}
		
		[Column(Storage="_MobileMoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=5)]
		public string MobileMoreLink
		
    {
			get
			
      {
				return this._MobileMoreLink;
			}
			set
			
      {
				if ((this._MobileMoreLink != value))
				
        {
					this._MobileMoreLink = value;
				}
			}
		}
		
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this._ExpireDate = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleArticleResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Subtitle;
		
		private string _Abstract;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private System.Nullable<bool> _IsInNewsletter;
		
		private string _MoreLink;
		
		public Rb_GetSingleArticleResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Subtitle", DbType="NVarChar(200)")]
		[DataMember(Order=6)]
		public string Subtitle
		
    {
			get
			
      {
				return this._Subtitle;
			}
			set
			
      {
				if ((this._Subtitle != value))
				
        {
					this._Subtitle = value;
				}
			}
		}
		
		[Column(Storage="_Abstract", DbType="NText")]
		[DataMember(Order=7)]
		public string Abstract
		
    {
			get
			
      {
				return this._Abstract;
			}
			set
			
      {
				if ((this._Abstract != value))
				
        {
					this._Abstract = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=8)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this._ExpireDate = value;
				}
			}
		}
		
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=11)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this._IsInNewsletter = value;
				}
			}
		}
		
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=12)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this._MoreLink = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleBookResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ISBN;
		
		private string _Caption;
		
		public Rb_GetSingleBookResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_ISBN", DbType="NVarChar(10)")]
		[DataMember(Order=3)]
		public string ISBN
		
    {
			get
			
      {
				return this._ISBN;
			}
			set
			
      {
				if ((this._ISBN != value))
				
        {
					this._ISBN = value;
				}
			}
		}
		
		[Column(Storage="_Caption", DbType="NText")]
		[DataMember(Order=4)]
		public string Caption
		
    {
			get
			
      {
				return this._Caption;
			}
			set
			
      {
				if ((this._Caption != value))
				
        {
					this._Caption = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleContactResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Name;
		
		private string _Role;
		
		private string _Email;
		
		private string _Contact1;
		
		private string _Contact2;
		
		private string _Fax;
		
		private string _Address;
		
		public Rb_GetSingleContactResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Role
		
    {
			get
			
      {
				return this._Role;
			}
			set
			
      {
				if ((this._Role != value))
				
        {
					this._Role = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Contact1", DbType="NVarChar(250)")]
		[DataMember(Order=6)]
		public string Contact1
		
    {
			get
			
      {
				return this._Contact1;
			}
			set
			
      {
				if ((this._Contact1 != value))
				
        {
					this._Contact1 = value;
				}
			}
		}
		
		[Column(Storage="_Contact2", DbType="NVarChar(250)")]
		[DataMember(Order=7)]
		public string Contact2
		
    {
			get
			
      {
				return this._Contact2;
			}
			set
			
      {
				if ((this._Contact2 != value))
				
        {
					this._Contact2 = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(250)")]
		[DataMember(Order=8)]
		public string Fax
		
    {
			get
			
      {
				return this._Fax;
			}
			set
			
      {
				if ((this._Fax != value))
				
        {
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(250)")]
		[DataMember(Order=9)]
		public string Address
		
    {
			get
			
      {
				return this._Address;
			}
			set
			
      {
				if ((this._Address != value))
				
        {
					this._Address = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleCountryResult
	
  {
		
		private string _CountryID;
		
		private string _Description;
		
		private System.Nullable<int> _StateID;
		
		public Rb_GetSingleCountryResult()
		
    {
		}
		
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=1)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this._CountryID = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(1500)")]
		[DataMember(Order=2)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_StateID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> StateID
		
    {
			get
			
      {
				return this._StateID;
			}
			set
			
      {
				if ((this._StateID != value))
				
        {
					this._StateID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleDocumentResult
	
  {
		
		private string _FileFriendlyName;
		
		private string _FileNameUrl;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Category;
		
		private System.Nullable<int> _ContentSize;
		
		private string _ContentType;
		
		public Rb_GetSingleDocumentResult()
		
    {
		}
		
		[Column(Storage="_FileFriendlyName", DbType="NVarChar(150)")]
		[DataMember(Order=1)]
		public string FileFriendlyName
		
    {
			get
			
      {
				return this._FileFriendlyName;
			}
			set
			
      {
				if ((this._FileFriendlyName != value))
				
        {
					this._FileFriendlyName = value;
				}
			}
		}
		
		[Column(Storage="_FileNameUrl", DbType="NVarChar(250)")]
		[DataMember(Order=2)]
		public string FileNameUrl
		
    {
			get
			
      {
				return this._FileNameUrl;
			}
			set
			
      {
				if ((this._FileNameUrl != value))
				
        {
					this._FileNameUrl = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Category", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string Category
		
    {
			get
			
      {
				return this._Category;
			}
			set
			
      {
				if ((this._Category != value))
				
        {
					this._Category = value;
				}
			}
		}
		
		[Column(Storage="_ContentSize", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> ContentSize
		
    {
			get
			
      {
				return this._ContentSize;
			}
			set
			
      {
				if ((this._ContentSize != value))
				
        {
					this._ContentSize = value;
				}
			}
		}
		
		[Column(Storage="_ContentType", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string ContentType
		
    {
			get
			
      {
				return this._ContentType;
			}
			set
			
      {
				if ((this._ContentType != value))
				
        {
					this._ContentType = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleEnhancedHtmlResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private System.Nullable<int> _ViewOrder;
		
		private System.Nullable<int> _CultureCode;
		
		private string _DesktopHtml;
		
		public Rb_GetSingleEnhancedHtmlResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
		
		[Column(Storage="_CultureCode", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this._CultureCode = value;
				}
			}
		}
		
		[Column(Storage="_DesktopHtml", DbType="NText")]
		[DataMember(Order=6)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this._DesktopHtml = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleEnhancedLinkResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Url;
		
		private string _MobileUrl;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _Description;
		
		private string _ImageUrl;
		
		private System.Nullable<int> _Clicks;
		
		private string _Target;
		
		public Rb_GetSingleEnhancedLinkResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=4)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_MobileUrl", DbType="NVarChar(250)")]
		[DataMember(Order=5)]
		public string MobileUrl
		
    {
			get
			
      {
				return this._MobileUrl;
			}
			set
			
      {
				if ((this._MobileUrl != value))
				
        {
					this._MobileUrl = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(250)")]
		[DataMember(Order=8)]
		public string ImageUrl
		
    {
			get
			
      {
				return this._ImageUrl;
			}
			set
			
      {
				if ((this._ImageUrl != value))
				
        {
					this._ImageUrl = value;
				}
			}
		}
		
		[Column(Storage="_Clicks", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> Clicks
		
    {
			get
			
      {
				return this._Clicks;
			}
			set
			
      {
				if ((this._Clicks != value))
				
        {
					this._Clicks = value;
				}
			}
		}
		
		[Column(Storage="_Target", DbType="NVarChar(10)")]
		[DataMember(Order=10)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this._Target = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleEventResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _StartTime;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _Description;
		
		private string _WhereWhen;
		
		public Rb_GetSingleEventResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(150)")]
		[DataMember(Order=3)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_AllDay", DbType="Bit")]
		[DataMember(Order=4)]
		public System.Nullable<bool> AllDay
		
    {
			get
			
      {
				return this._AllDay;
			}
			set
			
      {
				if ((this._AllDay != value))
				
        {
					this._AllDay = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="NVarChar(8)")]
		[DataMember(Order=6)]
		public string StartTime
		
    {
			get
			
      {
				return this._StartTime;
			}
			set
			
      {
				if ((this._StartTime != value))
				
        {
					this._StartTime = value;
				}
			}
		}
		
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this._ExpireDate = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=8)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_WhereWhen", DbType="NVarChar(150)")]
		[DataMember(Order=9)]
		public string WhereWhen
		
    {
			get
			
      {
				return this._WhereWhen;
			}
			set
			
      {
				if ((this._WhereWhen != value))
				
        {
					this._WhereWhen = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleFAQResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Question;
		
		private string _Answer;
		
		public Rb_GetSingleFAQResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Question", DbType="NVarChar(500)")]
		[DataMember(Order=3)]
		public string Question
		
    {
			get
			
      {
				return this._Question;
			}
			set
			
      {
				if ((this._Question != value))
				
        {
					this._Question = value;
				}
			}
		}
		
		[Column(Storage="_Answer", DbType="NText")]
		[DataMember(Order=4)]
		public string Answer
		
    {
			get
			
      {
				return this._Answer;
			}
			set
			
      {
				if ((this._Answer != value))
				
        {
					this._Answer = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleLinkResult
	
  {
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Url;
		
		private string _MobileUrl;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _Description;
		
		private string _Target;
		
		public Rb_GetSingleLinkResult()
		
    {
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=1)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=2)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=4)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_MobileUrl", DbType="NVarChar(250)")]
		[DataMember(Order=5)]
		public string MobileUrl
		
    {
			get
			
      {
				return this._MobileUrl;
			}
			set
			
      {
				if ((this._MobileUrl != value))
				
        {
					this._MobileUrl = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_Target", DbType="NVarChar(10)")]
		[DataMember(Order=8)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this._Target = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleMilestonesResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _EstCompleteDate;
		
		private string _Status;
		
		public Rb_GetSingleMilestonesResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_EstCompleteDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> EstCompleteDate
		
    {
			get
			
      {
				return this._EstCompleteDate;
			}
			set
			
      {
				if ((this._EstCompleteDate != value))
				
        {
					this._EstCompleteDate = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this._Status = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleOrderResult
	
  {
		
		private string _OrderID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<decimal> _TotalGoods;
		
		private System.Nullable<decimal> _TotalShipping;
		
		private System.Nullable<decimal> _TotalTaxes;
		
		private System.Nullable<decimal> _TotalExpenses;
		
		private System.Nullable<float> _TotalWeight;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<int> _Status;
		
		private string _PaymentMethod;
		
		private string _ShippingMethod;
		
		private string _ShippingData;
		
		private string _BillingData;
		
		private string _TransactionID;
		
		private string _AuthCode;
		
		private string _ISOCurrencySymbol;
		
		private string _WeightUnit;
		
		private System.Nullable<int> _Id;
		
		public Rb_GetSingleOrderResult()
		
    {
		}
		
		[Column(Storage="_OrderID", DbType="Char(24)")]
		[DataMember(Order=1)]
		public string OrderID
		
    {
			get
			
      {
				return this._OrderID;
			}
			set
			
      {
				if ((this._OrderID != value))
				
        {
					this._OrderID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_TotalGoods", DbType="Money")]
		[DataMember(Order=4)]
		public System.Nullable<decimal> TotalGoods
		
    {
			get
			
      {
				return this._TotalGoods;
			}
			set
			
      {
				if ((this._TotalGoods != value))
				
        {
					this._TotalGoods = value;
				}
			}
		}
		
		[Column(Storage="_TotalShipping", DbType="Money")]
		[DataMember(Order=5)]
		public System.Nullable<decimal> TotalShipping
		
    {
			get
			
      {
				return this._TotalShipping;
			}
			set
			
      {
				if ((this._TotalShipping != value))
				
        {
					this._TotalShipping = value;
				}
			}
		}
		
		[Column(Storage="_TotalTaxes", DbType="Money")]
		[DataMember(Order=6)]
		public System.Nullable<decimal> TotalTaxes
		
    {
			get
			
      {
				return this._TotalTaxes;
			}
			set
			
      {
				if ((this._TotalTaxes != value))
				
        {
					this._TotalTaxes = value;
				}
			}
		}
		
		[Column(Storage="_TotalExpenses", DbType="Money")]
		[DataMember(Order=7)]
		public System.Nullable<decimal> TotalExpenses
		
    {
			get
			
      {
				return this._TotalExpenses;
			}
			set
			
      {
				if ((this._TotalExpenses != value))
				
        {
					this._TotalExpenses = value;
				}
			}
		}
		
		[Column(Storage="_TotalWeight", DbType="Real")]
		[DataMember(Order=8)]
		public System.Nullable<float> TotalWeight
		
    {
			get
			
      {
				return this._TotalWeight;
			}
			set
			
      {
				if ((this._TotalWeight != value))
				
        {
					this._TotalWeight = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> DateCreated
		
    {
			get
			
      {
				return this._DateCreated;
			}
			set
			
      {
				if ((this._DateCreated != value))
				
        {
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_DateModified", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> DateModified
		
    {
			get
			
      {
				return this._DateModified;
			}
			set
			
      {
				if ((this._DateModified != value))
				
        {
					this._DateModified = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_PaymentMethod", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string PaymentMethod
		
    {
			get
			
      {
				return this._PaymentMethod;
			}
			set
			
      {
				if ((this._PaymentMethod != value))
				
        {
					this._PaymentMethod = value;
				}
			}
		}
		
		[Column(Storage="_ShippingMethod", DbType="NVarChar(50)")]
		[DataMember(Order=13)]
		public string ShippingMethod
		
    {
			get
			
      {
				return this._ShippingMethod;
			}
			set
			
      {
				if ((this._ShippingMethod != value))
				
        {
					this._ShippingMethod = value;
				}
			}
		}
		
		[Column(Storage="_ShippingData", DbType="NText")]
		[DataMember(Order=14)]
		public string ShippingData
		
    {
			get
			
      {
				return this._ShippingData;
			}
			set
			
      {
				if ((this._ShippingData != value))
				
        {
					this._ShippingData = value;
				}
			}
		}
		
		[Column(Storage="_BillingData", DbType="NText")]
		[DataMember(Order=15)]
		public string BillingData
		
    {
			get
			
      {
				return this._BillingData;
			}
			set
			
      {
				if ((this._BillingData != value))
				
        {
					this._BillingData = value;
				}
			}
		}
		
		[Column(Storage="_TransactionID", DbType="NVarChar(50)")]
		[DataMember(Order=16)]
		public string TransactionID
		
    {
			get
			
      {
				return this._TransactionID;
			}
			set
			
      {
				if ((this._TransactionID != value))
				
        {
					this._TransactionID = value;
				}
			}
		}
		
		[Column(Storage="_AuthCode", DbType="NVarChar(50)")]
		[DataMember(Order=17)]
		public string AuthCode
		
    {
			get
			
      {
				return this._AuthCode;
			}
			set
			
      {
				if ((this._AuthCode != value))
				
        {
					this._AuthCode = value;
				}
			}
		}
		
		[Column(Storage="_ISOCurrencySymbol", DbType="Char(3)")]
		[DataMember(Order=18)]
		public string ISOCurrencySymbol
		
    {
			get
			
      {
				return this._ISOCurrencySymbol;
			}
			set
			
      {
				if ((this._ISOCurrencySymbol != value))
				
        {
					this._ISOCurrencySymbol = value;
				}
			}
		}
		
		[Column(Storage="_WeightUnit", DbType="NVarChar(15)")]
		[DataMember(Order=19)]
		public string WeightUnit
		
    {
			get
			
      {
				return this._WeightUnit;
			}
			set
			
      {
				if ((this._WeightUnit != value))
				
        {
					this._WeightUnit = value;
				}
			}
		}
		
		[Column(Storage="_Id", DbType="Int")]
		[DataMember(Order=20)]
		public System.Nullable<int> Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this._Id = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSinglePictureResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _PreviousItemID;
		
		private System.Nullable<int> _NextItemID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _MetadataXml;
		
		private string _ShortDescription;
		
		private string _Keywords;
		
		public Rb_GetSinglePictureResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_PreviousItemID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> PreviousItemID
		
    {
			get
			
      {
				return this._PreviousItemID;
			}
			set
			
      {
				if ((this._PreviousItemID != value))
				
        {
					this._PreviousItemID = value;
				}
			}
		}
		
		[Column(Storage="_NextItemID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> NextItemID
		
    {
			get
			
      {
				return this._NextItemID;
			}
			set
			
      {
				if ((this._NextItemID != value))
				
        {
					this._NextItemID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_MetadataXml", DbType="NVarChar(3000)")]
		[DataMember(Order=6)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this._MetadataXml = value;
				}
			}
		}
		
		[Column(Storage="_ShortDescription", DbType="NVarChar(256)")]
		[DataMember(Order=7)]
		public string ShortDescription
		
    {
			get
			
      {
				return this._ShortDescription;
			}
			set
			
      {
				if ((this._ShortDescription != value))
				
        {
					this._ShortDescription = value;
				}
			}
		}
		
		[Column(Storage="_Keywords", DbType="NVarChar(256)")]
		[DataMember(Order=8)]
		public string Keywords
		
    {
			get
			
      {
				return this._Keywords;
			}
			set
			
      {
				if ((this._Keywords != value))
				
        {
					this._Keywords = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleProductResult
	
  {
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _PreviousProductID;
		
		private System.Nullable<int> _NextProductID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _ModelNumber;
		
		private string _ModelName;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<bool> _FeaturedItem;
		
		private string _LongDescription;
		
		private string _ShortDescription;
		
		private string _MetadataXml;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _TaxRate;
		
		public Rb_GetSingleProductResult()
		
    {
		}
		
		[Column(Storage="_ProductID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this._ProductID = value;
				}
			}
		}
		
		[Column(Storage="_PreviousProductID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> PreviousProductID
		
    {
			get
			
      {
				return this._PreviousProductID;
			}
			set
			
      {
				if ((this._PreviousProductID != value))
				
        {
					this._PreviousProductID = value;
				}
			}
		}
		
		[Column(Storage="_NextProductID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> NextProductID
		
    {
			get
			
      {
				return this._NextProductID;
			}
			set
			
      {
				if ((this._NextProductID != value))
				
        {
					this._NextProductID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_CategoryID", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> CategoryID
		
    {
			get
			
      {
				return this._CategoryID;
			}
			set
			
      {
				if ((this._CategoryID != value))
				
        {
					this._CategoryID = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_ModelNumber", DbType="NVarChar(256)")]
		[DataMember(Order=7)]
		public string ModelNumber
		
    {
			get
			
      {
				return this._ModelNumber;
			}
			set
			
      {
				if ((this._ModelNumber != value))
				
        {
					this._ModelNumber = value;
				}
			}
		}
		
		[Column(Storage="_ModelName", DbType="NVarChar(256)")]
		[DataMember(Order=8)]
		public string ModelName
		
    {
			get
			
      {
				return this._ModelName;
			}
			set
			
      {
				if ((this._ModelName != value))
				
        {
					this._ModelName = value;
				}
			}
		}
		
		[Column(Storage="_UnitPrice", DbType="Money")]
		[DataMember(Order=9)]
		public System.Nullable<decimal> UnitPrice
		
    {
			get
			
      {
				return this._UnitPrice;
			}
			set
			
      {
				if ((this._UnitPrice != value))
				
        {
					this._UnitPrice = value;
				}
			}
		}
		
		[Column(Storage="_FeaturedItem", DbType="Bit")]
		[DataMember(Order=10)]
		public System.Nullable<bool> FeaturedItem
		
    {
			get
			
      {
				return this._FeaturedItem;
			}
			set
			
      {
				if ((this._FeaturedItem != value))
				
        {
					this._FeaturedItem = value;
				}
			}
		}
		
		[Column(Storage="_LongDescription", DbType="NText")]
		[DataMember(Order=11)]
		public string LongDescription
		
    {
			get
			
      {
				return this._LongDescription;
			}
			set
			
      {
				if ((this._LongDescription != value))
				
        {
					this._LongDescription = value;
				}
			}
		}
		
		[Column(Storage="_ShortDescription", DbType="NText")]
		[DataMember(Order=12)]
		public string ShortDescription
		
    {
			get
			
      {
				return this._ShortDescription;
			}
			set
			
      {
				if ((this._ShortDescription != value))
				
        {
					this._ShortDescription = value;
				}
			}
		}
		
		[Column(Storage="_MetadataXml", DbType="NText")]
		[DataMember(Order=13)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this._MetadataXml = value;
				}
			}
		}
		
		[Column(Storage="_Weight", DbType="Float")]
		[DataMember(Order=14)]
		public System.Nullable<double> Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this._Weight = value;
				}
			}
		}
		
		[Column(Storage="_TaxRate", DbType="Float")]
		[DataMember(Order=15)]
		public System.Nullable<double> TaxRate
		
    {
			get
			
      {
				return this._TaxRate;
			}
			set
			
      {
				if ((this._TaxRate != value))
				
        {
					this._TaxRate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleRoleResult
	
  {
		
		private string _RoleName;
		
		public Rb_GetSingleRoleResult()
		
    {
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(50)")]
		[DataMember(Order=1)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this._RoleName = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleTaskResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedByUser;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _AssignedTo;
		
		private string _Title;
		
		private string _Description;
		
		private string _Status;
		
		private string _Priority;
		
		private System.Nullable<int> _PercentComplete;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		public Rb_GetSingleTaskResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string ModifiedByUser
		
    {
			get
			
      {
				return this._ModifiedByUser;
			}
			set
			
      {
				if ((this._ModifiedByUser != value))
				
        {
					this._ModifiedByUser = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> ModifiedDate
		
    {
			get
			
      {
				return this._ModifiedDate;
			}
			set
			
      {
				if ((this._ModifiedDate != value))
				
        {
					this._ModifiedDate = value;
				}
			}
		}
		
		[Column(Storage="_AssignedTo", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string AssignedTo
		
    {
			get
			
      {
				return this._AssignedTo;
			}
			set
			
      {
				if ((this._AssignedTo != value))
				
        {
					this._AssignedTo = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=8)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(20)")]
		[DataMember(Order=9)]
		public string Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_Priority", DbType="NVarChar(20)")]
		[DataMember(Order=10)]
		public string Priority
		
    {
			get
			
      {
				return this._Priority;
			}
			set
			
      {
				if ((this._Priority != value))
				
        {
					this._Priority = value;
				}
			}
		}
		
		[Column(Storage="_PercentComplete", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> PercentComplete
		
    {
			get
			
      {
				return this._PercentComplete;
			}
			set
			
      {
				if ((this._PercentComplete != value))
				
        {
					this._PercentComplete = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_DueDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> DueDate
		
    {
			get
			
      {
				return this._DueDate;
			}
			set
			
      {
				if ((this._DueDate != value))
				
        {
					this._DueDate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleUserResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _PortalID;
		
		private string _Name;
		
		private string _Company;
		
		private string _Address;
		
		private string _City;
		
		private string _Zip;
		
		private string _CountryID;
		
		private System.Nullable<int> _StateID;
		
		private string _PIva;
		
		private string _CFiscale;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Password;
		
		private string _Email;
		
		private System.Nullable<bool> _SendNewsletter;
		
		private System.Nullable<byte> _MailChecked;
		
		private System.Nullable<System.DateTime> _LastSend;
		
		private System.Nullable<System.DateTime> _User_last_visit;
		
		private System.Nullable<System.DateTime> _User_current_visit;
		
		private string _Salt;
		
		private string _Country;
		
		public Rb_GetSingleUserResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string Company
		
    {
			get
			
      {
				return this._Company;
			}
			set
			
      {
				if ((this._Company != value))
				
        {
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string Address
		
    {
			get
			
      {
				return this._Address;
			}
			set
			
      {
				if ((this._Address != value))
				
        {
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string City
		
    {
			get
			
      {
				return this._City;
			}
			set
			
      {
				if ((this._City != value))
				
        {
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_Zip", DbType="NVarChar(6)")]
		[DataMember(Order=7)]
		public string Zip
		
    {
			get
			
      {
				return this._Zip;
			}
			set
			
      {
				if ((this._Zip != value))
				
        {
					this._Zip = value;
				}
			}
		}
		
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=8)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this._CountryID = value;
				}
			}
		}
		
		[Column(Storage="_StateID", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> StateID
		
    {
			get
			
      {
				return this._StateID;
			}
			set
			
      {
				if ((this._StateID != value))
				
        {
					this._StateID = value;
				}
			}
		}
		
		[Column(Storage="_PIva", DbType="NVarChar(11)")]
		[DataMember(Order=10)]
		public string PIva
		
    {
			get
			
      {
				return this._PIva;
			}
			set
			
      {
				if ((this._PIva != value))
				
        {
					this._PIva = value;
				}
			}
		}
		
		[Column(Storage="_CFiscale", DbType="NVarChar(16)")]
		[DataMember(Order=11)]
		public string CFiscale
		
    {
			get
			
      {
				return this._CFiscale;
			}
			set
			
      {
				if ((this._CFiscale != value))
				
        {
					this._CFiscale = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string Phone
		
    {
			get
			
      {
				return this._Phone;
			}
			set
			
      {
				if ((this._Phone != value))
				
        {
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(50)")]
		[DataMember(Order=13)]
		public string Fax
		
    {
			get
			
      {
				return this._Fax;
			}
			set
			
      {
				if ((this._Fax != value))
				
        {
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(40)")]
		[DataMember(Order=14)]
		public string Password
		
    {
			get
			
      {
				return this._Password;
			}
			set
			
      {
				if ((this._Password != value))
				
        {
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=15)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_SendNewsletter", DbType="Bit")]
		[DataMember(Order=16)]
		public System.Nullable<bool> SendNewsletter
		
    {
			get
			
      {
				return this._SendNewsletter;
			}
			set
			
      {
				if ((this._SendNewsletter != value))
				
        {
					this._SendNewsletter = value;
				}
			}
		}
		
		[Column(Storage="_MailChecked", DbType="TinyInt")]
		[DataMember(Order=17)]
		public System.Nullable<byte> MailChecked
		
    {
			get
			
      {
				return this._MailChecked;
			}
			set
			
      {
				if ((this._MailChecked != value))
				
        {
					this._MailChecked = value;
				}
			}
		}
		
		[Column(Storage="_LastSend", DbType="SmallDateTime")]
		[DataMember(Order=18)]
		public System.Nullable<System.DateTime> LastSend
		
    {
			get
			
      {
				return this._LastSend;
			}
			set
			
      {
				if ((this._LastSend != value))
				
        {
					this._LastSend = value;
				}
			}
		}
		
		[Column(Name="user_last_visit", Storage="_User_last_visit", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> User_last_visit
		
    {
			get
			
      {
				return this._User_last_visit;
			}
			set
			
      {
				if ((this._User_last_visit != value))
				
        {
					this._User_last_visit = value;
				}
			}
		}
		
		[Column(Name="user_current_visit", Storage="_User_current_visit", DbType="DateTime")]
		[DataMember(Order=20)]
		public System.Nullable<System.DateTime> User_current_visit
		
    {
			get
			
      {
				return this._User_current_visit;
			}
			set
			
      {
				if ((this._User_current_visit != value))
				
        {
					this._User_current_visit = value;
				}
			}
		}
		
		[Column(Storage="_Salt", DbType="VarChar(10)")]
		[DataMember(Order=21)]
		public string Salt
		
    {
			get
			
      {
				return this._Salt;
			}
			set
			
      {
				if ((this._Salt != value))
				
        {
					this._Salt = value;
				}
			}
		}
		
		[Column(Storage="_Country", DbType="NVarChar(1500)")]
		[DataMember(Order=22)]
		public string Country
		
    {
			get
			
      {
				return this._Country;
			}
			set
			
      {
				if ((this._Country != value))
				
        {
					this._Country = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleUserDefinedFieldResult
	
  {
		
		private System.Nullable<int> _ModuleID;
		
		private string _FieldTitle;
		
		private System.Nullable<bool> _Visible;
		
		private System.Nullable<int> _FieldOrder;
		
		public Rb_GetSingleUserDefinedFieldResult()
		
    {
		}
		
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this._ModuleID = value;
				}
			}
		}
		
		[Column(Storage="_FieldTitle", DbType="VarChar(50)")]
		[DataMember(Order=2)]
		public string FieldTitle
		
    {
			get
			
      {
				return this._FieldTitle;
			}
			set
			
      {
				if ((this._FieldTitle != value))
				
        {
					this._FieldTitle = value;
				}
			}
		}
		
		[Column(Storage="_Visible", DbType="Bit")]
		[DataMember(Order=3)]
		public System.Nullable<bool> Visible
		
    {
			get
			
      {
				return this._Visible;
			}
			set
			
      {
				if ((this._Visible != value))
				
        {
					this._Visible = value;
				}
			}
		}
		
		[Column(Storage="_FieldOrder", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> FieldOrder
		
    {
			get
			
      {
				return this._FieldOrder;
			}
			set
			
      {
				if ((this._FieldOrder != value))
				
        {
					this._FieldOrder = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSingleUserDefinedRowResult
	
  {
		
		private string _FieldTitle;
		
		private string _FieldValue;
		
		public Rb_GetSingleUserDefinedRowResult()
		
    {
		}
		
		[Column(Storage="_FieldTitle", DbType="VarChar(50)")]
		[DataMember(Order=1)]
		public string FieldTitle
		
    {
			get
			
      {
				return this._FieldTitle;
			}
			set
			
      {
				if ((this._FieldTitle != value))
				
        {
					this._FieldTitle = value;
				}
			}
		}
		
		[Column(Storage="_FieldValue", DbType="NVarChar(2000)")]
		[DataMember(Order=2)]
		public string FieldValue
		
    {
			get
			
      {
				return this._FieldValue;
			}
			set
			
      {
				if ((this._FieldValue != value))
				
        {
					this._FieldValue = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSurveyAnswersResult
	
  {
		
		private System.Nullable<int> _QuestionID;
		
		private string _Question;
		
		private System.Nullable<int> _OptionID;
		
		private string _OptionDesc;
		
		private System.Nullable<int> _Num;
		
		public Rb_GetSurveyAnswersResult()
		
    {
		}
		
		[Column(Storage="_QuestionID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> QuestionID
		
    {
			get
			
      {
				return this._QuestionID;
			}
			set
			
      {
				if ((this._QuestionID != value))
				
        {
					this._QuestionID = value;
				}
			}
		}
		
		[Column(Storage="_Question", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string Question
		
    {
			get
			
      {
				return this._Question;
			}
			set
			
      {
				if ((this._Question != value))
				
        {
					this._Question = value;
				}
			}
		}
		
		[Column(Storage="_OptionID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> OptionID
		
    {
			get
			
      {
				return this._OptionID;
			}
			set
			
      {
				if ((this._OptionID != value))
				
        {
					this._OptionID = value;
				}
			}
		}
		
		[Column(Storage="_OptionDesc", DbType="NVarChar(500)")]
		[DataMember(Order=4)]
		public string OptionDesc
		
    {
			get
			
      {
				return this._OptionDesc;
			}
			set
			
      {
				if ((this._OptionDesc != value))
				
        {
					this._OptionDesc = value;
				}
			}
		}
		
		[Column(Storage="_Num", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> Num
		
    {
			get
			
      {
				return this._Num;
			}
			set
			
      {
				if ((this._Num != value))
				
        {
					this._Num = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSurveyIDResult
	
  {
		
		private System.Nullable<int> _SurveyID;
		
		public Rb_GetSurveyIDResult()
		
    {
		}
		
		[Column(Storage="_SurveyID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					this._SurveyID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSurveyOptionListResult
	
  {
		
		private System.Nullable<int> _OptionID;
		
		private string _OptionDesc;
		
		private System.Nullable<int> _ViewOrder;
		
		public Rb_GetSurveyOptionListResult()
		
    {
		}
		
		[Column(Storage="_OptionID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> OptionID
		
    {
			get
			
      {
				return this._OptionID;
			}
			set
			
      {
				if ((this._OptionID != value))
				
        {
					this._OptionID = value;
				}
			}
		}
		
		[Column(Storage="_OptionDesc", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string OptionDesc
		
    {
			get
			
      {
				return this._OptionDesc;
			}
			set
			
      {
				if ((this._OptionDesc != value))
				
        {
					this._OptionDesc = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSurveyOptionsResult
	
  {
		
		private string _OptionDesc;
		
		public Rb_GetSurveyOptionsResult()
		
    {
		}
		
		[Column(Storage="_OptionDesc", DbType="NVarChar(500)")]
		[DataMember(Order=1)]
		public string OptionDesc
		
    {
			get
			
      {
				return this._OptionDesc;
			}
			set
			
      {
				if ((this._OptionDesc != value))
				
        {
					this._OptionDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSurveyQuestionListResult
	
  {
		
		private System.Nullable<int> _SurveyID;
		
		private System.Nullable<int> _QuestionID;
		
		private string _Question;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _TypeOption;
		
		public Rb_GetSurveyQuestionListResult()
		
    {
		}
		
		[Column(Storage="_SurveyID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					this._SurveyID = value;
				}
			}
		}
		
		[Column(Storage="_QuestionID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> QuestionID
		
    {
			get
			
      {
				return this._QuestionID;
			}
			set
			
      {
				if ((this._QuestionID != value))
				
        {
					this._QuestionID = value;
				}
			}
		}
		
		[Column(Storage="_Question", DbType="NVarChar(500)")]
		[DataMember(Order=3)]
		public string Question
		
    {
			get
			
      {
				return this._Question;
			}
			set
			
      {
				if ((this._Question != value))
				
        {
					this._Question = value;
				}
			}
		}
		
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this._ViewOrder = value;
				}
			}
		}
		
		[Column(Storage="_TypeOption", DbType="NVarChar(2)")]
		[DataMember(Order=5)]
		public string TypeOption
		
    {
			get
			
      {
				return this._TypeOption;
			}
			set
			
      {
				if ((this._TypeOption != value))
				
        {
					this._TypeOption = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetSurveyQuestionsResult
	
  {
		
		private System.Nullable<int> _SurveyID;
		
		private string _SurveyDesc;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _QuestionID;
		
		private string _Question;
		
		private string _TypeOption;
		
		private string _OptionDesc;
		
		private System.Nullable<int> _OptionID;
		
		public Rb_GetSurveyQuestionsResult()
		
    {
		}
		
		[Column(Storage="_SurveyID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					this._SurveyID = value;
				}
			}
		}
		
		[Column(Storage="_SurveyDesc", DbType="NVarChar(500)")]
		[DataMember(Order=2)]
		public string SurveyDesc
		
    {
			get
			
      {
				return this._SurveyDesc;
			}
			set
			
      {
				if ((this._SurveyDesc != value))
				
        {
					this._SurveyDesc = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_QuestionID", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> QuestionID
		
    {
			get
			
      {
				return this._QuestionID;
			}
			set
			
      {
				if ((this._QuestionID != value))
				
        {
					this._QuestionID = value;
				}
			}
		}
		
		[Column(Storage="_Question", DbType="NVarChar(500)")]
		[DataMember(Order=6)]
		public string Question
		
    {
			get
			
      {
				return this._Question;
			}
			set
			
      {
				if ((this._Question != value))
				
        {
					this._Question = value;
				}
			}
		}
		
		[Column(Storage="_TypeOption", DbType="NVarChar(2)")]
		[DataMember(Order=7)]
		public string TypeOption
		
    {
			get
			
      {
				return this._TypeOption;
			}
			set
			
      {
				if ((this._TypeOption != value))
				
        {
					this._TypeOption = value;
				}
			}
		}
		
		[Column(Storage="_OptionDesc", DbType="NVarChar(500)")]
		[DataMember(Order=8)]
		public string OptionDesc
		
    {
			get
			
      {
				return this._OptionDesc;
			}
			set
			
      {
				if ((this._OptionDesc != value))
				
        {
					this._OptionDesc = value;
				}
			}
		}
		
		[Column(Storage="_OptionID", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> OptionID
		
    {
			get
			
      {
				return this._OptionID;
			}
			set
			
      {
				if ((this._OptionID != value))
				
        {
					this._OptionID = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetTabsinTabResult
	
  {
		
		private System.Nullable<int> _PageID;
		
		private string _PageName;
		
		private System.Nullable<int> _ParentPageID;
		
		private System.Nullable<int> _PageOrder;
		
		private string _AuthorizedRoles;
		
		public Rb_GetTabsinTabResult()
		
    {
		}
		
		[Column(Storage="_PageID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> PageID
		
    {
			get
			
      {
				return this._PageID;
			}
			set
			
      {
				if ((this._PageID != value))
				
        {
					this._PageID = value;
				}
			}
		}
		
		[Column(Storage="_PageName", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string PageName
		
    {
			get
			
      {
				return this._PageName;
			}
			set
			
      {
				if ((this._PageName != value))
				
        {
					this._PageName = value;
				}
			}
		}
		
		[Column(Storage="_ParentPageID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> ParentPageID
		
    {
			get
			
      {
				return this._ParentPageID;
			}
			set
			
      {
				if ((this._ParentPageID != value))
				
        {
					this._ParentPageID = value;
				}
			}
		}
		
		[Column(Storage="_PageOrder", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> PageOrder
		
    {
			get
			
      {
				return this._PageOrder;
			}
			set
			
      {
				if ((this._PageOrder != value))
				
        {
					this._PageOrder = value;
				}
			}
		}
		
		[Column(Storage="_AuthorizedRoles", DbType="NVarChar(512)")]
		[DataMember(Order=5)]
		public string AuthorizedRoles
		
    {
			get
			
      {
				return this._AuthorizedRoles;
			}
			set
			
      {
				if ((this._AuthorizedRoles != value))
				
        {
					this._AuthorizedRoles = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetTasksResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _AssignedTo;
		
		private string _Title;
		
		private string _Description;
		
		private string _Status;
		
		private string _Priority;
		
		private System.Nullable<int> _PercentComplete;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public Rb_GetTasksResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this._CreatedByUser = value;
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this._CreatedDate = value;
				}
			}
		}
		
		[Column(Storage="_AssignedTo", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string AssignedTo
		
    {
			get
			
      {
				return this._AssignedTo;
			}
			set
			
      {
				if ((this._AssignedTo != value))
				
        {
					this._AssignedTo = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NText")]
		[DataMember(Order=6)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(20)")]
		[DataMember(Order=7)]
		public string Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_Priority", DbType="NVarChar(20)")]
		[DataMember(Order=8)]
		public string Priority
		
    {
			get
			
      {
				return this._Priority;
			}
			set
			
      {
				if ((this._Priority != value))
				
        {
					this._Priority = value;
				}
			}
		}
		
		[Column(Storage="_PercentComplete", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> PercentComplete
		
    {
			get
			
      {
				return this._PercentComplete;
			}
			set
			
      {
				if ((this._PercentComplete != value))
				
        {
					this._PercentComplete = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_DueDate", DbType="DateTime")]
		[DataMember(Order=11)]
		public System.Nullable<System.DateTime> DueDate
		
    {
			get
			
      {
				return this._DueDate;
			}
			set
			
      {
				if ((this._DueDate != value))
				
        {
					this._DueDate = value;
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		[DataMember(Order=12)]
		public System.Nullable<System.DateTime> ModifiedDate
		
    {
			get
			
      {
				return this._ModifiedDate;
			}
			set
			
      {
				if ((this._ModifiedDate != value))
				
        {
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetUserDefinedFieldsResult
	
  {
		
		private System.Nullable<int> _UserDefinedFieldID;
		
		private string _FieldTitle;
		
		private System.Nullable<bool> _Visible;
		
		private string _FieldType;
		
		public Rb_GetUserDefinedFieldsResult()
		
    {
		}
		
		[Column(Storage="_UserDefinedFieldID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserDefinedFieldID
		
    {
			get
			
      {
				return this._UserDefinedFieldID;
			}
			set
			
      {
				if ((this._UserDefinedFieldID != value))
				
        {
					this._UserDefinedFieldID = value;
				}
			}
		}
		
		[Column(Storage="_FieldTitle", DbType="VarChar(50)")]
		[DataMember(Order=2)]
		public string FieldTitle
		
    {
			get
			
      {
				return this._FieldTitle;
			}
			set
			
      {
				if ((this._FieldTitle != value))
				
        {
					this._FieldTitle = value;
				}
			}
		}
		
		[Column(Storage="_Visible", DbType="Bit")]
		[DataMember(Order=3)]
		public System.Nullable<bool> Visible
		
    {
			get
			
      {
				return this._Visible;
			}
			set
			
      {
				if ((this._Visible != value))
				
        {
					this._Visible = value;
				}
			}
		}
		
		[Column(Storage="_FieldType", DbType="VarChar(20)")]
		[DataMember(Order=4)]
		public string FieldType
		
    {
			get
			
      {
				return this._FieldType;
			}
			set
			
      {
				if ((this._FieldType != value))
				
        {
					this._FieldType = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetUserDefinedRowsResult
	
  {
		
		private System.Nullable<int> _UserDefinedRowID;
		
		private string _FieldTitle;
		
		private string _FieldValue;
		
		public Rb_GetUserDefinedRowsResult()
		
    {
		}
		
		[Column(Storage="_UserDefinedRowID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserDefinedRowID
		
    {
			get
			
      {
				return this._UserDefinedRowID;
			}
			set
			
      {
				if ((this._UserDefinedRowID != value))
				
        {
					this._UserDefinedRowID = value;
				}
			}
		}
		
		[Column(Storage="_FieldTitle", DbType="VarChar(50)")]
		[DataMember(Order=2)]
		public string FieldTitle
		
    {
			get
			
      {
				return this._FieldTitle;
			}
			set
			
      {
				if ((this._FieldTitle != value))
				
        {
					this._FieldTitle = value;
				}
			}
		}
		
		[Column(Storage="_FieldValue", DbType="NVarChar(2000)")]
		[DataMember(Order=3)]
		public string FieldValue
		
    {
			get
			
      {
				return this._FieldValue;
			}
			set
			
      {
				if ((this._FieldValue != value))
				
        {
					this._FieldValue = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetUsersResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Password;
		
		private string _Email;
		
		private System.Nullable<int> _PortalID;
		
		private string _Company;
		
		private string _Address;
		
		private string _City;
		
		private string _Zip;
		
		private string _CountryID;
		
		private System.Nullable<int> _StateID;
		
		private string _PIva;
		
		private string _CFiscale;
		
		private string _Phone;
		
		private string _Fax;
		
		public Rb_GetUsersResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(40)")]
		[DataMember(Order=3)]
		public string Password
		
    {
			get
			
      {
				return this._Password;
			}
			set
			
      {
				if ((this._Password != value))
				
        {
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_Company", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Company
		
    {
			get
			
      {
				return this._Company;
			}
			set
			
      {
				if ((this._Company != value))
				
        {
					this._Company = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string Address
		
    {
			get
			
      {
				return this._Address;
			}
			set
			
      {
				if ((this._Address != value))
				
        {
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="NVarChar(50)")]
		[DataMember(Order=8)]
		public string City
		
    {
			get
			
      {
				return this._City;
			}
			set
			
      {
				if ((this._City != value))
				
        {
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_Zip", DbType="NVarChar(6)")]
		[DataMember(Order=9)]
		public string Zip
		
    {
			get
			
      {
				return this._Zip;
			}
			set
			
      {
				if ((this._Zip != value))
				
        {
					this._Zip = value;
				}
			}
		}
		
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=10)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this._CountryID = value;
				}
			}
		}
		
		[Column(Storage="_StateID", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> StateID
		
    {
			get
			
      {
				return this._StateID;
			}
			set
			
      {
				if ((this._StateID != value))
				
        {
					this._StateID = value;
				}
			}
		}
		
		[Column(Storage="_PIva", DbType="NVarChar(11)")]
		[DataMember(Order=12)]
		public string PIva
		
    {
			get
			
      {
				return this._PIva;
			}
			set
			
      {
				if ((this._PIva != value))
				
        {
					this._PIva = value;
				}
			}
		}
		
		[Column(Storage="_CFiscale", DbType="NVarChar(16)")]
		[DataMember(Order=13)]
		public string CFiscale
		
    {
			get
			
      {
				return this._CFiscale;
			}
			set
			
      {
				if ((this._CFiscale != value))
				
        {
					this._CFiscale = value;
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(50)")]
		[DataMember(Order=14)]
		public string Phone
		
    {
			get
			
      {
				return this._Phone;
			}
			set
			
      {
				if ((this._Phone != value))
				
        {
					this._Phone = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(50)")]
		[DataMember(Order=15)]
		public string Fax
		
    {
			get
			
      {
				return this._Fax;
			}
			set
			
      {
				if ((this._Fax != value))
				
        {
					this._Fax = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_GetUsersNoRoleResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		public Rb_GetUsersNoRoleResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_SendNewsletterToResult
	
  {
		
		private System.Nullable<int> _Column1;
		
		public Rb_SendNewsletterToResult()
		
    {
		}
		
		[Column(Name="", Storage="_Column1", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> Column1
		
    {
			get
			
      {
				return this._Column1;
			}
			set
			
      {
				if ((this._Column1 != value))
				
        {
					this._Column1 = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_Tasks_GetSummaryResult
	
  {
		
		private System.Nullable<int> _ItemID;
		
		private string _ItemDesc;
		
		public Rb_Tasks_GetSummaryResult()
		
    {
		}
		
		[Column(Storage="_ItemID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this._ItemID = value;
				}
			}
		}
		
		[Column(Storage="_ItemDesc", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string ItemDesc
		
    {
			get
			
      {
				return this._ItemDesc;
			}
			set
			
      {
				if ((this._ItemDesc != value))
				
        {
					this._ItemDesc = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_UserLoginResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Password;
		
		private string _Salt;
		
		public Rb_UserLoginResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(40)")]
		[DataMember(Order=4)]
		public string Password
		
    {
			get
			
      {
				return this._Password;
			}
			set
			
      {
				if ((this._Password != value))
				
        {
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_Salt", DbType="VarChar(10)")]
		[DataMember(Order=5)]
		public string Salt
		
    {
			get
			
      {
				return this._Salt;
			}
			set
			
      {
				if ((this._Salt != value))
				
        {
					this._Salt = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_UserLoginByIDResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Password;
		
		private string _Salt;
		
		public Rb_UserLoginByIDResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(40)")]
		[DataMember(Order=4)]
		public string Password
		
    {
			get
			
      {
				return this._Password;
			}
			set
			
      {
				if ((this._Password != value))
				
        {
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_Salt", DbType="VarChar(10)")]
		[DataMember(Order=5)]
		public string Salt
		
    {
			get
			
      {
				return this._Salt;
			}
			set
			
      {
				if ((this._Salt != value))
				
        {
					this._Salt = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_UserLoginPlainResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		public Rb_UserLoginPlainResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class Rb_UserLoginPlainByIDResult
	
  {
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		public Rb_UserLoginPlainByIDResult()
		
    {
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this._Email = value;
				}
			}
		}
	}
  /// <summary>
  ///   
  /// </summary>
  #region Schema - dbo                                      --------------------


  /// <summary>
  ///   aspnet_Applications : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_Applications")]
	[DataContract()]
	public partial class Aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ApplicationName : No description found!
    /// </summary>
		private string _ApplicationName;
		
    /// <summary>
    ///   LoweredApplicationName : No description found!
    /// </summary>
		private string _LoweredApplicationName;
		
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		private System.Guid _ApplicationId;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
		private EntitySet<Aspnet_Membership> _Aspnet_Memberships;
		
		private EntitySet<Aspnet_Membership> _Applications;
		
		private EntitySet<Aspnet_Path> _Aspnet_Paths;
		
		private EntitySet<Aspnet_Path> @__aspnet_Pa__Appli__373BFD7Fs;
		
		private EntitySet<Aspnet_Role> _Aspnet_Roles;
		
		private EntitySet<Aspnet_Role> @__aspnet_Ro__Appli__3C00B29Cs;
		
		private EntitySet<Aspnet_User> _Aspnet_Users;
		
		private EntitySet<Aspnet_User> @__aspnet_Us__Appli__3CF4D6D5s;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_Application
    /// </summary>
		public Aspnet_Application()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ApplicationName : No description found!
    /// </summary>
		[Column(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string ApplicationName
		
    {
			get
			
      {
				return this._ApplicationName;
			}
			set
			
      {
				if ((this._ApplicationName != value))
				
        {
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   LoweredApplicationName : No description found!
    /// </summary>
		[Column(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string LoweredApplicationName
		
    {
			get
			
      {
				return this._LoweredApplicationName;
			}
			set
			
      {
				if ((this._LoweredApplicationName != value))
				
        {
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=4)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK__aspnet_Me__Appli__3553B50D", Storage="_Aspnet_Memberships", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<Aspnet_Membership> Aspnet_Memberships
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_Memberships.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_Memberships;
			}
			set
			
      {
				this._Aspnet_Memberships.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Me__Appli__7FB6BE6B", Storage="_Applications", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<Aspnet_Membership> Applications
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Applications.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Applications;
			}
			set
			
      {
				this._Applications.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Pa__Appli__019F06DD", Storage="_Aspnet_Paths", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<Aspnet_Path> Aspnet_Paths
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_Paths.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_Paths;
			}
			set
			
      {
				this._Aspnet_Paths.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Pa__Appli__373BFD7F", Storage="__aspnet_Pa__Appli__373BFD7Fs", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public EntitySet<Aspnet_Path> _aspnet_Pa__Appli__373BFD7Fs
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this.@__aspnet_Pa__Appli__373BFD7Fs.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this.@__aspnet_Pa__Appli__373BFD7Fs;
			}
			set
			
      {
				this.@__aspnet_Pa__Appli__373BFD7Fs.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Ro__Appli__0663BBFA", Storage="_Aspnet_Roles", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<Aspnet_Role> Aspnet_Roles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_Roles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_Roles;
			}
			set
			
      {
				this._Aspnet_Roles.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Ro__Appli__3C00B29C", Storage="__aspnet_Ro__Appli__3C00B29Cs", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<Aspnet_Role> _aspnet_Ro__Appli__3C00B29Cs
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this.@__aspnet_Ro__Appli__3C00B29Cs.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this.@__aspnet_Ro__Appli__3C00B29Cs;
			}
			set
			
      {
				this.@__aspnet_Ro__Appli__3C00B29Cs.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Us__Appli__0B287117", Storage="_Aspnet_Users", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<Aspnet_User> Aspnet_Users
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_Users.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_Users;
			}
			set
			
      {
				this._Aspnet_Users.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Us__Appli__3CF4D6D5", Storage="__aspnet_Us__Appli__3CF4D6D5s", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		[DataMember(Order=12, EmitDefaultValue=false)]
		public EntitySet<Aspnet_User> _aspnet_Us__Appli__3CF4D6D5s
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this.@__aspnet_Us__Appli__3CF4D6D5s.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this.@__aspnet_Us__Appli__3CF4D6D5s;
			}
			set
			
      {
				this.@__aspnet_Us__Appli__3CF4D6D5s.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Aspnet_Memberships(Aspnet_Membership entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = this;
		}
		
		private void detach_Aspnet_Memberships(Aspnet_Membership entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = null;
		}
		
		private void attach_Applications(Aspnet_Membership entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Applications(Aspnet_Membership entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Aspnet_Paths(Aspnet_Path entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = this;
		}
		
		private void detach_Aspnet_Paths(Aspnet_Path entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = null;
		}
		
		private void attach__aspnet_Pa__Appli__373BFD7Fs(Aspnet_Path entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach__aspnet_Pa__Appli__373BFD7Fs(Aspnet_Path entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Aspnet_Roles(Aspnet_Role entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = this;
		}
		
		private void detach_Aspnet_Roles(Aspnet_Role entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = null;
		}
		
		private void attach__aspnet_Ro__Appli__3C00B29Cs(Aspnet_Role entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach__aspnet_Ro__Appli__3C00B29Cs(Aspnet_Role entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Aspnet_Users(Aspnet_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = this;
		}
		
		private void detach_Aspnet_Users(Aspnet_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Application = null;
		}
		
		private void attach__aspnet_Us__Appli__3CF4D6D5s(Aspnet_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach__aspnet_Us__Appli__3CF4D6D5s(Aspnet_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void Initialize()
		
    {
			this._Aspnet_Memberships = new EntitySet<Aspnet_Membership>(new Action<Aspnet_Membership>(this.attach_Aspnet_Memberships), new Action<Aspnet_Membership>(this.detach_Aspnet_Memberships));
			this._Applications = new EntitySet<Aspnet_Membership>(new Action<Aspnet_Membership>(this.attach_Applications), new Action<Aspnet_Membership>(this.detach_Applications));
			this._Aspnet_Paths = new EntitySet<Aspnet_Path>(new Action<Aspnet_Path>(this.attach_Aspnet_Paths), new Action<Aspnet_Path>(this.detach_Aspnet_Paths));
			this.@__aspnet_Pa__Appli__373BFD7Fs = new EntitySet<Aspnet_Path>(new Action<Aspnet_Path>(this.attach__aspnet_Pa__Appli__373BFD7Fs), new Action<Aspnet_Path>(this.detach__aspnet_Pa__Appli__373BFD7Fs));
			this._Aspnet_Roles = new EntitySet<Aspnet_Role>(new Action<Aspnet_Role>(this.attach_Aspnet_Roles), new Action<Aspnet_Role>(this.detach_Aspnet_Roles));
			this.@__aspnet_Ro__Appli__3C00B29Cs = new EntitySet<Aspnet_Role>(new Action<Aspnet_Role>(this.attach__aspnet_Ro__Appli__3C00B29Cs), new Action<Aspnet_Role>(this.detach__aspnet_Ro__Appli__3C00B29Cs));
			this._Aspnet_Users = new EntitySet<Aspnet_User>(new Action<Aspnet_User>(this.attach_Aspnet_Users), new Action<Aspnet_User>(this.detach_Aspnet_Users));
			this.@__aspnet_Us__Appli__3CF4D6D5s = new EntitySet<Aspnet_User>(new Action<Aspnet_User>(this.attach__aspnet_Us__Appli__3CF4D6D5s), new Action<Aspnet_User>(this.detach__aspnet_Us__Appli__3CF4D6D5s));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   aspnet_Membership : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_Membership")]
	[DataContract()]
	public partial class Aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		private System.Guid _ApplicationId;
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		private System.Guid _UserId;
		
    /// <summary>
    ///   Password : No description found!
    /// </summary>
		private string _Password;
		
    /// <summary>
    ///   PasswordFormat : No description found!
    /// </summary>
		private int _PasswordFormat;
		
    /// <summary>
    ///   PasswordSalt : No description found!
    /// </summary>
		private string _PasswordSalt;
		
    /// <summary>
    ///   MobilePIN : No description found!
    /// </summary>
		private string _MobilePIN;
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		private string _Email;
		
    /// <summary>
    ///   LoweredEmail : No description found!
    /// </summary>
		private string _LoweredEmail;
		
    /// <summary>
    ///   PasswordQuestion : No description found!
    /// </summary>
		private string _PasswordQuestion;
		
    /// <summary>
    ///   PasswordAnswer : No description found!
    /// </summary>
		private string _PasswordAnswer;
		
    /// <summary>
    ///   IsApproved : No description found!
    /// </summary>
		private bool _IsApproved;
		
    /// <summary>
    ///   IsLockedOut : No description found!
    /// </summary>
		private bool _IsLockedOut;
		
    /// <summary>
    ///   CreateDate : No description found!
    /// </summary>
		private System.DateTime _CreateDate;
		
    /// <summary>
    ///   LastLoginDate : No description found!
    /// </summary>
		private System.DateTime _LastLoginDate;
		
    /// <summary>
    ///   LastPasswordChangedDate : No description found!
    /// </summary>
		private System.DateTime _LastPasswordChangedDate;
		
    /// <summary>
    ///   LastLockoutDate : No description found!
    /// </summary>
		private System.DateTime _LastLockoutDate;
		
    /// <summary>
    ///   FailedPasswordAttemptCount : No description found!
    /// </summary>
		private int _FailedPasswordAttemptCount;
		
    /// <summary>
    ///   FailedPasswordAttemptWindowStart : No description found!
    /// </summary>
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
    /// <summary>
    ///   FailedPasswordAnswerAttemptCount : No description found!
    /// </summary>
		private int _FailedPasswordAnswerAttemptCount;
		
    /// <summary>
    ///   FailedPasswordAnswerAttemptWindowStart : No description found!
    /// </summary>
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
    /// <summary>
    ///   Comment : No description found!
    /// </summary>
		private string _Comment;
		
		private EntityRef<Aspnet_Application> _Aspnet_Application;
		
		private EntityRef<Aspnet_Application> _Application;
		
		private EntityRef<Aspnet_User> _Aspnet_User;
		
		private EntityRef<Aspnet_User> _User;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_Membership
    /// </summary>
		public Aspnet_Membership()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					if (this._Aspnet_Application.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					if (this._Aspnet_User.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   Password : No description found!
    /// </summary>
		[Column(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Password
		
    {
			get
			
      {
				return this._Password;
			}
			set
			
      {
				if ((this._Password != value))
				
        {
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
    /// <summary>
    ///   PasswordFormat : No description found!
    /// </summary>
		[Column(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int PasswordFormat
		
    {
			get
			
      {
				return this._PasswordFormat;
			}
			set
			
      {
				if ((this._PasswordFormat != value))
				
        {
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
    /// <summary>
    ///   PasswordSalt : No description found!
    /// </summary>
		[Column(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string PasswordSalt
		
    {
			get
			
      {
				return this._PasswordSalt;
			}
			set
			
      {
				if ((this._PasswordSalt != value))
				
        {
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobilePIN : No description found!
    /// </summary>
		[Column(Storage="_MobilePIN", DbType="NVarChar(16)")]
		[DataMember(Order=6)]
		public string MobilePIN
		
    {
			get
			
      {
				return this._MobilePIN;
			}
			set
			
      {
				if ((this._MobilePIN != value))
				
        {
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		[DataMember(Order=7)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   LoweredEmail : No description found!
    /// </summary>
		[Column(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		[DataMember(Order=8)]
		public string LoweredEmail
		
    {
			get
			
      {
				return this._LoweredEmail;
			}
			set
			
      {
				if ((this._LoweredEmail != value))
				
        {
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   PasswordQuestion : No description found!
    /// </summary>
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		[DataMember(Order=9)]
		public string PasswordQuestion
		
    {
			get
			
      {
				return this._PasswordQuestion;
			}
			set
			
      {
				if ((this._PasswordQuestion != value))
				
        {
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
    /// <summary>
    ///   PasswordAnswer : No description found!
    /// </summary>
		[Column(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		[DataMember(Order=10)]
		public string PasswordAnswer
		
    {
			get
			
      {
				return this._PasswordAnswer;
			}
			set
			
      {
				if ((this._PasswordAnswer != value))
				
        {
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsApproved : No description found!
    /// </summary>
		[Column(Storage="_IsApproved", DbType="Bit NOT NULL")]
		[DataMember(Order=11)]
		public bool IsApproved
		
    {
			get
			
      {
				return this._IsApproved;
			}
			set
			
      {
				if ((this._IsApproved != value))
				
        {
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsLockedOut : No description found!
    /// </summary>
		[Column(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		[DataMember(Order=12)]
		public bool IsLockedOut
		
    {
			get
			
      {
				return this._IsLockedOut;
			}
			set
			
      {
				if ((this._IsLockedOut != value))
				
        {
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreateDate : No description found!
    /// </summary>
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=13)]
		public System.DateTime CreateDate
		
    {
			get
			
      {
				return this._CreateDate;
			}
			set
			
      {
				if ((this._CreateDate != value))
				
        {
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastLoginDate : No description found!
    /// </summary>
		[Column(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=14)]
		public System.DateTime LastLoginDate
		
    {
			get
			
      {
				return this._LastLoginDate;
			}
			set
			
      {
				if ((this._LastLoginDate != value))
				
        {
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastPasswordChangedDate : No description found!
    /// </summary>
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=15)]
		public System.DateTime LastPasswordChangedDate
		
    {
			get
			
      {
				return this._LastPasswordChangedDate;
			}
			set
			
      {
				if ((this._LastPasswordChangedDate != value))
				
        {
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastLockoutDate : No description found!
    /// </summary>
		[Column(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=16)]
		public System.DateTime LastLockoutDate
		
    {
			get
			
      {
				return this._LastLockoutDate;
			}
			set
			
      {
				if ((this._LastLockoutDate != value))
				
        {
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   FailedPasswordAttemptCount : No description found!
    /// </summary>
		[Column(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		[DataMember(Order=17)]
		public int FailedPasswordAttemptCount
		
    {
			get
			
      {
				return this._FailedPasswordAttemptCount;
			}
			set
			
      {
				if ((this._FailedPasswordAttemptCount != value))
				
        {
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
    /// <summary>
    ///   FailedPasswordAttemptWindowStart : No description found!
    /// </summary>
		[Column(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		[DataMember(Order=18)]
		public System.DateTime FailedPasswordAttemptWindowStart
		
    {
			get
			
      {
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			
      {
				if ((this._FailedPasswordAttemptWindowStart != value))
				
        {
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
    /// <summary>
    ///   FailedPasswordAnswerAttemptCount : No description found!
    /// </summary>
		[Column(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		[DataMember(Order=19)]
		public int FailedPasswordAnswerAttemptCount
		
    {
			get
			
      {
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			
      {
				if ((this._FailedPasswordAnswerAttemptCount != value))
				
        {
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
    /// <summary>
    ///   FailedPasswordAnswerAttemptWindowStart : No description found!
    /// </summary>
		[Column(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		[DataMember(Order=20)]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		
    {
			get
			
      {
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			
      {
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				
        {
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
    /// <summary>
    ///   Comment : No description found!
    /// </summary>
		[Column(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=21)]
		public string Comment
		
    {
			get
			
      {
				return this._Comment;
			}
			set
			
      {
				if ((this._Comment != value))
				
        {
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK__aspnet_Me__Appli__3553B50D
    /// </summary>
		[Association(Name="FK__aspnet_Me__Appli__3553B50D", Storage="_Aspnet_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Aspnet_Application
		
    {
			get
			
      {
				return this._Aspnet_Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Application.Entity = null;
						previousValue.Aspnet_Memberships.Remove(this);
					}
					this._Aspnet_Application.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Application");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Me__Appli__7FB6BE6B
    /// </summary>
		[Association(Name="FK__aspnet_Me__Appli__7FB6BE6B", Storage="_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Application
		
    {
			get
			
      {
				return this._Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Application.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					
          {
						value.Applications.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Me__UserI__00AAE2A4
    /// </summary>
		[Association(Name="FK__aspnet_Me__UserI__00AAE2A4", Storage="_Aspnet_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User Aspnet_User
		
    {
			get
			
      {
				return this._Aspnet_User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._Aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_User.Entity = null;
						previousValue.Aspnet_Membership = null;
					}
					this._Aspnet_User.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_User");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Me__UserI__3647D946
    /// </summary>
		[Association(Name="FK__aspnet_Me__UserI__3647D946", Storage="_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User User
		
    {
			get
			
      {
				return this._User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._User.Entity = null;
						previousValue.User = null;
					}
					this._User.Entity = value;
					if ((value != null))
					
          {
						value.User = this;
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Aspnet_Application = default(EntityRef<Aspnet_Application>);
			this._Application = default(EntityRef<Aspnet_Application>);
			this._Aspnet_User = default(EntityRef<Aspnet_User>);
			this._User = default(EntityRef<Aspnet_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   aspnet_Paths : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_Paths")]
	[DataContract()]
	public partial class Aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		private System.Guid _ApplicationId;
		
    /// <summary>
    ///   PathId : No description found!
    /// </summary>
		private System.Guid _PathId;
		
    /// <summary>
    ///   Path : No description found!
    /// </summary>
		private string _Path;
		
    /// <summary>
    ///   LoweredPath : No description found!
    /// </summary>
		private string _LoweredPath;
		
		private EntityRef<Aspnet_Application> _Aspnet_Application;
		
		private EntityRef<Aspnet_Application> _Application;
		
		private EntityRef<Aspnet_PersonalizationAllUser> _Aspnet_PersonalizationAllUser;
		
		private EntitySet<Aspnet_PersonalizationPerUser> _Aspnet_PersonalizationPerUsers;
		
		private EntityRef<Aspnet_PersonalizationAllUser> @__aspnet_Pe__PathI__383021B8;
		
		private EntitySet<Aspnet_PersonalizationPerUser> _Paths;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_Path
    /// </summary>
		public Aspnet_Path()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					if (this._Aspnet_Application.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   PathId : No description found!
    /// </summary>
		[Column(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid PathId
		
    {
			get
			
      {
				return this._PathId;
			}
			set
			
      {
				if ((this._PathId != value))
				
        {
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   Path : No description found!
    /// </summary>
		[Column(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Path
		
    {
			get
			
      {
				return this._Path;
			}
			set
			
      {
				if ((this._Path != value))
				
        {
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
    /// <summary>
    ///   LoweredPath : No description found!
    /// </summary>
		[Column(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string LoweredPath
		
    {
			get
			
      {
				return this._LoweredPath;
			}
			set
			
      {
				if ((this._LoweredPath != value))
				
        {
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pa__Appli__019F06DD
    /// </summary>
		[Association(Name="FK__aspnet_Pa__Appli__019F06DD", Storage="_Aspnet_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Aspnet_Application
		
    {
			get
			
      {
				return this._Aspnet_Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Application.Entity = null;
						previousValue.Aspnet_Paths.Remove(this);
					}
					this._Aspnet_Application.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Application");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pa__Appli__373BFD7F
    /// </summary>
		[Association(Name="FK__aspnet_Pa__Appli__373BFD7F", Storage="_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Application
		
    {
			get
			
      {
				return this._Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Application.Entity = null;
						previousValue._aspnet_Pa__Appli__373BFD7Fs.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					
          {
						value._aspnet_Pa__Appli__373BFD7Fs.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
    /// <summary>
    ///    One to one relationship via refernce Foreign Key: FK__aspnet_Pe__PathI__02932B16
    /// </summary>
		[Association(Name="FK__aspnet_Pe__PathI__02932B16", Storage="_Aspnet_PersonalizationAllUser", ThisKey="PathId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public Aspnet_PersonalizationAllUser Aspnet_PersonalizationAllUser
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this._Aspnet_PersonalizationAllUser.Entity;
			}
			set
			
      {
				Aspnet_PersonalizationAllUser previousValue = this._Aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_PersonalizationAllUser.Entity = null;
						previousValue.Aspnet_Path = null;
					}
					this._Aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_Path = this;
					}
					this.SendPropertyChanged("Aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[Association(Name="FK__aspnet_Pe__PathI__03874F4F", Storage="_Aspnet_PersonalizationPerUsers", OtherKey="PathId", DeleteRule="NO ACTION")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<Aspnet_PersonalizationPerUser> Aspnet_PersonalizationPerUsers
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_PersonalizationPerUsers.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_PersonalizationPerUsers;
			}
			set
			
      {
				this._Aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
    /// <summary>
    ///    One to one relationship via refernce Foreign Key: FK__aspnet_Pe__PathI__383021B8
    /// </summary>
		[Association(Name="FK__aspnet_Pe__PathI__383021B8", Storage="__aspnet_Pe__PathI__383021B8", ThisKey="PathId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public Aspnet_PersonalizationAllUser _aspnet_Pe__PathI__383021B8
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this.@__aspnet_Pe__PathI__383021B8.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this.@__aspnet_Pe__PathI__383021B8.Entity;
			}
			set
			
      {
				Aspnet_PersonalizationAllUser previousValue = this.@__aspnet_Pe__PathI__383021B8.Entity;
				if (((previousValue != value) 
							|| (this.@__aspnet_Pe__PathI__383021B8.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this.@__aspnet_Pe__PathI__383021B8.Entity = null;
						previousValue.Path = null;
					}
					this.@__aspnet_Pe__PathI__383021B8.Entity = value;
					if ((value != null))
					
          {
						value.Path = this;
					}
					this.SendPropertyChanged("_aspnet_Pe__PathI__383021B8");
				}
			}
		}
		
		[Association(Name="FK__aspnet_Pe__PathI__392445F1", Storage="_Paths", OtherKey="PathId", DeleteRule="NO ACTION")]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public EntitySet<Aspnet_PersonalizationPerUser> Paths
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Paths.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Paths;
			}
			set
			
      {
				this._Paths.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Aspnet_PersonalizationPerUsers(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Path = this;
		}
		
		private void detach_Aspnet_PersonalizationPerUsers(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Path = null;
		}
		
		private void attach_Paths(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.Path = this;
		}
		
		private void detach_Paths(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.Path = null;
		}
		
		private void Initialize()
		
    {
			this._Aspnet_Application = default(EntityRef<Aspnet_Application>);
			this._Application = default(EntityRef<Aspnet_Application>);
			this._Aspnet_PersonalizationAllUser = default(EntityRef<Aspnet_PersonalizationAllUser>);
			this._Aspnet_PersonalizationPerUsers = new EntitySet<Aspnet_PersonalizationPerUser>(new Action<Aspnet_PersonalizationPerUser>(this.attach_Aspnet_PersonalizationPerUsers), new Action<Aspnet_PersonalizationPerUser>(this.detach_Aspnet_PersonalizationPerUsers));
			this.@__aspnet_Pe__PathI__383021B8 = default(EntityRef<Aspnet_PersonalizationAllUser>);
			this._Paths = new EntitySet<Aspnet_PersonalizationPerUser>(new Action<Aspnet_PersonalizationPerUser>(this.attach_Paths), new Action<Aspnet_PersonalizationPerUser>(this.detach_Paths));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   aspnet_PersonalizationAllUsers : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_PersonalizationAllUsers")]
	[DataContract()]
	public partial class Aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PathId : No description found!
    /// </summary>
		private System.Guid _PathId;
		
    /// <summary>
    ///   PageSettings : No description found!
    /// </summary>
		private System.Data.Linq.Binary _PageSettings;
		
    /// <summary>
    ///   LastUpdatedDate : No description found!
    /// </summary>
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<Aspnet_Path> _Aspnet_Path;
		
		private EntityRef<Aspnet_Path> _Path;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_PersonalizationAllUser
    /// </summary>
		public Aspnet_PersonalizationAllUser()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PathId : No description found!
    /// </summary>
		[Column(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid PathId
		
    {
			get
			
      {
				return this._PathId;
			}
			set
			
      {
				if ((this._PathId != value))
				
        {
					if (this._Aspnet_Path.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   PageSettings : No description found!
    /// </summary>
		[Column(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public System.Data.Linq.Binary PageSettings
		
    {
			get
			
      {
				return this._PageSettings;
			}
			set
			
      {
				if ((this._PageSettings != value))
				
        {
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastUpdatedDate : No description found!
    /// </summary>
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=3)]
		public System.DateTime LastUpdatedDate
		
    {
			get
			
      {
				return this._LastUpdatedDate;
			}
			set
			
      {
				if ((this._LastUpdatedDate != value))
				
        {
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pe__PathI__02932B16
    /// </summary>
		[Association(Name="FK__aspnet_Pe__PathI__02932B16", Storage="_Aspnet_Path", ThisKey="PathId", IsForeignKey=true)]
		public Aspnet_Path Aspnet_Path
		
    {
			get
			
      {
				return this._Aspnet_Path.Entity;
			}
			set
			
      {
				Aspnet_Path previousValue = this._Aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Path.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Path.Entity = null;
						previousValue.Aspnet_PersonalizationAllUser = null;
					}
					this._Aspnet_Path.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					
          {
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Path");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pe__PathI__383021B8
    /// </summary>
		[Association(Name="FK__aspnet_Pe__PathI__383021B8", Storage="_Path", ThisKey="PathId", IsForeignKey=true)]
		public Aspnet_Path Path
		
    {
			get
			
      {
				return this._Path.Entity;
			}
			set
			
      {
				Aspnet_Path previousValue = this._Path.Entity;
				if (((previousValue != value) 
							|| (this._Path.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Path.Entity = null;
						previousValue._aspnet_Pe__PathI__383021B8 = null;
					}
					this._Path.Entity = value;
					if ((value != null))
					
          {
						value._aspnet_Pe__PathI__383021B8 = this;
						this._PathId = value.PathId;
					}
					else
					
          {
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("Path");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Aspnet_Path = default(EntityRef<Aspnet_Path>);
			this._Path = default(EntityRef<Aspnet_Path>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   aspnet_PersonalizationPerUser : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_PersonalizationPerUser")]
	[DataContract()]
	public partial class Aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private System.Guid _Id;
		
    /// <summary>
    ///   PathId : No description found!
    /// </summary>
		private System.Nullable<System.Guid> _PathId;
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		private System.Nullable<System.Guid> _UserId;
		
    /// <summary>
    ///   PageSettings : No description found!
    /// </summary>
		private System.Data.Linq.Binary _PageSettings;
		
    /// <summary>
    ///   LastUpdatedDate : No description found!
    /// </summary>
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<Aspnet_Path> _Aspnet_Path;
		
		private EntityRef<Aspnet_Path> _Path;
		
		private EntityRef<Aspnet_User> _Aspnet_User;
		
		private EntityRef<Aspnet_User> _User;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_PersonalizationPerUser
    /// </summary>
		public Aspnet_PersonalizationPerUser()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   PathId : No description found!
    /// </summary>
		[Column(Storage="_PathId", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> PathId
		
    {
			get
			
      {
				return this._PathId;
			}
			set
			
      {
				if ((this._PathId != value))
				
        {
					if (this._Aspnet_Path.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		[DataMember(Order=3)]
		public System.Nullable<System.Guid> UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					if (this._Aspnet_User.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   PageSettings : No description found!
    /// </summary>
		[Column(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=4)]
		public System.Data.Linq.Binary PageSettings
		
    {
			get
			
      {
				return this._PageSettings;
			}
			set
			
      {
				if ((this._PageSettings != value))
				
        {
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastUpdatedDate : No description found!
    /// </summary>
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=5)]
		public System.DateTime LastUpdatedDate
		
    {
			get
			
      {
				return this._LastUpdatedDate;
			}
			set
			
      {
				if ((this._LastUpdatedDate != value))
				
        {
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pe__PathI__03874F4F
    /// </summary>
		[Association(Name="FK__aspnet_Pe__PathI__03874F4F", Storage="_Aspnet_Path", ThisKey="PathId", IsForeignKey=true)]
		public Aspnet_Path Aspnet_Path
		
    {
			get
			
      {
				return this._Aspnet_Path.Entity;
			}
			set
			
      {
				Aspnet_Path previousValue = this._Aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Path.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Path.Entity = null;
						previousValue.Aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._Aspnet_Path.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					
          {
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Aspnet_Path");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pe__PathI__392445F1
    /// </summary>
		[Association(Name="FK__aspnet_Pe__PathI__392445F1", Storage="_Path", ThisKey="PathId", IsForeignKey=true)]
		public Aspnet_Path Path
		
    {
			get
			
      {
				return this._Path.Entity;
			}
			set
			
      {
				Aspnet_Path previousValue = this._Path.Entity;
				if (((previousValue != value) 
							|| (this._Path.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Path.Entity = null;
						previousValue.Paths.Remove(this);
					}
					this._Path.Entity = value;
					if ((value != null))
					
          {
						value.Paths.Add(this);
						this._PathId = value.PathId;
					}
					else
					
          {
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Path");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pe__UserI__047B7388
    /// </summary>
		[Association(Name="FK__aspnet_Pe__UserI__047B7388", Storage="_Aspnet_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User Aspnet_User
		
    {
			get
			
      {
				return this._Aspnet_User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._Aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_User.Entity = null;
						previousValue.Aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._Aspnet_User.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Aspnet_User");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pe__UserI__3A186A2A
    /// </summary>
		[Association(Name="FK__aspnet_Pe__UserI__3A186A2A", Storage="_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User User
		
    {
			get
			
      {
				return this._User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._User.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					
          {
						value.Users.Add(this);
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Aspnet_Path = default(EntityRef<Aspnet_Path>);
			this._Path = default(EntityRef<Aspnet_Path>);
			this._Aspnet_User = default(EntityRef<Aspnet_User>);
			this._User = default(EntityRef<Aspnet_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   aspnet_Profile : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_Profile")]
	[DataContract()]
	public partial class Aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		private System.Guid _UserId;
		
    /// <summary>
    ///   PropertyNames : No description found!
    /// </summary>
		private string _PropertyNames;
		
    /// <summary>
    ///   PropertyValuesString : No description found!
    /// </summary>
		private string _PropertyValuesString;
		
    /// <summary>
    ///   PropertyValuesBinary : No description found!
    /// </summary>
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
    /// <summary>
    ///   LastUpdatedDate : No description found!
    /// </summary>
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<Aspnet_User> _Aspnet_User;
		
		private EntityRef<Aspnet_User> _User;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_Profile
    /// </summary>
		public Aspnet_Profile()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					if (this._Aspnet_User.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   PropertyNames : No description found!
    /// </summary>
		[Column(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public string PropertyNames
		
    {
			get
			
      {
				return this._PropertyNames;
			}
			set
			
      {
				if ((this._PropertyNames != value))
				
        {
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
    /// <summary>
    ///   PropertyValuesString : No description found!
    /// </summary>
		[Column(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string PropertyValuesString
		
    {
			get
			
      {
				return this._PropertyValuesString;
			}
			set
			
      {
				if ((this._PropertyValuesString != value))
				
        {
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
    /// <summary>
    ///   PropertyValuesBinary : No description found!
    /// </summary>
		[Column(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=4)]
		public System.Data.Linq.Binary PropertyValuesBinary
		
    {
			get
			
      {
				return this._PropertyValuesBinary;
			}
			set
			
      {
				if ((this._PropertyValuesBinary != value))
				
        {
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastUpdatedDate : No description found!
    /// </summary>
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=5)]
		public System.DateTime LastUpdatedDate
		
    {
			get
			
      {
				return this._LastUpdatedDate;
			}
			set
			
      {
				if ((this._LastUpdatedDate != value))
				
        {
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pr__UserI__056F97C1
    /// </summary>
		[Association(Name="FK__aspnet_Pr__UserI__056F97C1", Storage="_Aspnet_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User Aspnet_User
		
    {
			get
			
      {
				return this._Aspnet_User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._Aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_User.Entity = null;
						previousValue.Aspnet_Profile = null;
					}
					this._Aspnet_User.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_User");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Pr__UserI__3B0C8E63
    /// </summary>
		[Association(Name="FK__aspnet_Pr__UserI__3B0C8E63", Storage="_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User User
		
    {
			get
			
      {
				return this._User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._User.Entity = null;
						previousValue._aspnet_Pr__UserI__3B0C8E63 = null;
					}
					this._User.Entity = value;
					if ((value != null))
					
          {
						value._aspnet_Pr__UserI__3B0C8E63 = this;
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Aspnet_User = default(EntityRef<Aspnet_User>);
			this._User = default(EntityRef<Aspnet_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   aspnet_Roles : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_Roles")]
	[DataContract()]
	public partial class Aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		private System.Guid _ApplicationId;
		
    /// <summary>
    ///   RoleId : No description found!
    /// </summary>
		private System.Guid _RoleId;
		
    /// <summary>
    ///   RoleName : No description found!
    /// </summary>
		private string _RoleName;
		
    /// <summary>
    ///   LoweredRoleName : No description found!
    /// </summary>
		private string _LoweredRoleName;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
		private EntityRef<Aspnet_Application> _Aspnet_Application;
		
		private EntityRef<Aspnet_Application> _Application;
		
		private EntitySet<Aspnet_UsersInRole> _Aspnet_UsersInRoles;
		
		private EntitySet<Aspnet_UsersInRole> _Roles;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_Role
    /// </summary>
		public Aspnet_Role()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					if (this._Aspnet_Application.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   RoleId : No description found!
    /// </summary>
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   RoleName : No description found!
    /// </summary>
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   LoweredRoleName : No description found!
    /// </summary>
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string LoweredRoleName
		
    {
			get
			
      {
				return this._LoweredRoleName;
			}
			set
			
      {
				if ((this._LoweredRoleName != value))
				
        {
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK__aspnet_Ro__Appli__0663BBFA
    /// </summary>
		[Association(Name="FK__aspnet_Ro__Appli__0663BBFA", Storage="_Aspnet_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Aspnet_Application
		
    {
			get
			
      {
				return this._Aspnet_Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Application.Entity = null;
						previousValue.Aspnet_Roles.Remove(this);
					}
					this._Aspnet_Application.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Application");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Ro__Appli__3C00B29C
    /// </summary>
		[Association(Name="FK__aspnet_Ro__Appli__3C00B29C", Storage="_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Application
		
    {
			get
			
      {
				return this._Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Application.Entity = null;
						previousValue._aspnet_Ro__Appli__3C00B29Cs.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					
          {
						value._aspnet_Ro__Appli__3C00B29Cs.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[Association(Name="FK__aspnet_Us__RoleI__0C1C9550", Storage="_Aspnet_UsersInRoles", OtherKey="RoleId", DeleteRule="NO ACTION")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<Aspnet_UsersInRole> Aspnet_UsersInRoles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_UsersInRoles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_UsersInRoles;
			}
			set
			
      {
				this._Aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Us__RoleI__3EDD1F47", Storage="_Roles", OtherKey="RoleId", DeleteRule="NO ACTION")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<Aspnet_UsersInRole> Roles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Roles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Roles;
			}
			set
			
      {
				this._Roles.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Aspnet_UsersInRoles(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Role = this;
		}
		
		private void detach_Aspnet_UsersInRoles(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_Role = null;
		}
		
		private void attach_Roles(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Roles(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void Initialize()
		
    {
			this._Aspnet_Application = default(EntityRef<Aspnet_Application>);
			this._Application = default(EntityRef<Aspnet_Application>);
			this._Aspnet_UsersInRoles = new EntitySet<Aspnet_UsersInRole>(new Action<Aspnet_UsersInRole>(this.attach_Aspnet_UsersInRoles), new Action<Aspnet_UsersInRole>(this.detach_Aspnet_UsersInRoles));
			this._Roles = new EntitySet<Aspnet_UsersInRole>(new Action<Aspnet_UsersInRole>(this.attach_Roles), new Action<Aspnet_UsersInRole>(this.detach_Roles));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   aspnet_SchemaVersions : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_SchemaVersions")]
	[DataContract()]
	public partial class Aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   Feature : No description found!
    /// </summary>
		private string _Feature;
		
    /// <summary>
    ///   CompatibleSchemaVersion : No description found!
    /// </summary>
		private string _CompatibleSchemaVersion;
		
    /// <summary>
    ///   IsCurrentVersion : No description found!
    /// </summary>
		private bool _IsCurrentVersion;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_SchemaVersion
    /// </summary>
		public Aspnet_SchemaVersion()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   Feature : No description found!
    /// </summary>
		[Column(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string Feature
		
    {
			get
			
      {
				return this._Feature;
			}
			set
			
      {
				if ((this._Feature != value))
				
        {
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
    /// <summary>
    ///   CompatibleSchemaVersion : No description found!
    /// </summary>
		[Column(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string CompatibleSchemaVersion
		
    {
			get
			
      {
				return this._CompatibleSchemaVersion;
			}
			set
			
      {
				if ((this._CompatibleSchemaVersion != value))
				
        {
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsCurrentVersion : No description found!
    /// </summary>
		[Column(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		[DataMember(Order=3)]
		public bool IsCurrentVersion
		
    {
			get
			
      {
				return this._IsCurrentVersion;
			}
			set
			
      {
				if ((this._IsCurrentVersion != value))
				
        {
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   AspNet_SqlCacheTablesForChangeNotification : No description found!
  /// </summary>
	[Table(Name="dbo.AspNet_SqlCacheTablesForChangeNotification")]
	[DataContract()]
	public partial class AspNet_SqlCacheTablesForChangeNotification : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   tableName : No description found!
    /// </summary>
		private string _TableName;
		
    /// <summary>
    ///   notificationCreated : No description found!
    /// </summary>
		private System.DateTime _NotificationCreated;
		
    /// <summary>
    ///   changeId : No description found!
    /// </summary>
		private int _ChangeId;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnNotificationCreatedChanging(System.DateTime value);
    partial void OnNotificationCreatedChanged();
    partial void OnChangeIdChanging(int value);
    partial void OnChangeIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of AspNet_SqlCacheTablesForChangeNotification
    /// </summary>
		public AspNet_SqlCacheTablesForChangeNotification()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   tableName : No description found!
    /// </summary>
		[Column(Name="tableName", Storage="_TableName", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string TableName
		
    {
			get
			
      {
				return this._TableName;
			}
			set
			
      {
				if ((this._TableName != value))
				
        {
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   notificationCreated : No description found!
    /// </summary>
		[Column(Name="notificationCreated", Storage="_NotificationCreated", DbType="DateTime NOT NULL")]
		[DataMember(Order=2)]
		public System.DateTime NotificationCreated
		
    {
			get
			
      {
				return this._NotificationCreated;
			}
			set
			
      {
				if ((this._NotificationCreated != value))
				
        {
					this.OnNotificationCreatedChanging(value);
					this.SendPropertyChanging();
					this._NotificationCreated = value;
					this.SendPropertyChanged("NotificationCreated");
					this.OnNotificationCreatedChanged();
				}
			}
		}
		
    /// <summary>
    ///   changeId : No description found!
    /// </summary>
		[Column(Name="changeId", Storage="_ChangeId", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ChangeId
		
    {
			get
			
      {
				return this._ChangeId;
			}
			set
			
      {
				if ((this._ChangeId != value))
				
        {
					this.OnChangeIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeId = value;
					this.SendPropertyChanged("ChangeId");
					this.OnChangeIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   aspnet_Users : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_Users")]
	[DataContract()]
	public partial class Aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		private System.Guid _ApplicationId;
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		private System.Guid _UserId;
		
    /// <summary>
    ///   UserName : No description found!
    /// </summary>
		private string _UserName;
		
    /// <summary>
    ///   LoweredUserName : No description found!
    /// </summary>
		private string _LoweredUserName;
		
    /// <summary>
    ///   MobileAlias : No description found!
    /// </summary>
		private string _MobileAlias;
		
    /// <summary>
    ///   IsAnonymous : No description found!
    /// </summary>
		private bool _IsAnonymous;
		
    /// <summary>
    ///   LastActivityDate : No description found!
    /// </summary>
		private System.DateTime _LastActivityDate;
		
		private EntityRef<Aspnet_Membership> _Aspnet_Membership;
		
		private EntityRef<Aspnet_Membership> _User;
		
		private EntitySet<Aspnet_PersonalizationPerUser> _Aspnet_PersonalizationPerUsers;
		
		private EntitySet<Aspnet_PersonalizationPerUser> _Users;
		
		private EntityRef<Aspnet_Profile> _Aspnet_Profile;
		
		private EntityRef<Aspnet_Profile> @__aspnet_Pr__UserI__3B0C8E63;
		
		private EntityRef<Aspnet_Application> _Aspnet_Application;
		
		private EntityRef<Aspnet_Application> _Application;
		
		private EntitySet<Aspnet_UsersInRole> _Aspnet_UsersInRoles;
		
		private EntitySet<Aspnet_UsersInRole> @__aspnet_Us__UserI__3DE8FB0Es;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_User
    /// </summary>
		public Aspnet_User()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ApplicationId : No description found!
    /// </summary>
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationId
		
    {
			get
			
      {
				return this._ApplicationId;
			}
			set
			
      {
				if ((this._ApplicationId != value))
				
        {
					if (this._Aspnet_Application.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserName : No description found!
    /// </summary>
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string UserName
		
    {
			get
			
      {
				return this._UserName;
			}
			set
			
      {
				if ((this._UserName != value))
				
        {
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   LoweredUserName : No description found!
    /// </summary>
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string LoweredUserName
		
    {
			get
			
      {
				return this._LoweredUserName;
			}
			set
			
      {
				if ((this._LoweredUserName != value))
				
        {
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileAlias : No description found!
    /// </summary>
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		[DataMember(Order=5)]
		public string MobileAlias
		
    {
			get
			
      {
				return this._MobileAlias;
			}
			set
			
      {
				if ((this._MobileAlias != value))
				
        {
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsAnonymous : No description found!
    /// </summary>
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		[DataMember(Order=6)]
		public bool IsAnonymous
		
    {
			get
			
      {
				return this._IsAnonymous;
			}
			set
			
      {
				if ((this._IsAnonymous != value))
				
        {
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastActivityDate : No description found!
    /// </summary>
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=7)]
		public System.DateTime LastActivityDate
		
    {
			get
			
      {
				return this._LastActivityDate;
			}
			set
			
      {
				if ((this._LastActivityDate != value))
				
        {
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///    One to one relationship via refernce Foreign Key: FK__aspnet_Me__UserI__00AAE2A4
    /// </summary>
		[Association(Name="FK__aspnet_Me__UserI__00AAE2A4", Storage="_Aspnet_Membership", ThisKey="UserId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public Aspnet_Membership Aspnet_Membership
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_Membership.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this._Aspnet_Membership.Entity;
			}
			set
			
      {
				Aspnet_Membership previousValue = this._Aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Membership.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Membership.Entity = null;
						previousValue.Aspnet_User = null;
					}
					this._Aspnet_Membership.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_User = this;
					}
					this.SendPropertyChanged("Aspnet_Membership");
				}
			}
		}
		
    /// <summary>
    ///    One to one relationship via refernce Foreign Key: FK__aspnet_Me__UserI__3647D946
    /// </summary>
		[Association(Name="FK__aspnet_Me__UserI__3647D946", Storage="_User", ThisKey="UserId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public Aspnet_Membership User
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._User.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this._User.Entity;
			}
			set
			
      {
				Aspnet_Membership previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._User.Entity = null;
						previousValue.User = null;
					}
					this._User.Entity = value;
					if ((value != null))
					
          {
						value.User = this;
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[Association(Name="FK__aspnet_Pe__UserI__047B7388", Storage="_Aspnet_PersonalizationPerUsers", OtherKey="UserId", DeleteRule="NO ACTION")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<Aspnet_PersonalizationPerUser> Aspnet_PersonalizationPerUsers
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_PersonalizationPerUsers.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_PersonalizationPerUsers;
			}
			set
			
      {
				this._Aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Pe__UserI__3A186A2A", Storage="_Users", OtherKey="UserId", DeleteRule="NO ACTION")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<Aspnet_PersonalizationPerUser> Users
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Users.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Users;
			}
			set
			
      {
				this._Users.Assign(value);
			}
		}
		
    /// <summary>
    ///    One to one relationship via refernce Foreign Key: FK__aspnet_Pr__UserI__056F97C1
    /// </summary>
		[Association(Name="FK__aspnet_Pr__UserI__056F97C1", Storage="_Aspnet_Profile", ThisKey="UserId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		[DataMember(Order=12, EmitDefaultValue=false)]
		public Aspnet_Profile Aspnet_Profile
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_Profile.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this._Aspnet_Profile.Entity;
			}
			set
			
      {
				Aspnet_Profile previousValue = this._Aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Profile.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Profile.Entity = null;
						previousValue.Aspnet_User = null;
					}
					this._Aspnet_Profile.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_User = this;
					}
					this.SendPropertyChanged("Aspnet_Profile");
				}
			}
		}
		
    /// <summary>
    ///    One to one relationship via refernce Foreign Key: FK__aspnet_Pr__UserI__3B0C8E63
    /// </summary>
		[Association(Name="FK__aspnet_Pr__UserI__3B0C8E63", Storage="__aspnet_Pr__UserI__3B0C8E63", ThisKey="UserId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		[DataMember(Order=13, EmitDefaultValue=false)]
		public Aspnet_Profile _aspnet_Pr__UserI__3B0C8E63
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this.@__aspnet_Pr__UserI__3B0C8E63.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this.@__aspnet_Pr__UserI__3B0C8E63.Entity;
			}
			set
			
      {
				Aspnet_Profile previousValue = this.@__aspnet_Pr__UserI__3B0C8E63.Entity;
				if (((previousValue != value) 
							|| (this.@__aspnet_Pr__UserI__3B0C8E63.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this.@__aspnet_Pr__UserI__3B0C8E63.Entity = null;
						previousValue.User = null;
					}
					this.@__aspnet_Pr__UserI__3B0C8E63.Entity = value;
					if ((value != null))
					
          {
						value.User = this;
					}
					this.SendPropertyChanged("_aspnet_Pr__UserI__3B0C8E63");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Us__Appli__0B287117
    /// </summary>
		[Association(Name="FK__aspnet_Us__Appli__0B287117", Storage="_Aspnet_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Aspnet_Application
		
    {
			get
			
      {
				return this._Aspnet_Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Application.Entity = null;
						previousValue.Aspnet_Users.Remove(this);
					}
					this._Aspnet_Application.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Application");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Us__Appli__3CF4D6D5
    /// </summary>
		[Association(Name="FK__aspnet_Us__Appli__3CF4D6D5", Storage="_Application", ThisKey="ApplicationId", IsForeignKey=true)]
		public Aspnet_Application Application
		
    {
			get
			
      {
				return this._Application.Entity;
			}
			set
			
      {
				Aspnet_Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Application.Entity = null;
						previousValue._aspnet_Us__Appli__3CF4D6D5s.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					
          {
						value._aspnet_Us__Appli__3CF4D6D5s.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					
          {
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[Association(Name="FK__aspnet_Us__UserI__0D10B989", Storage="_Aspnet_UsersInRoles", OtherKey="UserId", DeleteRule="NO ACTION")]
		[DataMember(Order=14, EmitDefaultValue=false)]
		public EntitySet<Aspnet_UsersInRole> Aspnet_UsersInRoles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Aspnet_UsersInRoles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Aspnet_UsersInRoles;
			}
			set
			
      {
				this._Aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[Association(Name="FK__aspnet_Us__UserI__3DE8FB0E", Storage="__aspnet_Us__UserI__3DE8FB0Es", OtherKey="UserId", DeleteRule="NO ACTION")]
		[DataMember(Order=15, EmitDefaultValue=false)]
		public EntitySet<Aspnet_UsersInRole> _aspnet_Us__UserI__3DE8FB0Es
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this.@__aspnet_Us__UserI__3DE8FB0Es.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this.@__aspnet_Us__UserI__3DE8FB0Es;
			}
			set
			
      {
				this.@__aspnet_Us__UserI__3DE8FB0Es.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Aspnet_PersonalizationPerUsers(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_User = this;
		}
		
		private void detach_Aspnet_PersonalizationPerUsers(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_User = null;
		}
		
		private void attach_Users(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Users(Aspnet_PersonalizationPerUser entity)
		
    {
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Aspnet_UsersInRoles(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_User = this;
		}
		
		private void detach_Aspnet_UsersInRoles(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Aspnet_User = null;
		}
		
		private void attach__aspnet_Us__UserI__3DE8FB0Es(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach__aspnet_Us__UserI__3DE8FB0Es(Aspnet_UsersInRole entity)
		
    {
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		
    {
			this._Aspnet_Membership = default(EntityRef<Aspnet_Membership>);
			this._User = default(EntityRef<Aspnet_Membership>);
			this._Aspnet_PersonalizationPerUsers = new EntitySet<Aspnet_PersonalizationPerUser>(new Action<Aspnet_PersonalizationPerUser>(this.attach_Aspnet_PersonalizationPerUsers), new Action<Aspnet_PersonalizationPerUser>(this.detach_Aspnet_PersonalizationPerUsers));
			this._Users = new EntitySet<Aspnet_PersonalizationPerUser>(new Action<Aspnet_PersonalizationPerUser>(this.attach_Users), new Action<Aspnet_PersonalizationPerUser>(this.detach_Users));
			this._Aspnet_Profile = default(EntityRef<Aspnet_Profile>);
			this.@__aspnet_Pr__UserI__3B0C8E63 = default(EntityRef<Aspnet_Profile>);
			this._Aspnet_Application = default(EntityRef<Aspnet_Application>);
			this._Application = default(EntityRef<Aspnet_Application>);
			this._Aspnet_UsersInRoles = new EntitySet<Aspnet_UsersInRole>(new Action<Aspnet_UsersInRole>(this.attach_Aspnet_UsersInRoles), new Action<Aspnet_UsersInRole>(this.detach_Aspnet_UsersInRoles));
			this.@__aspnet_Us__UserI__3DE8FB0Es = new EntitySet<Aspnet_UsersInRole>(new Action<Aspnet_UsersInRole>(this.attach__aspnet_Us__UserI__3DE8FB0Es), new Action<Aspnet_UsersInRole>(this.detach__aspnet_Us__UserI__3DE8FB0Es));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   aspnet_UsersInRoles : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_UsersInRoles")]
	[DataContract()]
	public partial class Aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		private System.Guid _UserId;
		
    /// <summary>
    ///   RoleId : No description found!
    /// </summary>
		private System.Guid _RoleId;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Aspnet_Role> _Aspnet_Role;
		
		private EntityRef<Aspnet_Role> _Role;
		
		private EntityRef<Aspnet_User> _Aspnet_User;
		
		private EntityRef<Aspnet_User> _User;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_UsersInRole
    /// </summary>
		public Aspnet_UsersInRole()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserId : No description found!
    /// </summary>
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid UserId
		
    {
			get
			
      {
				return this._UserId;
			}
			set
			
      {
				if ((this._UserId != value))
				
        {
					if (this._Aspnet_User.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   RoleId : No description found!
    /// </summary>
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid RoleId
		
    {
			get
			
      {
				return this._RoleId;
			}
			set
			
      {
				if ((this._RoleId != value))
				
        {
					if (this._Aspnet_Role.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=3)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK__aspnet_Us__RoleI__0C1C9550
    /// </summary>
		[Association(Name="FK__aspnet_Us__RoleI__0C1C9550", Storage="_Aspnet_Role", ThisKey="RoleId", IsForeignKey=true)]
		public Aspnet_Role Aspnet_Role
		
    {
			get
			
      {
				return this._Aspnet_Role.Entity;
			}
			set
			
      {
				Aspnet_Role previousValue = this._Aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_Role.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_Role.Entity = null;
						previousValue.Aspnet_UsersInRoles.Remove(this);
					}
					this._Aspnet_Role.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					
          {
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_Role");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Us__RoleI__3EDD1F47
    /// </summary>
		[Association(Name="FK__aspnet_Us__RoleI__3EDD1F47", Storage="_Role", ThisKey="RoleId", IsForeignKey=true)]
		public Aspnet_Role Role
		
    {
			get
			
      {
				return this._Role.Entity;
			}
			set
			
      {
				Aspnet_Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Role.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					
          {
						value.Roles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					
          {
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Us__UserI__0D10B989
    /// </summary>
		[Association(Name="FK__aspnet_Us__UserI__0D10B989", Storage="_Aspnet_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User Aspnet_User
		
    {
			get
			
      {
				return this._Aspnet_User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._Aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._Aspnet_User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Aspnet_User.Entity = null;
						previousValue.Aspnet_UsersInRoles.Remove(this);
					}
					this._Aspnet_User.Entity = value;
					if ((value != null))
					
          {
						value.Aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Aspnet_User");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK__aspnet_Us__UserI__3DE8FB0E
    /// </summary>
		[Association(Name="FK__aspnet_Us__UserI__3DE8FB0E", Storage="_User", ThisKey="UserId", IsForeignKey=true)]
		public Aspnet_User User
		
    {
			get
			
      {
				return this._User.Entity;
			}
			set
			
      {
				Aspnet_User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._User.Entity = null;
						previousValue._aspnet_Us__UserI__3DE8FB0Es.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					
          {
						value._aspnet_Us__UserI__3DE8FB0Es.Add(this);
						this._UserId = value.UserId;
					}
					else
					
          {
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Aspnet_Role = default(EntityRef<Aspnet_Role>);
			this._Role = default(EntityRef<Aspnet_Role>);
			this._Aspnet_User = default(EntityRef<Aspnet_User>);
			this._User = default(EntityRef<Aspnet_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   aspnet_WebEvent_Events : No description found!
  /// </summary>
	[Table(Name="dbo.aspnet_WebEvent_Events")]
	[DataContract()]
	public partial class Aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   EventId : No description found!
    /// </summary>
		private string _EventId;
		
    /// <summary>
    ///   EventTimeUtc : No description found!
    /// </summary>
		private System.DateTime _EventTimeUtc;
		
    /// <summary>
    ///   EventTime : No description found!
    /// </summary>
		private System.DateTime _EventTime;
		
    /// <summary>
    ///   EventType : No description found!
    /// </summary>
		private string _EventType;
		
    /// <summary>
    ///   EventSequence : No description found!
    /// </summary>
		private decimal _EventSequence;
		
    /// <summary>
    ///   EventOccurrence : No description found!
    /// </summary>
		private decimal _EventOccurrence;
		
    /// <summary>
    ///   EventCode : No description found!
    /// </summary>
		private int _EventCode;
		
    /// <summary>
    ///   EventDetailCode : No description found!
    /// </summary>
		private int _EventDetailCode;
		
    /// <summary>
    ///   Message : No description found!
    /// </summary>
		private string _Message;
		
    /// <summary>
    ///   ApplicationPath : No description found!
    /// </summary>
		private string _ApplicationPath;
		
    /// <summary>
    ///   ApplicationVirtualPath : No description found!
    /// </summary>
		private string _ApplicationVirtualPath;
		
    /// <summary>
    ///   MachineName : No description found!
    /// </summary>
		private string _MachineName;
		
    /// <summary>
    ///   RequestUrl : No description found!
    /// </summary>
		private string _RequestUrl;
		
    /// <summary>
    ///   ExceptionType : No description found!
    /// </summary>
		private string _ExceptionType;
		
    /// <summary>
    ///   Details : No description found!
    /// </summary>
		private string _Details;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Aspnet_WebEvent_Event
    /// </summary>
		public Aspnet_WebEvent_Event()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   EventId : No description found!
    /// </summary>
		[Column(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string EventId
		
    {
			get
			
      {
				return this._EventId;
			}
			set
			
      {
				if ((this._EventId != value))
				
        {
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   EventTimeUtc : No description found!
    /// </summary>
		[Column(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		[DataMember(Order=2)]
		public System.DateTime EventTimeUtc
		
    {
			get
			
      {
				return this._EventTimeUtc;
			}
			set
			
      {
				if ((this._EventTimeUtc != value))
				
        {
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
    /// <summary>
    ///   EventTime : No description found!
    /// </summary>
		[Column(Storage="_EventTime", DbType="DateTime NOT NULL")]
		[DataMember(Order=3)]
		public System.DateTime EventTime
		
    {
			get
			
      {
				return this._EventTime;
			}
			set
			
      {
				if ((this._EventTime != value))
				
        {
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
    /// <summary>
    ///   EventType : No description found!
    /// </summary>
		[Column(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string EventType
		
    {
			get
			
      {
				return this._EventType;
			}
			set
			
      {
				if ((this._EventType != value))
				
        {
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   EventSequence : No description found!
    /// </summary>
		[Column(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		[DataMember(Order=5)]
		public decimal EventSequence
		
    {
			get
			
      {
				return this._EventSequence;
			}
			set
			
      {
				if ((this._EventSequence != value))
				
        {
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
    /// <summary>
    ///   EventOccurrence : No description found!
    /// </summary>
		[Column(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		[DataMember(Order=6)]
		public decimal EventOccurrence
		
    {
			get
			
      {
				return this._EventOccurrence;
			}
			set
			
      {
				if ((this._EventOccurrence != value))
				
        {
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
    /// <summary>
    ///   EventCode : No description found!
    /// </summary>
		[Column(Storage="_EventCode", DbType="Int NOT NULL")]
		[DataMember(Order=7)]
		public int EventCode
		
    {
			get
			
      {
				return this._EventCode;
			}
			set
			
      {
				if ((this._EventCode != value))
				
        {
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   EventDetailCode : No description found!
    /// </summary>
		[Column(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		[DataMember(Order=8)]
		public int EventDetailCode
		
    {
			get
			
      {
				return this._EventDetailCode;
			}
			set
			
      {
				if ((this._EventDetailCode != value))
				
        {
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   Message : No description found!
    /// </summary>
		[Column(Storage="_Message", DbType="NVarChar(1024)")]
		[DataMember(Order=9)]
		public string Message
		
    {
			get
			
      {
				return this._Message;
			}
			set
			
      {
				if ((this._Message != value))
				
        {
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
    /// <summary>
    ///   ApplicationPath : No description found!
    /// </summary>
		[Column(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		[DataMember(Order=10)]
		public string ApplicationPath
		
    {
			get
			
      {
				return this._ApplicationPath;
			}
			set
			
      {
				if ((this._ApplicationPath != value))
				
        {
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
    /// <summary>
    ///   ApplicationVirtualPath : No description found!
    /// </summary>
		[Column(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		[DataMember(Order=11)]
		public string ApplicationVirtualPath
		
    {
			get
			
      {
				return this._ApplicationVirtualPath;
			}
			set
			
      {
				if ((this._ApplicationVirtualPath != value))
				
        {
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
    /// <summary>
    ///   MachineName : No description found!
    /// </summary>
		[Column(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=12)]
		public string MachineName
		
    {
			get
			
      {
				return this._MachineName;
			}
			set
			
      {
				if ((this._MachineName != value))
				
        {
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   RequestUrl : No description found!
    /// </summary>
		[Column(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		[DataMember(Order=13)]
		public string RequestUrl
		
    {
			get
			
      {
				return this._RequestUrl;
			}
			set
			
      {
				if ((this._RequestUrl != value))
				
        {
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   ExceptionType : No description found!
    /// </summary>
		[Column(Storage="_ExceptionType", DbType="NVarChar(256)")]
		[DataMember(Order=14)]
		public string ExceptionType
		
    {
			get
			
      {
				return this._ExceptionType;
			}
			set
			
      {
				if ((this._ExceptionType != value))
				
        {
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   Details : No description found!
    /// </summary>
		[Column(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=15)]
		public string Details
		
    {
			get
			
      {
				return this._Details;
			}
			set
			
      {
				if ((this._Details != value))
				
        {
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=16)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Announcements : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Announcements")]
	[DataContract()]
	public partial class Rb_Announcement : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		private string _MoreLink;
		
    /// <summary>
    ///   MobileMoreLink : No description found!
    /// </summary>
		private string _MobileMoreLink;
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ExpireDate;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMoreLinkChanging(string value);
    partial void OnMoreLinkChanged();
    partial void OnMobileMoreLinkChanging(string value);
    partial void OnMobileMoreLinkChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Announcement
    /// </summary>
		public Rb_Announcement()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(150)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=6)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this.OnMoreLinkChanging(value);
					this.SendPropertyChanging();
					this._MoreLink = value;
					this.SendPropertyChanged("MoreLink");
					this.OnMoreLinkChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileMoreLink : No description found!
    /// </summary>
		[Column(Storage="_MobileMoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=7)]
		public string MobileMoreLink
		
    {
			get
			
      {
				return this._MobileMoreLink;
			}
			set
			
      {
				if ((this._MobileMoreLink != value))
				
        {
					this.OnMobileMoreLinkChanging(value);
					this.SendPropertyChanging();
					this._MobileMoreLink = value;
					this.SendPropertyChanged("MobileMoreLink");
					this.OnMobileMoreLinkChanged();
				}
			}
		}
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Announcements_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Announcements_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Announcements.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Announcements.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Announcements_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Announcements_st")]
	[DataContract()]
	public partial class Rb_Announcements_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		private string _MoreLink;
		
    /// <summary>
    ///   MobileMoreLink : No description found!
    /// </summary>
		private string _MobileMoreLink;
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ExpireDate;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMoreLinkChanging(string value);
    partial void OnMoreLinkChanged();
    partial void OnMobileMoreLinkChanging(string value);
    partial void OnMobileMoreLinkChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Announcements_st
    /// </summary>
		public Rb_Announcements_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(150)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=6)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this.OnMoreLinkChanging(value);
					this.SendPropertyChanging();
					this._MoreLink = value;
					this.SendPropertyChanged("MoreLink");
					this.OnMoreLinkChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileMoreLink : No description found!
    /// </summary>
		[Column(Storage="_MobileMoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=7)]
		public string MobileMoreLink
		
    {
			get
			
      {
				return this._MobileMoreLink;
			}
			set
			
      {
				if ((this._MobileMoreLink != value))
				
        {
					this.OnMobileMoreLinkChanging(value);
					this.SendPropertyChanging();
					this._MobileMoreLink = value;
					this.SendPropertyChanged("MobileMoreLink");
					this.OnMobileMoreLinkChanged();
				}
			}
		}
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Announcements_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Announcements_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Announcements_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Announcements_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Articles : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Articles")]
	[DataContract()]
	public partial class Rb_Article : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Subtitle : No description found!
    /// </summary>
		private string _Subtitle;
		
    /// <summary>
    ///   Abstract : No description found!
    /// </summary>
		private string _Abstract;
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _StartDate;
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ExpireDate;
		
    /// <summary>
    ///   IsInNewsletter : No description found!
    /// </summary>
		private System.Nullable<bool> _IsInNewsletter;
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		private string _MoreLink;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubtitleChanging(string value);
    partial void OnSubtitleChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnIsInNewsletterChanging(System.Nullable<bool> value);
    partial void OnIsInNewsletterChanged();
    partial void OnMoreLinkChanging(string value);
    partial void OnMoreLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Article
    /// </summary>
		public Rb_Article()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Subtitle : No description found!
    /// </summary>
		[Column(Storage="_Subtitle", DbType="NVarChar(200)")]
		[DataMember(Order=6)]
		public string Subtitle
		
    {
			get
			
      {
				return this._Subtitle;
			}
			set
			
      {
				if ((this._Subtitle != value))
				
        {
					this.OnSubtitleChanging(value);
					this.SendPropertyChanging();
					this._Subtitle = value;
					this.SendPropertyChanged("Subtitle");
					this.OnSubtitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Abstract : No description found!
    /// </summary>
		[Column(Storage="_Abstract", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=7)]
		public string Abstract
		
    {
			get
			
      {
				return this._Abstract;
			}
			set
			
      {
				if ((this._Abstract != value))
				
        {
					this.OnAbstractChanging(value);
					this.SendPropertyChanging();
					this._Abstract = value;
					this.SendPropertyChanged("Abstract");
					this.OnAbstractChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsInNewsletter : No description found!
    /// </summary>
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=10)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this.OnIsInNewsletterChanging(value);
					this.SendPropertyChanging();
					this._IsInNewsletter = value;
					this.SendPropertyChanged("IsInNewsletter");
					this.OnIsInNewsletterChanged();
				}
			}
		}
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=11)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this.OnMoreLinkChanging(value);
					this.SendPropertyChanging();
					this._MoreLink = value;
					this.SendPropertyChanged("MoreLink");
					this.OnMoreLinkChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=12)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Articles_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Articles_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Articles.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Articles.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Articles_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Articles_st")]
	[DataContract()]
	public partial class Rb_Articles_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Subtitle : No description found!
    /// </summary>
		private string _Subtitle;
		
    /// <summary>
    ///   Abstract : No description found!
    /// </summary>
		private string _Abstract;
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _StartDate;
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ExpireDate;
		
    /// <summary>
    ///   IsInNewsletter : No description found!
    /// </summary>
		private System.Nullable<bool> _IsInNewsletter;
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		private string _MoreLink;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubtitleChanging(string value);
    partial void OnSubtitleChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnIsInNewsletterChanging(System.Nullable<bool> value);
    partial void OnIsInNewsletterChanged();
    partial void OnMoreLinkChanging(string value);
    partial void OnMoreLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Articles_st
    /// </summary>
		public Rb_Articles_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Subtitle : No description found!
    /// </summary>
		[Column(Storage="_Subtitle", DbType="NVarChar(200)")]
		[DataMember(Order=6)]
		public string Subtitle
		
    {
			get
			
      {
				return this._Subtitle;
			}
			set
			
      {
				if ((this._Subtitle != value))
				
        {
					this.OnSubtitleChanging(value);
					this.SendPropertyChanging();
					this._Subtitle = value;
					this.SendPropertyChanged("Subtitle");
					this.OnSubtitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Abstract : No description found!
    /// </summary>
		[Column(Storage="_Abstract", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=7)]
		public string Abstract
		
    {
			get
			
      {
				return this._Abstract;
			}
			set
			
      {
				if ((this._Abstract != value))
				
        {
					this.OnAbstractChanging(value);
					this.SendPropertyChanging();
					this._Abstract = value;
					this.SendPropertyChanged("Abstract");
					this.OnAbstractChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsInNewsletter : No description found!
    /// </summary>
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=10)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this.OnIsInNewsletterChanging(value);
					this.SendPropertyChanging();
					this._IsInNewsletter = value;
					this.SendPropertyChanged("IsInNewsletter");
					this.OnIsInNewsletterChanged();
				}
			}
		}
		
    /// <summary>
    ///   MoreLink : No description found!
    /// </summary>
		[Column(Storage="_MoreLink", DbType="NVarChar(150)")]
		[DataMember(Order=11)]
		public string MoreLink
		
    {
			get
			
      {
				return this._MoreLink;
			}
			set
			
      {
				if ((this._MoreLink != value))
				
        {
					this.OnMoreLinkChanging(value);
					this.SendPropertyChanging();
					this._MoreLink = value;
					this.SendPropertyChanged("MoreLink");
					this.OnMoreLinkChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=12)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Articles_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Articles_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Articles_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Articles_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_BaseSettings : No description found!
  /// </summary>
	[Table(Name="dbo.rb_BaseSettings")]
	[DataContract()]
	public partial class Rb_BaseSetting : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   BaseSettingId : No description found!
    /// </summary>
		private int _BaseSettingId;
		
    /// <summary>
    ///   BaseSettingTypeId : No description found!
    /// </summary>
		private int _BaseSettingTypeId;
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		private string _SettingName;
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		private string _SettingValue;
		
    /// <summary>
    ///   SettingGroupId : No description found!
    /// </summary>
		private System.Nullable<int> _SettingGroupId;
		
    /// <summary>
    ///   EnglishName : No description found!
    /// </summary>
		private string _EnglishName;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   DataType : No description found!
    /// </summary>
		private string _DataType;
		
    /// <summary>
    ///   MinValue : No description found!
    /// </summary>
		private System.Nullable<int> _MinValue;
		
    /// <summary>
    ///   MaxValue : No description found!
    /// </summary>
		private System.Nullable<int> _MaxValue;
		
    /// <summary>
    ///   SettingOrder : No description found!
    /// </summary>
		private System.Nullable<int> _SettingOrder;
		
    /// <summary>
    ///   IsRequired : No description found!
    /// </summary>
		private System.Nullable<bool> _IsRequired;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaseSettingIdChanging(int value);
    partial void OnBaseSettingIdChanged();
    partial void OnBaseSettingTypeIdChanging(int value);
    partial void OnBaseSettingTypeIdChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnSettingGroupIdChanging(System.Nullable<int> value);
    partial void OnSettingGroupIdChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnMinValueChanging(System.Nullable<int> value);
    partial void OnMinValueChanged();
    partial void OnMaxValueChanging(System.Nullable<int> value);
    partial void OnMaxValueChanged();
    partial void OnSettingOrderChanging(System.Nullable<int> value);
    partial void OnSettingOrderChanged();
    partial void OnIsRequiredChanging(System.Nullable<bool> value);
    partial void OnIsRequiredChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_BaseSetting
    /// </summary>
		public Rb_BaseSetting()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   BaseSettingId : No description found!
    /// </summary>
		[Column(Storage="_BaseSettingId", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int BaseSettingId
		
    {
			get
			
      {
				return this._BaseSettingId;
			}
			set
			
      {
				if ((this._BaseSettingId != value))
				
        {
					this.OnBaseSettingIdChanging(value);
					this.SendPropertyChanging();
					this._BaseSettingId = value;
					this.SendPropertyChanged("BaseSettingId");
					this.OnBaseSettingIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   BaseSettingTypeId : No description found!
    /// </summary>
		[Column(Storage="_BaseSettingTypeId", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int BaseSettingTypeId
		
    {
			get
			
      {
				return this._BaseSettingTypeId;
			}
			set
			
      {
				if ((this._BaseSettingTypeId != value))
				
        {
					this.OnBaseSettingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BaseSettingTypeId = value;
					this.SendPropertyChanged("BaseSettingTypeId");
					this.OnBaseSettingTypeIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		[Column(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SettingName
		
    {
			get
			
      {
				return this._SettingName;
			}
			set
			
      {
				if ((this._SettingName != value))
				
        {
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		[Column(Storage="_SettingValue", DbType="NVarChar(1500)")]
		[DataMember(Order=4)]
		public string SettingValue
		
    {
			get
			
      {
				return this._SettingValue;
			}
			set
			
      {
				if ((this._SettingValue != value))
				
        {
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingGroupId : No description found!
    /// </summary>
		[Column(Storage="_SettingGroupId", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> SettingGroupId
		
    {
			get
			
      {
				return this._SettingGroupId;
			}
			set
			
      {
				if ((this._SettingGroupId != value))
				
        {
					this.OnSettingGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SettingGroupId = value;
					this.SendPropertyChanged("SettingGroupId");
					this.OnSettingGroupIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   EnglishName : No description found!
    /// </summary>
		[Column(Storage="_EnglishName", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string EnglishName
		
    {
			get
			
      {
				return this._EnglishName;
			}
			set
			
      {
				if ((this._EnglishName != value))
				
        {
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(512)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   DataType : No description found!
    /// </summary>
		[Column(Storage="_DataType", DbType="NVarChar(50)")]
		[DataMember(Order=8)]
		public string DataType
		
    {
			get
			
      {
				return this._DataType;
			}
			set
			
      {
				if ((this._DataType != value))
				
        {
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   MinValue : No description found!
    /// </summary>
		[Column(Storage="_MinValue", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> MinValue
		
    {
			get
			
      {
				return this._MinValue;
			}
			set
			
      {
				if ((this._MinValue != value))
				
        {
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   MaxValue : No description found!
    /// </summary>
		[Column(Storage="_MaxValue", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> MaxValue
		
    {
			get
			
      {
				return this._MaxValue;
			}
			set
			
      {
				if ((this._MaxValue != value))
				
        {
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingOrder : No description found!
    /// </summary>
		[Column(Storage="_SettingOrder", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> SettingOrder
		
    {
			get
			
      {
				return this._SettingOrder;
			}
			set
			
      {
				if ((this._SettingOrder != value))
				
        {
					this.OnSettingOrderChanging(value);
					this.SendPropertyChanging();
					this._SettingOrder = value;
					this.SendPropertyChanged("SettingOrder");
					this.OnSettingOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsRequired : No description found!
    /// </summary>
		[Column(Storage="_IsRequired", DbType="Bit")]
		[DataMember(Order=12)]
		public System.Nullable<bool> IsRequired
		
    {
			get
			
      {
				return this._IsRequired;
			}
			set
			
      {
				if ((this._IsRequired != value))
				
        {
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=13)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_BaseSettingTypes : No description found!
  /// </summary>
	[Table(Name="dbo.rb_BaseSettingTypes")]
	[DataContract()]
	public partial class Rb_BaseSettingType : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   BaseSettingTypeId : No description found!
    /// </summary>
		private int _BaseSettingTypeId;
		
    /// <summary>
    ///   BaseSettingTypeName : No description found!
    /// </summary>
		private string _BaseSettingTypeName;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaseSettingTypeIdChanging(int value);
    partial void OnBaseSettingTypeIdChanged();
    partial void OnBaseSettingTypeNameChanging(string value);
    partial void OnBaseSettingTypeNameChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_BaseSettingType
    /// </summary>
		public Rb_BaseSettingType()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   BaseSettingTypeId : No description found!
    /// </summary>
		[Column(Storage="_BaseSettingTypeId", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int BaseSettingTypeId
		
    {
			get
			
      {
				return this._BaseSettingTypeId;
			}
			set
			
      {
				if ((this._BaseSettingTypeId != value))
				
        {
					this.OnBaseSettingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BaseSettingTypeId = value;
					this.SendPropertyChanged("BaseSettingTypeId");
					this.OnBaseSettingTypeIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   BaseSettingTypeName : No description found!
    /// </summary>
		[Column(Storage="_BaseSettingTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string BaseSettingTypeName
		
    {
			get
			
      {
				return this._BaseSettingTypeName;
			}
			set
			
      {
				if ((this._BaseSettingTypeName != value))
				
        {
					this.OnBaseSettingTypeNameChanging(value);
					this.SendPropertyChanging();
					this._BaseSettingTypeName = value;
					this.SendPropertyChanged("BaseSettingTypeName");
					this.OnBaseSettingTypeNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=3)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_BlackList : No description found!
  /// </summary>
	[Table(Name="dbo.rb_BlackList")]
	[DataContract()]
	public partial class Rb_BlackList : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		private string _Email;
		
    /// <summary>
    ///   Date : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _Date;
		
    /// <summary>
    ///   Reason : No description found!
    /// </summary>
		private string _Reason;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_BlackList
    /// </summary>
		public Rb_BlackList()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		[Column(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   Date : No description found!
    /// </summary>
		[Column(Storage="_Date", DbType="SmallDateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> Date
		
    {
			get
			
      {
				return this._Date;
			}
			set
			
      {
				if ((this._Date != value))
				
        {
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Reason : No description found!
    /// </summary>
		[Column(Storage="_Reason", DbType="NVarChar(150)")]
		[DataMember(Order=4)]
		public string Reason
		
    {
			get
			
      {
				return this._Reason;
			}
			set
			
      {
				if ((this._Reason != value))
				
        {
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=5)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_BlogComments : No description found!
  /// </summary>
	[Table(Name="dbo.rb_BlogComments")]
	[DataContract()]
	public partial class Rb_BlogComment : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   BlogCommentID : No description found!
    /// </summary>
		private int _BlogCommentID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   Comment : No description found!
    /// </summary>
		private string _Comment;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		private string _Name;
		
    /// <summary>
    ///   URL : No description found!
    /// </summary>
		private string _URL;
		
    /// <summary>
    ///   DateCreated : No description found!
    /// </summary>
		private System.DateTime _DateCreated;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogCommentIDChanging(int value);
    partial void OnBlogCommentIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_BlogComment
    /// </summary>
		public Rb_BlogComment()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   BlogCommentID : No description found!
    /// </summary>
		[Column(Storage="_BlogCommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int BlogCommentID
		
    {
			get
			
      {
				return this._BlogCommentID;
			}
			set
			
      {
				if ((this._BlogCommentID != value))
				
        {
					this.OnBlogCommentIDChanging(value);
					this.SendPropertyChanging();
					this._BlogCommentID = value;
					this.SendPropertyChanged("BlogCommentID");
					this.OnBlogCommentIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Comment : No description found!
    /// </summary>
		[Column(Storage="_Comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=4)]
		public string Comment
		
    {
			get
			
      {
				return this._Comment;
			}
			set
			
      {
				if ((this._Comment != value))
				
        {
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		[Column(Storage="_Name", DbType="NVarChar(100)")]
		[DataMember(Order=6)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   URL : No description found!
    /// </summary>
		[Column(Storage="_URL", DbType="NVarChar(200)")]
		[DataMember(Order=7)]
		public string URL
		
    {
			get
			
      {
				return this._URL;
			}
			set
			
      {
				if ((this._URL != value))
				
        {
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
    /// <summary>
    ///   DateCreated : No description found!
    /// </summary>
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime DateCreated
		
    {
			get
			
      {
				return this._DateCreated;
			}
			set
			
      {
				if ((this._DateCreated != value))
				
        {
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_BlogComments_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_BlogComments_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_BlogComments.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_BlogComments.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Blogs : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Blogs")]
	[DataContract()]
	public partial class Rb_Blog : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Excerpt : No description found!
    /// </summary>
		private string _Excerpt;
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _StartDate;
		
    /// <summary>
    ///   IsInNewsletter : No description found!
    /// </summary>
		private System.Nullable<bool> _IsInNewsletter;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   CommentCount : No description found!
    /// </summary>
		private int _CommentCount;
		
    /// <summary>
    ///   TrackBackCount : No description found!
    /// </summary>
		private int _TrackBackCount;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnExcerptChanging(string value);
    partial void OnExcerptChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnIsInNewsletterChanging(System.Nullable<bool> value);
    partial void OnIsInNewsletterChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCommentCountChanging(int value);
    partial void OnCommentCountChanged();
    partial void OnTrackBackCountChanging(int value);
    partial void OnTrackBackCountChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Blog
    /// </summary>
		public Rb_Blog()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Excerpt : No description found!
    /// </summary>
		[Column(Storage="_Excerpt", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string Excerpt
		
    {
			get
			
      {
				return this._Excerpt;
			}
			set
			
      {
				if ((this._Excerpt != value))
				
        {
					this.OnExcerptChanging(value);
					this.SendPropertyChanging();
					this._Excerpt = value;
					this.SendPropertyChanged("Excerpt");
					this.OnExcerptChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsInNewsletter : No description found!
    /// </summary>
		[Column(Storage="_IsInNewsletter", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> IsInNewsletter
		
    {
			get
			
      {
				return this._IsInNewsletter;
			}
			set
			
      {
				if ((this._IsInNewsletter != value))
				
        {
					this.OnIsInNewsletterChanging(value);
					this.SendPropertyChanging();
					this._IsInNewsletter = value;
					this.SendPropertyChanged("IsInNewsletter");
					this.OnIsInNewsletterChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   CommentCount : No description found!
    /// </summary>
		[Column(Storage="_CommentCount", DbType="Int NOT NULL")]
		[DataMember(Order=10)]
		public int CommentCount
		
    {
			get
			
      {
				return this._CommentCount;
			}
			set
			
      {
				if ((this._CommentCount != value))
				
        {
					this.OnCommentCountChanging(value);
					this.SendPropertyChanging();
					this._CommentCount = value;
					this.SendPropertyChanged("CommentCount");
					this.OnCommentCountChanged();
				}
			}
		}
		
    /// <summary>
    ///   TrackBackCount : No description found!
    /// </summary>
		[Column(Storage="_TrackBackCount", DbType="Int NOT NULL")]
		[DataMember(Order=11)]
		public int TrackBackCount
		
    {
			get
			
      {
				return this._TrackBackCount;
			}
			set
			
      {
				if ((this._TrackBackCount != value))
				
        {
					this.OnTrackBackCountChanging(value);
					this.SendPropertyChanging();
					this._TrackBackCount = value;
					this.SendPropertyChanged("TrackBackCount");
					this.OnTrackBackCountChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Blogs_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Blogs_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Blogs.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Blogs.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_BlogStats : No description found!
  /// </summary>
	[Table(Name="dbo.rb_BlogStats")]
	[DataContract()]
	public partial class Rb_BlogStat : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   EntryCount : No description found!
    /// </summary>
		private int _EntryCount;
		
    /// <summary>
    ///   CommentCount : No description found!
    /// </summary>
		private int _CommentCount;
		
    /// <summary>
    ///   TrackBackCount : No description found!
    /// </summary>
		private int _TrackBackCount;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnEntryCountChanging(int value);
    partial void OnEntryCountChanged();
    partial void OnCommentCountChanging(int value);
    partial void OnCommentCountChanged();
    partial void OnTrackBackCountChanging(int value);
    partial void OnTrackBackCountChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_BlogStat
    /// </summary>
		public Rb_BlogStat()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   EntryCount : No description found!
    /// </summary>
		[Column(Storage="_EntryCount", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int EntryCount
		
    {
			get
			
      {
				return this._EntryCount;
			}
			set
			
      {
				if ((this._EntryCount != value))
				
        {
					this.OnEntryCountChanging(value);
					this.SendPropertyChanging();
					this._EntryCount = value;
					this.SendPropertyChanged("EntryCount");
					this.OnEntryCountChanged();
				}
			}
		}
		
    /// <summary>
    ///   CommentCount : No description found!
    /// </summary>
		[Column(Storage="_CommentCount", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int CommentCount
		
    {
			get
			
      {
				return this._CommentCount;
			}
			set
			
      {
				if ((this._CommentCount != value))
				
        {
					this.OnCommentCountChanging(value);
					this.SendPropertyChanging();
					this._CommentCount = value;
					this.SendPropertyChanged("CommentCount");
					this.OnCommentCountChanged();
				}
			}
		}
		
    /// <summary>
    ///   TrackBackCount : No description found!
    /// </summary>
		[Column(Storage="_TrackBackCount", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int TrackBackCount
		
    {
			get
			
      {
				return this._TrackBackCount;
			}
			set
			
      {
				if ((this._TrackBackCount != value))
				
        {
					this.OnTrackBackCountChanging(value);
					this.SendPropertyChanging();
					this._TrackBackCount = value;
					this.SendPropertyChanged("TrackBackCount");
					this.OnTrackBackCountChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=5)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_BlogStats_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_BlogStats_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_BlogStats.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_BlogStats.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_BookList : No description found!
  /// </summary>
	[Table(Name="dbo.rb_BookList")]
	[DataContract()]
	public partial class Rb_BookList : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   ISBN : No description found!
    /// </summary>
		private string _ISBN;
		
    /// <summary>
    ///   Caption : No description found!
    /// </summary>
		private string _Caption;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_BookList
    /// </summary>
		public Rb_BookList()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   ISBN : No description found!
    /// </summary>
		[Column(Storage="_ISBN", DbType="NVarChar(10)")]
		[DataMember(Order=5)]
		public string ISBN
		
    {
			get
			
      {
				return this._ISBN;
			}
			set
			
      {
				if ((this._ISBN != value))
				
        {
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
    /// <summary>
    ///   Caption : No description found!
    /// </summary>
		[Column(Storage="_Caption", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=6)]
		public string Caption
		
    {
			get
			
      {
				return this._Caption;
			}
			set
			
      {
				if ((this._Caption != value))
				
        {
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rbBookListModules
    /// </summary>
		[Association(Name="FK_rbBookListModules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_BookLists.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_BookLists.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Cart : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Cart")]
	[DataContract()]
	public partial class Rb_Cart : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   RecordID : No description found!
    /// </summary>
		private int _RecordID;
		
    /// <summary>
    ///   CartID : No description found!
    /// </summary>
		private string _CartID;
		
    /// <summary>
    ///   Quantity : No description found!
    /// </summary>
		private int _Quantity;
		
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		private int _ProductID;
		
    /// <summary>
    ///   DateCreated : No description found!
    /// </summary>
		private System.DateTime _DateCreated;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnCartIDChanging(string value);
    partial void OnCartIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Cart
    /// </summary>
		public Rb_Cart()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   RecordID : No description found!
    /// </summary>
		[Column(Storage="_RecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int RecordID
		
    {
			get
			
      {
				return this._RecordID;
			}
			set
			
      {
				if ((this._RecordID != value))
				
        {
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CartID : No description found!
    /// </summary>
		[Column(Storage="_CartID", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string CartID
		
    {
			get
			
      {
				return this._CartID;
			}
			set
			
      {
				if ((this._CartID != value))
				
        {
					this.OnCartIDChanging(value);
					this.SendPropertyChanging();
					this._CartID = value;
					this.SendPropertyChanged("CartID");
					this.OnCartIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Quantity : No description found!
    /// </summary>
		[Column(Storage="_Quantity", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int Quantity
		
    {
			get
			
      {
				return this._Quantity;
			}
			set
			
      {
				if ((this._Quantity != value))
				
        {
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		[Column(Storage="_ProductID", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DateCreated : No description found!
    /// </summary>
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		[DataMember(Order=5)]
		public System.DateTime DateCreated
		
    {
			get
			
      {
				return this._DateCreated;
			}
			set
			
      {
				if ((this._DateCreated != value))
				
        {
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=6)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_ComponentModule : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ComponentModule")]
	[DataContract()]
	public partial class Rb_ComponentModule : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Component : No description found!
    /// </summary>
		private string _Component;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnComponentChanging(string value);
    partial void OnComponentChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ComponentModule
    /// </summary>
		public Rb_ComponentModule()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=2)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Component : No description found!
    /// </summary>
		[Column(Storage="_Component", DbType="NVarChar(2000)")]
		[DataMember(Order=5)]
		public string Component
		
    {
			get
			
      {
				return this._Component;
			}
			set
			
      {
				if ((this._Component != value))
				
        {
					this.OnComponentChanging(value);
					this.SendPropertyChanging();
					this._Component = value;
					this.SendPropertyChanged("Component");
					this.OnComponentChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=6)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_ComponentModule_Modules
    /// </summary>
		[Association(Name="FK_ComponentModule_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_ComponentModule = null;
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_ComponentModule = this;
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Contacts : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Contacts")]
	[DataContract()]
	public partial class Rb_Contact : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		private string _Name;
		
    /// <summary>
    ///   Role : No description found!
    /// </summary>
		private string _Role;
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		private string _Email;
		
    /// <summary>
    ///   Contact1 : No description found!
    /// </summary>
		private string _Contact1;
		
    /// <summary>
    ///   Contact2 : No description found!
    /// </summary>
		private string _Contact2;
		
    /// <summary>
    ///   Fax : No description found!
    /// </summary>
		private string _Fax;
		
    /// <summary>
    ///   Address : No description found!
    /// </summary>
		private string _Address;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContact1Changing(string value);
    partial void OnContact1Changed();
    partial void OnContact2Changing(string value);
    partial void OnContact2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Contact
    /// </summary>
		public Rb_Contact()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Role : No description found!
    /// </summary>
		[Column(Storage="_Role", DbType="NVarChar(100)")]
		[DataMember(Order=6)]
		public string Role
		
    {
			get
			
      {
				return this._Role;
			}
			set
			
      {
				if ((this._Role != value))
				
        {
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   Contact1 : No description found!
    /// </summary>
		[Column(Storage="_Contact1", DbType="NVarChar(250)")]
		[DataMember(Order=8)]
		public string Contact1
		
    {
			get
			
      {
				return this._Contact1;
			}
			set
			
      {
				if ((this._Contact1 != value))
				
        {
					this.OnContact1Changing(value);
					this.SendPropertyChanging();
					this._Contact1 = value;
					this.SendPropertyChanged("Contact1");
					this.OnContact1Changed();
				}
			}
		}
		
    /// <summary>
    ///   Contact2 : No description found!
    /// </summary>
		[Column(Storage="_Contact2", DbType="NVarChar(250)")]
		[DataMember(Order=9)]
		public string Contact2
		
    {
			get
			
      {
				return this._Contact2;
			}
			set
			
      {
				if ((this._Contact2 != value))
				
        {
					this.OnContact2Changing(value);
					this.SendPropertyChanging();
					this._Contact2 = value;
					this.SendPropertyChanged("Contact2");
					this.OnContact2Changed();
				}
			}
		}
		
    /// <summary>
    ///   Fax : No description found!
    /// </summary>
		[Column(Storage="_Fax", DbType="NVarChar(250)")]
		[DataMember(Order=10)]
		public string Fax
		
    {
			get
			
      {
				return this._Fax;
			}
			set
			
      {
				if ((this._Fax != value))
				
        {
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
    /// <summary>
    ///   Address : No description found!
    /// </summary>
		[Column(Storage="_Address", DbType="NVarChar(250)")]
		[DataMember(Order=11)]
		public string Address
		
    {
			get
			
      {
				return this._Address;
			}
			set
			
      {
				if ((this._Address != value))
				
        {
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Contacts_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Contacts_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Contacts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Contacts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Contacts_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Contacts_st")]
	[DataContract()]
	public partial class Rb_Contacts_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		private string _Name;
		
    /// <summary>
    ///   Role : No description found!
    /// </summary>
		private string _Role;
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		private string _Email;
		
    /// <summary>
    ///   Contact1 : No description found!
    /// </summary>
		private string _Contact1;
		
    /// <summary>
    ///   Contact2 : No description found!
    /// </summary>
		private string _Contact2;
		
    /// <summary>
    ///   Address : No description found!
    /// </summary>
		private string _Address;
		
    /// <summary>
    ///   Fax : No description found!
    /// </summary>
		private string _Fax;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContact1Changing(string value);
    partial void OnContact1Changed();
    partial void OnContact2Changing(string value);
    partial void OnContact2Changed();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Contacts_st
    /// </summary>
		public Rb_Contacts_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Role : No description found!
    /// </summary>
		[Column(Storage="_Role", DbType="NVarChar(100)")]
		[DataMember(Order=6)]
		public string Role
		
    {
			get
			
      {
				return this._Role;
			}
			set
			
      {
				if ((this._Role != value))
				
        {
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   Contact1 : No description found!
    /// </summary>
		[Column(Storage="_Contact1", DbType="NVarChar(250)")]
		[DataMember(Order=8)]
		public string Contact1
		
    {
			get
			
      {
				return this._Contact1;
			}
			set
			
      {
				if ((this._Contact1 != value))
				
        {
					this.OnContact1Changing(value);
					this.SendPropertyChanging();
					this._Contact1 = value;
					this.SendPropertyChanged("Contact1");
					this.OnContact1Changed();
				}
			}
		}
		
    /// <summary>
    ///   Contact2 : No description found!
    /// </summary>
		[Column(Storage="_Contact2", DbType="NVarChar(250)")]
		[DataMember(Order=9)]
		public string Contact2
		
    {
			get
			
      {
				return this._Contact2;
			}
			set
			
      {
				if ((this._Contact2 != value))
				
        {
					this.OnContact2Changing(value);
					this.SendPropertyChanging();
					this._Contact2 = value;
					this.SendPropertyChanged("Contact2");
					this.OnContact2Changed();
				}
			}
		}
		
    /// <summary>
    ///   Address : No description found!
    /// </summary>
		[Column(Storage="_Address", DbType="NVarChar(250)")]
		[DataMember(Order=10)]
		public string Address
		
    {
			get
			
      {
				return this._Address;
			}
			set
			
      {
				if ((this._Address != value))
				
        {
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
    /// <summary>
    ///   Fax : No description found!
    /// </summary>
		[Column(Storage="_Fax", DbType="NVarChar(250)")]
		[DataMember(Order=11)]
		public string Fax
		
    {
			get
			
      {
				return this._Fax;
			}
			set
			
      {
				if ((this._Fax != value))
				
        {
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Contacts_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Contacts_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Contacts_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Contacts_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_ContentManager : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ContentManager")]
	[DataContract()]
	public partial class Rb_ContentManager : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   SourceGeneralModDefID : No description found!
    /// </summary>
		private System.Guid _SourceGeneralModDefID;
		
    /// <summary>
    ///   DestGeneralModDefID : No description found!
    /// </summary>
		private System.Nullable<System.Guid> _DestGeneralModDefID;
		
    /// <summary>
    ///   FriendlyName : No description found!
    /// </summary>
		private string _FriendlyName;
		
    /// <summary>
    ///   SourceSummarySproc : No description found!
    /// </summary>
		private string _SourceSummarySproc;
		
    /// <summary>
    ///   DestSummarySproc : No description found!
    /// </summary>
		private string _DestSummarySproc;
		
    /// <summary>
    ///   CopyItemSproc : No description found!
    /// </summary>
		private string _CopyItemSproc;
		
    /// <summary>
    ///   MoveItemLeftSproc : No description found!
    /// </summary>
		private string _MoveItemLeftSproc;
		
    /// <summary>
    ///   MoveItemRightSproc : No description found!
    /// </summary>
		private string _MoveItemRightSproc;
		
    /// <summary>
    ///   CopyAllSproc : No description found!
    /// </summary>
		private string _CopyAllSproc;
		
    /// <summary>
    ///   DeleteItemLeftSproc : No description found!
    /// </summary>
		private string _DeleteItemLeftSproc;
		
    /// <summary>
    ///   DeleteItemRightSproc : No description found!
    /// </summary>
		private string _DeleteItemRightSproc;
		
		private EntityRef<Rb_GeneralModuleDefinition> _Rb_GeneralModuleDefinition;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnSourceGeneralModDefIDChanging(System.Guid value);
    partial void OnSourceGeneralModDefIDChanged();
    partial void OnDestGeneralModDefIDChanging(System.Nullable<System.Guid> value);
    partial void OnDestGeneralModDefIDChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnSourceSummarySprocChanging(string value);
    partial void OnSourceSummarySprocChanged();
    partial void OnDestSummarySprocChanging(string value);
    partial void OnDestSummarySprocChanged();
    partial void OnCopyItemSprocChanging(string value);
    partial void OnCopyItemSprocChanged();
    partial void OnMoveItemLeftSprocChanging(string value);
    partial void OnMoveItemLeftSprocChanged();
    partial void OnMoveItemRightSprocChanging(string value);
    partial void OnMoveItemRightSprocChanged();
    partial void OnCopyAllSprocChanging(string value);
    partial void OnCopyAllSprocChanged();
    partial void OnDeleteItemLeftSprocChanging(string value);
    partial void OnDeleteItemLeftSprocChanged();
    partial void OnDeleteItemRightSprocChanging(string value);
    partial void OnDeleteItemRightSprocChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ContentManager
    /// </summary>
		public Rb_ContentManager()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SourceGeneralModDefID : No description found!
    /// </summary>
		[Column(Storage="_SourceGeneralModDefID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid SourceGeneralModDefID
		
    {
			get
			
      {
				return this._SourceGeneralModDefID;
			}
			set
			
      {
				if ((this._SourceGeneralModDefID != value))
				
        {
					if (this._Rb_GeneralModuleDefinition.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceGeneralModDefIDChanging(value);
					this.SendPropertyChanging();
					this._SourceGeneralModDefID = value;
					this.SendPropertyChanged("SourceGeneralModDefID");
					this.OnSourceGeneralModDefIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DestGeneralModDefID : No description found!
    /// </summary>
		[Column(Storage="_DestGeneralModDefID", DbType="UniqueIdentifier")]
		[DataMember(Order=3)]
		public System.Nullable<System.Guid> DestGeneralModDefID
		
    {
			get
			
      {
				return this._DestGeneralModDefID;
			}
			set
			
      {
				if ((this._DestGeneralModDefID != value))
				
        {
					this.OnDestGeneralModDefIDChanging(value);
					this.SendPropertyChanging();
					this._DestGeneralModDefID = value;
					this.SendPropertyChanged("DestGeneralModDefID");
					this.OnDestGeneralModDefIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   FriendlyName : No description found!
    /// </summary>
		[Column(Storage="_FriendlyName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string FriendlyName
		
    {
			get
			
      {
				return this._FriendlyName;
			}
			set
			
      {
				if ((this._FriendlyName != value))
				
        {
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   SourceSummarySproc : No description found!
    /// </summary>
		[Column(Storage="_SourceSummarySproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string SourceSummarySproc
		
    {
			get
			
      {
				return this._SourceSummarySproc;
			}
			set
			
      {
				if ((this._SourceSummarySproc != value))
				
        {
					this.OnSourceSummarySprocChanging(value);
					this.SendPropertyChanging();
					this._SourceSummarySproc = value;
					this.SendPropertyChanged("SourceSummarySproc");
					this.OnSourceSummarySprocChanged();
				}
			}
		}
		
    /// <summary>
    ///   DestSummarySproc : No description found!
    /// </summary>
		[Column(Storage="_DestSummarySproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string DestSummarySproc
		
    {
			get
			
      {
				return this._DestSummarySproc;
			}
			set
			
      {
				if ((this._DestSummarySproc != value))
				
        {
					this.OnDestSummarySprocChanging(value);
					this.SendPropertyChanging();
					this._DestSummarySproc = value;
					this.SendPropertyChanged("DestSummarySproc");
					this.OnDestSummarySprocChanged();
				}
			}
		}
		
    /// <summary>
    ///   CopyItemSproc : No description found!
    /// </summary>
		[Column(Storage="_CopyItemSproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string CopyItemSproc
		
    {
			get
			
      {
				return this._CopyItemSproc;
			}
			set
			
      {
				if ((this._CopyItemSproc != value))
				
        {
					this.OnCopyItemSprocChanging(value);
					this.SendPropertyChanging();
					this._CopyItemSproc = value;
					this.SendPropertyChanged("CopyItemSproc");
					this.OnCopyItemSprocChanged();
				}
			}
		}
		
    /// <summary>
    ///   MoveItemLeftSproc : No description found!
    /// </summary>
		[Column(Storage="_MoveItemLeftSproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string MoveItemLeftSproc
		
    {
			get
			
      {
				return this._MoveItemLeftSproc;
			}
			set
			
      {
				if ((this._MoveItemLeftSproc != value))
				
        {
					this.OnMoveItemLeftSprocChanging(value);
					this.SendPropertyChanging();
					this._MoveItemLeftSproc = value;
					this.SendPropertyChanged("MoveItemLeftSproc");
					this.OnMoveItemLeftSprocChanged();
				}
			}
		}
		
    /// <summary>
    ///   MoveItemRightSproc : No description found!
    /// </summary>
		[Column(Storage="_MoveItemRightSproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string MoveItemRightSproc
		
    {
			get
			
      {
				return this._MoveItemRightSproc;
			}
			set
			
      {
				if ((this._MoveItemRightSproc != value))
				
        {
					this.OnMoveItemRightSprocChanging(value);
					this.SendPropertyChanging();
					this._MoveItemRightSproc = value;
					this.SendPropertyChanged("MoveItemRightSproc");
					this.OnMoveItemRightSprocChanged();
				}
			}
		}
		
    /// <summary>
    ///   CopyAllSproc : No description found!
    /// </summary>
		[Column(Storage="_CopyAllSproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string CopyAllSproc
		
    {
			get
			
      {
				return this._CopyAllSproc;
			}
			set
			
      {
				if ((this._CopyAllSproc != value))
				
        {
					this.OnCopyAllSprocChanging(value);
					this.SendPropertyChanging();
					this._CopyAllSproc = value;
					this.SendPropertyChanged("CopyAllSproc");
					this.OnCopyAllSprocChanged();
				}
			}
		}
		
    /// <summary>
    ///   DeleteItemLeftSproc : No description found!
    /// </summary>
		[Column(Storage="_DeleteItemLeftSproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=11)]
		public string DeleteItemLeftSproc
		
    {
			get
			
      {
				return this._DeleteItemLeftSproc;
			}
			set
			
      {
				if ((this._DeleteItemLeftSproc != value))
				
        {
					this.OnDeleteItemLeftSprocChanging(value);
					this.SendPropertyChanging();
					this._DeleteItemLeftSproc = value;
					this.SendPropertyChanged("DeleteItemLeftSproc");
					this.OnDeleteItemLeftSprocChanged();
				}
			}
		}
		
    /// <summary>
    ///   DeleteItemRightSproc : No description found!
    /// </summary>
		[Column(Storage="_DeleteItemRightSproc", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DataMember(Order=12)]
		public string DeleteItemRightSproc
		
    {
			get
			
      {
				return this._DeleteItemRightSproc;
			}
			set
			
      {
				if ((this._DeleteItemRightSproc != value))
				
        {
					this.OnDeleteItemRightSprocChanging(value);
					this.SendPropertyChanging();
					this._DeleteItemRightSproc = value;
					this.SendPropertyChanged("DeleteItemRightSproc");
					this.OnDeleteItemRightSprocChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rbContentManager_SourceGenModDefs
    /// </summary>
		[Association(Name="FK_rbContentManager_SourceGenModDefs", Storage="_Rb_GeneralModuleDefinition", ThisKey="SourceGeneralModDefID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_GeneralModuleDefinition Rb_GeneralModuleDefinition
		
    {
			get
			
      {
				return this._Rb_GeneralModuleDefinition.Entity;
			}
			set
			
      {
				Rb_GeneralModuleDefinition previousValue = this._Rb_GeneralModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._Rb_GeneralModuleDefinition.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_GeneralModuleDefinition.Entity = null;
						previousValue.Rb_ContentManagers.Remove(this);
					}
					this._Rb_GeneralModuleDefinition.Entity = value;
					if ((value != null))
					
          {
						value.Rb_ContentManagers.Add(this);
						this._SourceGeneralModDefID = value.GeneralModDefID;
					}
					else
					
          {
						this._SourceGeneralModDefID = default(System.Guid);
					}
					this.SendPropertyChanged("Rb_GeneralModuleDefinition");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_GeneralModuleDefinition = default(EntityRef<Rb_GeneralModuleDefinition>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Countries : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Countries")]
	[DataContract()]
	public partial class Rb_Country : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		private string _CountryID;
		
    /// <summary>
    ///   NeutralName : No description found!
    /// </summary>
		private string _NeutralName;
		
    /// <summary>
    ///   AdministrativeDivisionNeutralName : No description found!
    /// </summary>
		private string _AdministrativeDivisionNeutralName;
		
		private EntitySet<Rb_Culture> _Rb_Cultures;
		
		private EntitySet<Rb_ShipZone> _Rb_ShipZones;
		
		private EntitySet<Rb_State> _Rb_States;
		
		private EntitySet<Rb_User> _Rb_Users;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(string value);
    partial void OnCountryIDChanged();
    partial void OnNeutralNameChanging(string value);
    partial void OnNeutralNameChanged();
    partial void OnAdministrativeDivisionNeutralNameChanging(string value);
    partial void OnAdministrativeDivisionNeutralNameChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Country
    /// </summary>
		public Rb_Country()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		[Column(Storage="_CountryID", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   NeutralName : No description found!
    /// </summary>
		[Column(Storage="_NeutralName", DbType="NVarChar(255)")]
		[DataMember(Order=2)]
		public string NeutralName
		
    {
			get
			
      {
				return this._NeutralName;
			}
			set
			
      {
				if ((this._NeutralName != value))
				
        {
					this.OnNeutralNameChanging(value);
					this.SendPropertyChanging();
					this._NeutralName = value;
					this.SendPropertyChanged("NeutralName");
					this.OnNeutralNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   AdministrativeDivisionNeutralName : No description found!
    /// </summary>
		[Column(Storage="_AdministrativeDivisionNeutralName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string AdministrativeDivisionNeutralName
		
    {
			get
			
      {
				return this._AdministrativeDivisionNeutralName;
			}
			set
			
      {
				if ((this._AdministrativeDivisionNeutralName != value))
				
        {
					this.OnAdministrativeDivisionNeutralNameChanging(value);
					this.SendPropertyChanging();
					this._AdministrativeDivisionNeutralName = value;
					this.SendPropertyChanged("AdministrativeDivisionNeutralName");
					this.OnAdministrativeDivisionNeutralNameChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_Cultures_rb_Countries", Storage="_Rb_Cultures", OtherKey="CountryID", DeleteRule="NO ACTION")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<Rb_Culture> Rb_Cultures
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Cultures.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Cultures;
			}
			set
			
      {
				this._Rb_Cultures.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_ShipZones_rb_Countries", Storage="_Rb_ShipZones", OtherKey="CountryID", DeleteRule="NO ACTION")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<Rb_ShipZone> Rb_ShipZones
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_ShipZones.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_ShipZones;
			}
			set
			
      {
				this._Rb_ShipZones.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_States_rb_Countries", Storage="_Rb_States", OtherKey="CountryID", DeleteRule="NO ACTION")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<Rb_State> Rb_States
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_States.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_States;
			}
			set
			
      {
				this._Rb_States.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Users_rb_Countries", Storage="_Rb_Users", OtherKey="CountryID", DeleteRule="NO ACTION")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<Rb_User> Rb_Users
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Users.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Users;
			}
			set
			
      {
				this._Rb_Users.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_Cultures(Rb_Culture entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = this;
		}
		
		private void detach_Rb_Cultures(Rb_Culture entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = null;
		}
		
		private void attach_Rb_ShipZones(Rb_ShipZone entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = this;
		}
		
		private void detach_Rb_ShipZones(Rb_ShipZone entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = null;
		}
		
		private void attach_Rb_States(Rb_State entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = this;
		}
		
		private void detach_Rb_States(Rb_State entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = null;
		}
		
		private void attach_Rb_Users(Rb_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = this;
		}
		
		private void detach_Rb_Users(Rb_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Country = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_Cultures = new EntitySet<Rb_Culture>(new Action<Rb_Culture>(this.attach_Rb_Cultures), new Action<Rb_Culture>(this.detach_Rb_Cultures));
			this._Rb_ShipZones = new EntitySet<Rb_ShipZone>(new Action<Rb_ShipZone>(this.attach_Rb_ShipZones), new Action<Rb_ShipZone>(this.detach_Rb_ShipZones));
			this._Rb_States = new EntitySet<Rb_State>(new Action<Rb_State>(this.attach_Rb_States), new Action<Rb_State>(this.detach_Rb_States));
			this._Rb_Users = new EntitySet<Rb_User>(new Action<Rb_User>(this.attach_Rb_Users), new Action<Rb_User>(this.detach_Rb_Users));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_Cultures : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Cultures")]
	[DataContract()]
	public partial class Rb_Culture : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		private string _CultureCode;
		
    /// <summary>
    ///   NeutralCode : No description found!
    /// </summary>
		private string _NeutralCode;
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		private string _CountryID;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   Identifier : No description found!
    /// </summary>
		private int _Identifier;
		
		private EntityRef<Rb_Country> _Rb_Country;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnNeutralCodeChanging(string value);
    partial void OnNeutralCodeChanged();
    partial void OnCountryIDChanging(string value);
    partial void OnCountryIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIdentifierChanging(int value);
    partial void OnIdentifierChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Culture
    /// </summary>
		public Rb_Culture()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		[Column(Storage="_CultureCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   NeutralCode : No description found!
    /// </summary>
		[Column(Storage="_NeutralCode", DbType="Char(2)")]
		[DataMember(Order=2)]
		public string NeutralCode
		
    {
			get
			
      {
				return this._NeutralCode;
			}
			set
			
      {
				if ((this._NeutralCode != value))
				
        {
					this.OnNeutralCodeChanging(value);
					this.SendPropertyChanging();
					this._NeutralCode = value;
					this.SendPropertyChanged("NeutralCode");
					this.OnNeutralCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=3)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					if (this._Rb_Country.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		[DataMember(Order=4)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Identifier : No description found!
    /// </summary>
		[Column(Storage="_Identifier", DbType="Int NOT NULL")]
		[DataMember(Order=5)]
		public int Identifier
		
    {
			get
			
      {
				return this._Identifier;
			}
			set
			
      {
				if ((this._Identifier != value))
				
        {
					this.OnIdentifierChanging(value);
					this.SendPropertyChanging();
					this._Identifier = value;
					this.SendPropertyChanged("Identifier");
					this.OnIdentifierChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Cultures_rb_Countries
    /// </summary>
		[Association(Name="FK_rb_Cultures_rb_Countries", Storage="_Rb_Country", ThisKey="CountryID", IsForeignKey=true)]
		public Rb_Country Rb_Country
		
    {
			get
			
      {
				return this._Rb_Country.Entity;
			}
			set
			
      {
				Rb_Country previousValue = this._Rb_Country.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Country.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Country.Entity = null;
						previousValue.Rb_Cultures.Remove(this);
					}
					this._Rb_Country.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Cultures.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					
          {
						this._CountryID = default(string);
					}
					this.SendPropertyChanged("Rb_Country");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Country = default(EntityRef<Rb_Country>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Discussion : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Discussion")]
	[DataContract()]
	public partial class Rb_Discussion : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Body : No description found!
    /// </summary>
		private string _Body;
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		private string _DisplayOrder;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   ViewCount : No description found!
    /// </summary>
		private System.Nullable<int> _ViewCount;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnDisplayOrderChanging(string value);
    partial void OnDisplayOrderChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnViewCountChanging(System.Nullable<int> value);
    partial void OnViewCountChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Discussion
    /// </summary>
		public Rb_Discussion()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Body : No description found!
    /// </summary>
		[Column(Storage="_Body", DbType="NVarChar(3000)")]
		[DataMember(Order=5)]
		public string Body
		
    {
			get
			
      {
				return this._Body;
			}
			set
			
      {
				if ((this._Body != value))
				
        {
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		[Column(Storage="_DisplayOrder", DbType="NVarChar(750)")]
		[DataMember(Order=6)]
		public string DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewCount : No description found!
    /// </summary>
		[Column(Storage="_ViewCount", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> ViewCount
		
    {
			get
			
      {
				return this._ViewCount;
			}
			set
			
      {
				if ((this._ViewCount != value))
				
        {
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Discussion_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Discussion_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Discussions.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Discussions.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Documents : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Documents")]
	[DataContract()]
	public partial class Rb_Document : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   FileNameUrl : No description found!
    /// </summary>
		private string _FileNameUrl;
		
    /// <summary>
    ///   FileFriendlyName : No description found!
    /// </summary>
		private string _FileFriendlyName;
		
    /// <summary>
    ///   Category : No description found!
    /// </summary>
		private string _Category;
		
    /// <summary>
    ///   Content : No description found!
    /// </summary>
		private System.Data.Linq.Binary _Content;
		
    /// <summary>
    ///   ContentType : No description found!
    /// </summary>
		private string _ContentType;
		
    /// <summary>
    ///   ContentSize : No description found!
    /// </summary>
		private System.Nullable<int> _ContentSize;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnFileNameUrlChanging(string value);
    partial void OnFileNameUrlChanged();
    partial void OnFileFriendlyNameChanging(string value);
    partial void OnFileFriendlyNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnContentSizeChanging(System.Nullable<int> value);
    partial void OnContentSizeChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Document
    /// </summary>
		public Rb_Document()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   FileNameUrl : No description found!
    /// </summary>
		[Column(Storage="_FileNameUrl", DbType="NVarChar(250)")]
		[DataMember(Order=5)]
		public string FileNameUrl
		
    {
			get
			
      {
				return this._FileNameUrl;
			}
			set
			
      {
				if ((this._FileNameUrl != value))
				
        {
					this.OnFileNameUrlChanging(value);
					this.SendPropertyChanging();
					this._FileNameUrl = value;
					this.SendPropertyChanged("FileNameUrl");
					this.OnFileNameUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   FileFriendlyName : No description found!
    /// </summary>
		[Column(Storage="_FileFriendlyName", DbType="NVarChar(150)")]
		[DataMember(Order=6)]
		public string FileFriendlyName
		
    {
			get
			
      {
				return this._FileFriendlyName;
			}
			set
			
      {
				if ((this._FileFriendlyName != value))
				
        {
					this.OnFileFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FileFriendlyName = value;
					this.SendPropertyChanged("FileFriendlyName");
					this.OnFileFriendlyNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Category : No description found!
    /// </summary>
		[Column(Storage="_Category", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string Category
		
    {
			get
			
      {
				return this._Category;
			}
			set
			
      {
				if ((this._Category != value))
				
        {
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
    /// <summary>
    ///   Content : No description found!
    /// </summary>
		[Column(Storage="_Content", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=8)]
		public System.Data.Linq.Binary Content
		
    {
			get
			
      {
				return this._Content;
			}
			set
			
      {
				if ((this._Content != value))
				
        {
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
    /// <summary>
    ///   ContentType : No description found!
    /// </summary>
		[Column(Storage="_ContentType", DbType="NVarChar(50)")]
		[DataMember(Order=9)]
		public string ContentType
		
    {
			get
			
      {
				return this._ContentType;
			}
			set
			
      {
				if ((this._ContentType != value))
				
        {
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   ContentSize : No description found!
    /// </summary>
		[Column(Storage="_ContentSize", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> ContentSize
		
    {
			get
			
      {
				return this._ContentSize;
			}
			set
			
      {
				if ((this._ContentSize != value))
				
        {
					this.OnContentSizeChanging(value);
					this.SendPropertyChanging();
					this._ContentSize = value;
					this.SendPropertyChanged("ContentSize");
					this.OnContentSizeChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Documents_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Documents_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Documents.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Documents.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Documents_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Documents_st")]
	[DataContract()]
	public partial class Rb_Documents_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   FileNameUrl : No description found!
    /// </summary>
		private string _FileNameUrl;
		
    /// <summary>
    ///   FileFriendlyName : No description found!
    /// </summary>
		private string _FileFriendlyName;
		
    /// <summary>
    ///   Category : No description found!
    /// </summary>
		private string _Category;
		
    /// <summary>
    ///   Content : No description found!
    /// </summary>
		private System.Data.Linq.Binary _Content;
		
    /// <summary>
    ///   ContentType : No description found!
    /// </summary>
		private string _ContentType;
		
    /// <summary>
    ///   ContentSize : No description found!
    /// </summary>
		private System.Nullable<int> _ContentSize;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnFileNameUrlChanging(string value);
    partial void OnFileNameUrlChanged();
    partial void OnFileFriendlyNameChanging(string value);
    partial void OnFileFriendlyNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnContentSizeChanging(System.Nullable<int> value);
    partial void OnContentSizeChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Documents_st
    /// </summary>
		public Rb_Documents_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   FileNameUrl : No description found!
    /// </summary>
		[Column(Storage="_FileNameUrl", DbType="NVarChar(250)")]
		[DataMember(Order=5)]
		public string FileNameUrl
		
    {
			get
			
      {
				return this._FileNameUrl;
			}
			set
			
      {
				if ((this._FileNameUrl != value))
				
        {
					this.OnFileNameUrlChanging(value);
					this.SendPropertyChanging();
					this._FileNameUrl = value;
					this.SendPropertyChanged("FileNameUrl");
					this.OnFileNameUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   FileFriendlyName : No description found!
    /// </summary>
		[Column(Storage="_FileFriendlyName", DbType="NVarChar(150)")]
		[DataMember(Order=6)]
		public string FileFriendlyName
		
    {
			get
			
      {
				return this._FileFriendlyName;
			}
			set
			
      {
				if ((this._FileFriendlyName != value))
				
        {
					this.OnFileFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FileFriendlyName = value;
					this.SendPropertyChanged("FileFriendlyName");
					this.OnFileFriendlyNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Category : No description found!
    /// </summary>
		[Column(Storage="_Category", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string Category
		
    {
			get
			
      {
				return this._Category;
			}
			set
			
      {
				if ((this._Category != value))
				
        {
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
    /// <summary>
    ///   Content : No description found!
    /// </summary>
		[Column(Storage="_Content", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=8)]
		public System.Data.Linq.Binary Content
		
    {
			get
			
      {
				return this._Content;
			}
			set
			
      {
				if ((this._Content != value))
				
        {
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
    /// <summary>
    ///   ContentType : No description found!
    /// </summary>
		[Column(Storage="_ContentType", DbType="NVarChar(50)")]
		[DataMember(Order=9)]
		public string ContentType
		
    {
			get
			
      {
				return this._ContentType;
			}
			set
			
      {
				if ((this._ContentType != value))
				
        {
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   ContentSize : No description found!
    /// </summary>
		[Column(Storage="_ContentSize", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> ContentSize
		
    {
			get
			
      {
				return this._ContentSize;
			}
			set
			
      {
				if ((this._ContentSize != value))
				
        {
					this.OnContentSizeChanging(value);
					this.SendPropertyChanging();
					this._ContentSize = value;
					this.SendPropertyChanged("ContentSize");
					this.OnContentSizeChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Documents_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Documents_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Documents_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Documents_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_EcommerceMerchants : No description found!
  /// </summary>
	[Table(Name="dbo.rb_EcommerceMerchants")]
	[DataContract()]
	public partial class Rb_EcommerceMerchant : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   MerchantID : No description found!
    /// </summary>
		private string _MerchantID;
		
    /// <summary>
    ///   GatewayName : No description found!
    /// </summary>
		private string _GatewayName;
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		private string _Name;
		
    /// <summary>
    ///   MerchantEmail : No description found!
    /// </summary>
		private string _MerchantEmail;
		
    /// <summary>
    ///   TechnicalEmail : No description found!
    /// </summary>
		private string _TechnicalEmail;
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		private string _MetadataXml;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMerchantIDChanging(string value);
    partial void OnMerchantIDChanged();
    partial void OnGatewayNameChanging(string value);
    partial void OnGatewayNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMerchantEmailChanging(string value);
    partial void OnMerchantEmailChanged();
    partial void OnTechnicalEmailChanging(string value);
    partial void OnTechnicalEmailChanged();
    partial void OnMetadataXmlChanging(string value);
    partial void OnMetadataXmlChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_EcommerceMerchant
    /// </summary>
		public Rb_EcommerceMerchant()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   MerchantID : No description found!
    /// </summary>
		[Column(Storage="_MerchantID", DbType="NVarChar(25)")]
		[DataMember(Order=1)]
		public string MerchantID
		
    {
			get
			
      {
				return this._MerchantID;
			}
			set
			
      {
				if ((this._MerchantID != value))
				
        {
					this.OnMerchantIDChanging(value);
					this.SendPropertyChanging();
					this._MerchantID = value;
					this.SendPropertyChanged("MerchantID");
					this.OnMerchantIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   GatewayName : No description found!
    /// </summary>
		[Column(Storage="_GatewayName", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string GatewayName
		
    {
			get
			
      {
				return this._GatewayName;
			}
			set
			
      {
				if ((this._GatewayName != value))
				
        {
					this.OnGatewayNameChanging(value);
					this.SendPropertyChanging();
					this._GatewayName = value;
					this.SendPropertyChanged("GatewayName");
					this.OnGatewayNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		[Column(Storage="_Name", DbType="NVarChar(50)")]
		[DataMember(Order=3)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   MerchantEmail : No description found!
    /// </summary>
		[Column(Storage="_MerchantEmail", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string MerchantEmail
		
    {
			get
			
      {
				return this._MerchantEmail;
			}
			set
			
      {
				if ((this._MerchantEmail != value))
				
        {
					this.OnMerchantEmailChanging(value);
					this.SendPropertyChanging();
					this._MerchantEmail = value;
					this.SendPropertyChanged("MerchantEmail");
					this.OnMerchantEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   TechnicalEmail : No description found!
    /// </summary>
		[Column(Storage="_TechnicalEmail", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string TechnicalEmail
		
    {
			get
			
      {
				return this._TechnicalEmail;
			}
			set
			
      {
				if ((this._TechnicalEmail != value))
				
        {
					this.OnTechnicalEmailChanging(value);
					this.SendPropertyChanging();
					this._TechnicalEmail = value;
					this.SendPropertyChanged("TechnicalEmail");
					this.OnTechnicalEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		[Column(Storage="_MetadataXml", DbType="NVarChar(3000)")]
		[DataMember(Order=6)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this.OnMetadataXmlChanging(value);
					this.SendPropertyChanging();
					this._MetadataXml = value;
					this.SendPropertyChanged("MetadataXml");
					this.OnMetadataXmlChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=7)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_EnhancedHtml : No description found!
  /// </summary>
	[Table(Name="dbo.rb_EnhancedHtml")]
	[DataContract()]
	public partial class Rb_EnhancedHtml : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private System.Nullable<int> _ViewOrder;
		
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		private System.Nullable<int> _CultureCode;
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		private string _DesktopHtml;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnCultureCodeChanging(System.Nullable<int> value);
    partial void OnCultureCodeChanged();
    partial void OnDesktopHtmlChanging(string value);
    partial void OnDesktopHtmlChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_EnhancedHtml
    /// </summary>
		public Rb_EnhancedHtml()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		[Column(Storage="_CultureCode", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		[Column(Storage="_DesktopHtml", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=8)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this.OnDesktopHtmlChanging(value);
					this.SendPropertyChanging();
					this._DesktopHtml = value;
					this.SendPropertyChanged("DesktopHtml");
					this.OnDesktopHtmlChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_EnhancedHtml_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_EnhancedHtml_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_EnhancedHtmls.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_EnhancedHtmls.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_EnhancedHtml_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_EnhancedHtml_st")]
	[DataContract()]
	public partial class Rb_EnhancedHtml_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private System.Nullable<int> _ViewOrder;
		
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		private System.Nullable<int> _CultureCode;
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		private string _DesktopHtml;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnCultureCodeChanging(System.Nullable<int> value);
    partial void OnCultureCodeChanged();
    partial void OnDesktopHtmlChanging(string value);
    partial void OnDesktopHtmlChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_EnhancedHtml_st
    /// </summary>
		public Rb_EnhancedHtml_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		[Column(Storage="_CultureCode", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		[Column(Storage="_DesktopHtml", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=8)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this.OnDesktopHtmlChanging(value);
					this.SendPropertyChanging();
					this._DesktopHtml = value;
					this.SendPropertyChanged("DesktopHtml");
					this.OnDesktopHtmlChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_EnhancedHtml_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_EnhancedHtml_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_EnhancedHtml_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_EnhancedHtml_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_EnhancedLinks : No description found!
  /// </summary>
	[Table(Name="dbo.rb_EnhancedLinks")]
	[DataContract()]
	public partial class Rb_EnhancedLink : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		private string _Url;
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		private string _MobileUrl;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private System.Nullable<int> _ViewOrder;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   ImageUrl : No description found!
    /// </summary>
		private string _ImageUrl;
		
    /// <summary>
    ///   Clicks : No description found!
    /// </summary>
		private System.Nullable<int> _Clicks;
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		private string _Target;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnMobileUrlChanging(string value);
    partial void OnMobileUrlChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnClicksChanging(System.Nullable<int> value);
    partial void OnClicksChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_EnhancedLink
    /// </summary>
		public Rb_EnhancedLink()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=6)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		[Column(Storage="_MobileUrl", DbType="NVarChar(250)")]
		[DataMember(Order=7)]
		public string MobileUrl
		
    {
			get
			
      {
				return this._MobileUrl;
			}
			set
			
      {
				if ((this._MobileUrl != value))
				
        {
					this.OnMobileUrlChanging(value);
					this.SendPropertyChanging();
					this._MobileUrl = value;
					this.SendPropertyChanged("MobileUrl");
					this.OnMobileUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ImageUrl : No description found!
    /// </summary>
		[Column(Storage="_ImageUrl", DbType="NVarChar(250)")]
		[DataMember(Order=10)]
		public string ImageUrl
		
    {
			get
			
      {
				return this._ImageUrl;
			}
			set
			
      {
				if ((this._ImageUrl != value))
				
        {
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   Clicks : No description found!
    /// </summary>
		[Column(Storage="_Clicks", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> Clicks
		
    {
			get
			
      {
				return this._Clicks;
			}
			set
			
      {
				if ((this._Clicks != value))
				
        {
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		[Column(Storage="_Target", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=12)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_EnhancedLinks_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_EnhancedLinks_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_EnhancedLinks.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_EnhancedLinks.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_EnhancedLinks_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_EnhancedLinks_st")]
	[DataContract()]
	public partial class Rb_EnhancedLinks_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		private string _Url;
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		private string _MobileUrl;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private System.Nullable<int> _ViewOrder;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   ImageUrl : No description found!
    /// </summary>
		private string _ImageUrl;
		
    /// <summary>
    ///   Clicks : No description found!
    /// </summary>
		private System.Nullable<int> _Clicks;
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		private string _Target;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnMobileUrlChanging(string value);
    partial void OnMobileUrlChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnClicksChanging(System.Nullable<int> value);
    partial void OnClicksChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_EnhancedLinks_st
    /// </summary>
		public Rb_EnhancedLinks_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=6)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		[Column(Storage="_MobileUrl", DbType="NVarChar(250)")]
		[DataMember(Order=7)]
		public string MobileUrl
		
    {
			get
			
      {
				return this._MobileUrl;
			}
			set
			
      {
				if ((this._MobileUrl != value))
				
        {
					this.OnMobileUrlChanging(value);
					this.SendPropertyChanging();
					this._MobileUrl = value;
					this.SendPropertyChanged("MobileUrl");
					this.OnMobileUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ImageUrl : No description found!
    /// </summary>
		[Column(Storage="_ImageUrl", DbType="NVarChar(250)")]
		[DataMember(Order=10)]
		public string ImageUrl
		
    {
			get
			
      {
				return this._ImageUrl;
			}
			set
			
      {
				if ((this._ImageUrl != value))
				
        {
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   Clicks : No description found!
    /// </summary>
		[Column(Storage="_Clicks", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> Clicks
		
    {
			get
			
      {
				return this._Clicks;
			}
			set
			
      {
				if ((this._Clicks != value))
				
        {
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		[Column(Storage="_Target", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=12)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_EnhancedLinks_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_EnhancedLinks_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_EnhancedLinks_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_EnhancedLinks_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Events : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Events")]
	[DataContract()]
	public partial class Rb_Event : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   WhereWhen : No description found!
    /// </summary>
		private string _WhereWhen;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ExpireDate;
		
    /// <summary>
    ///   AllDay : No description found!
    /// </summary>
		private bool _AllDay;
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _StartDate;
		
    /// <summary>
    ///   StartTime : No description found!
    /// </summary>
		private string _StartTime;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnWhereWhenChanging(string value);
    partial void OnWhereWhenChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnAllDayChanging(bool value);
    partial void OnAllDayChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Event
    /// </summary>
		public Rb_Event()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(150)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   WhereWhen : No description found!
    /// </summary>
		[Column(Storage="_WhereWhen", DbType="NVarChar(150)")]
		[DataMember(Order=6)]
		public string WhereWhen
		
    {
			get
			
      {
				return this._WhereWhen;
			}
			set
			
      {
				if ((this._WhereWhen != value))
				
        {
					this.OnWhereWhenChanging(value);
					this.SendPropertyChanging();
					this._WhereWhen = value;
					this.SendPropertyChanged("WhereWhen");
					this.OnWhereWhenChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   AllDay : No description found!
    /// </summary>
		[Column(Storage="_AllDay", DbType="Bit NOT NULL")]
		[DataMember(Order=9)]
		public bool AllDay
		
    {
			get
			
      {
				return this._AllDay;
			}
			set
			
      {
				if ((this._AllDay != value))
				
        {
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartTime : No description found!
    /// </summary>
		[Column(Storage="_StartTime", DbType="NVarChar(8)")]
		[DataMember(Order=11)]
		public string StartTime
		
    {
			get
			
      {
				return this._StartTime;
			}
			set
			
      {
				if ((this._StartTime != value))
				
        {
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Events_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Events_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Events.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Events.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Events_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Events_st")]
	[DataContract()]
	public partial class Rb_Events_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   WhereWhen : No description found!
    /// </summary>
		private string _WhereWhen;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ExpireDate;
		
    /// <summary>
    ///   AllDay : No description found!
    /// </summary>
		private bool _AllDay;
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _StartDate;
		
    /// <summary>
    ///   StartTime : No description found!
    /// </summary>
		private string _StartTime;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnWhereWhenChanging(string value);
    partial void OnWhereWhenChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnAllDayChanging(bool value);
    partial void OnAllDayChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Events_st
    /// </summary>
		public Rb_Events_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(150)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   WhereWhen : No description found!
    /// </summary>
		[Column(Storage="_WhereWhen", DbType="NVarChar(150)")]
		[DataMember(Order=6)]
		public string WhereWhen
		
    {
			get
			
      {
				return this._WhereWhen;
			}
			set
			
      {
				if ((this._WhereWhen != value))
				
        {
					this.OnWhereWhenChanging(value);
					this.SendPropertyChanging();
					this._WhereWhen = value;
					this.SendPropertyChanged("WhereWhen");
					this.OnWhereWhenChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=7)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ExpireDate : No description found!
    /// </summary>
		[Column(Storage="_ExpireDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> ExpireDate
		
    {
			get
			
      {
				return this._ExpireDate;
			}
			set
			
      {
				if ((this._ExpireDate != value))
				
        {
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   AllDay : No description found!
    /// </summary>
		[Column(Storage="_AllDay", DbType="Bit NOT NULL")]
		[DataMember(Order=9)]
		public bool AllDay
		
    {
			get
			
      {
				return this._AllDay;
			}
			set
			
      {
				if ((this._AllDay != value))
				
        {
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartTime : No description found!
    /// </summary>
		[Column(Storage="_StartTime", DbType="NVarChar(8)")]
		[DataMember(Order=11)]
		public string StartTime
		
    {
			get
			
      {
				return this._StartTime;
			}
			set
			
      {
				if ((this._StartTime != value))
				
        {
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Events_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Events_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Events_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Events_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_FAQs : No description found!
  /// </summary>
	[Table(Name="dbo.rb_FAQs")]
	[DataContract()]
	public partial class Rb_FAQ : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Question : No description found!
    /// </summary>
		private string _Question;
		
    /// <summary>
    ///   Answer : No description found!
    /// </summary>
		private string _Answer;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_FAQ
    /// </summary>
		public Rb_FAQ()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Question : No description found!
    /// </summary>
		[Column(Storage="_Question", DbType="NVarChar(500)")]
		[DataMember(Order=5)]
		public string Question
		
    {
			get
			
      {
				return this._Question;
			}
			set
			
      {
				if ((this._Question != value))
				
        {
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Answer : No description found!
    /// </summary>
		[Column(Storage="_Answer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=6)]
		public string Answer
		
    {
			get
			
      {
				return this._Answer;
			}
			set
			
      {
				if ((this._Answer != value))
				
        {
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_GeneralModuleDefinitions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_GeneralModuleDefinitions")]
	[DataContract()]
	public partial class Rb_GeneralModuleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   GeneralModDefID : No description found!
    /// </summary>
		private System.Guid _GeneralModDefID;
		
    /// <summary>
    ///   FriendlyName : No description found!
    /// </summary>
		private string _FriendlyName;
		
    /// <summary>
    ///   DesktopSrc : No description found!
    /// </summary>
		private string _DesktopSrc;
		
    /// <summary>
    ///   MobileSrc : No description found!
    /// </summary>
		private string _MobileSrc;
		
    /// <summary>
    ///   AssemblyName : No description found!
    /// </summary>
		private string _AssemblyName;
		
    /// <summary>
    ///   ClassName : No description found!
    /// </summary>
		private string _ClassName;
		
    /// <summary>
    ///   Admin : No description found!
    /// </summary>
		private System.Nullable<bool> _Admin;
		
    /// <summary>
    ///   Searchable : No description found!
    /// </summary>
		private System.Nullable<bool> _Searchable;
		
		private EntitySet<Rb_ModuleDefinition> _Rb_ModuleDefinitions;
		
		private EntitySet<Rb_SolutionModuleDefinition> _Rb_SolutionModuleDefinitions;
		
		private EntitySet<Rb_ContentManager> _Rb_ContentManagers;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeneralModDefIDChanging(System.Guid value);
    partial void OnGeneralModDefIDChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDesktopSrcChanging(string value);
    partial void OnDesktopSrcChanged();
    partial void OnMobileSrcChanging(string value);
    partial void OnMobileSrcChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnAdminChanging(System.Nullable<bool> value);
    partial void OnAdminChanged();
    partial void OnSearchableChanging(System.Nullable<bool> value);
    partial void OnSearchableChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_GeneralModuleDefinition
    /// </summary>
		public Rb_GeneralModuleDefinition()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   GeneralModDefID : No description found!
    /// </summary>
		[Column(Storage="_GeneralModDefID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid GeneralModDefID
		
    {
			get
			
      {
				return this._GeneralModDefID;
			}
			set
			
      {
				if ((this._GeneralModDefID != value))
				
        {
					this.OnGeneralModDefIDChanging(value);
					this.SendPropertyChanging();
					this._GeneralModDefID = value;
					this.SendPropertyChanged("GeneralModDefID");
					this.OnGeneralModDefIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   FriendlyName : No description found!
    /// </summary>
		[Column(Storage="_FriendlyName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string FriendlyName
		
    {
			get
			
      {
				return this._FriendlyName;
			}
			set
			
      {
				if ((this._FriendlyName != value))
				
        {
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   DesktopSrc : No description found!
    /// </summary>
		[Column(Storage="_DesktopSrc", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string DesktopSrc
		
    {
			get
			
      {
				return this._DesktopSrc;
			}
			set
			
      {
				if ((this._DesktopSrc != value))
				
        {
					this.OnDesktopSrcChanging(value);
					this.SendPropertyChanging();
					this._DesktopSrc = value;
					this.SendPropertyChanged("DesktopSrc");
					this.OnDesktopSrcChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileSrc : No description found!
    /// </summary>
		[Column(Storage="_MobileSrc", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string MobileSrc
		
    {
			get
			
      {
				return this._MobileSrc;
			}
			set
			
      {
				if ((this._MobileSrc != value))
				
        {
					this.OnMobileSrcChanging(value);
					this.SendPropertyChanging();
					this._MobileSrc = value;
					this.SendPropertyChanged("MobileSrc");
					this.OnMobileSrcChanged();
				}
			}
		}
		
    /// <summary>
    ///   AssemblyName : No description found!
    /// </summary>
		[Column(Storage="_AssemblyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string AssemblyName
		
    {
			get
			
      {
				return this._AssemblyName;
			}
			set
			
      {
				if ((this._AssemblyName != value))
				
        {
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   ClassName : No description found!
    /// </summary>
		[Column(Storage="_ClassName", DbType="NVarChar(128)")]
		[DataMember(Order=6)]
		public string ClassName
		
    {
			get
			
      {
				return this._ClassName;
			}
			set
			
      {
				if ((this._ClassName != value))
				
        {
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Admin : No description found!
    /// </summary>
		[Column(Storage="_Admin", DbType="Bit")]
		[DataMember(Order=7)]
		public System.Nullable<bool> Admin
		
    {
			get
			
      {
				return this._Admin;
			}
			set
			
      {
				if ((this._Admin != value))
				
        {
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
    /// <summary>
    ///   Searchable : No description found!
    /// </summary>
		[Column(Storage="_Searchable", DbType="Bit")]
		[DataMember(Order=8)]
		public System.Nullable<bool> Searchable
		
    {
			get
			
      {
				return this._Searchable;
			}
			set
			
      {
				if ((this._Searchable != value))
				
        {
					this.OnSearchableChanging(value);
					this.SendPropertyChanging();
					this._Searchable = value;
					this.SendPropertyChanged("Searchable");
					this.OnSearchableChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_ModuleDefinitions_rb_GeneralModuleDefinitions", Storage="_Rb_ModuleDefinitions", OtherKey="GeneralModDefID", DeleteRule="CASCADE")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<Rb_ModuleDefinition> Rb_ModuleDefinitions
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_ModuleDefinitions.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_ModuleDefinitions;
			}
			set
			
      {
				this._Rb_ModuleDefinitions.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_SolutionModuleDefinitions_rb_GeneralModuleDefinitions", Storage="_Rb_SolutionModuleDefinitions", OtherKey="GeneralModDefID", DeleteRule="NO ACTION")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<Rb_SolutionModuleDefinition> Rb_SolutionModuleDefinitions
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_SolutionModuleDefinitions.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_SolutionModuleDefinitions;
			}
			set
			
      {
				this._Rb_SolutionModuleDefinitions.Assign(value);
			}
		}
		
		[Association(Name="FK_rbContentManager_SourceGenModDefs", Storage="_Rb_ContentManagers", OtherKey="SourceGeneralModDefID", DeleteRule="CASCADE")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<Rb_ContentManager> Rb_ContentManagers
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_ContentManagers.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_ContentManagers;
			}
			set
			
      {
				this._Rb_ContentManagers.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_ModuleDefinitions(Rb_ModuleDefinition entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_GeneralModuleDefinition = this;
		}
		
		private void detach_Rb_ModuleDefinitions(Rb_ModuleDefinition entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_GeneralModuleDefinition = null;
		}
		
		private void attach_Rb_SolutionModuleDefinitions(Rb_SolutionModuleDefinition entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_GeneralModuleDefinition = this;
		}
		
		private void detach_Rb_SolutionModuleDefinitions(Rb_SolutionModuleDefinition entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_GeneralModuleDefinition = null;
		}
		
		private void attach_Rb_ContentManagers(Rb_ContentManager entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_GeneralModuleDefinition = this;
		}
		
		private void detach_Rb_ContentManagers(Rb_ContentManager entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_GeneralModuleDefinition = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_ModuleDefinitions = new EntitySet<Rb_ModuleDefinition>(new Action<Rb_ModuleDefinition>(this.attach_Rb_ModuleDefinitions), new Action<Rb_ModuleDefinition>(this.detach_Rb_ModuleDefinitions));
			this._Rb_SolutionModuleDefinitions = new EntitySet<Rb_SolutionModuleDefinition>(new Action<Rb_SolutionModuleDefinition>(this.attach_Rb_SolutionModuleDefinitions), new Action<Rb_SolutionModuleDefinition>(this.detach_Rb_SolutionModuleDefinitions));
			this._Rb_ContentManagers = new EntitySet<Rb_ContentManager>(new Action<Rb_ContentManager>(this.attach_Rb_ContentManagers), new Action<Rb_ContentManager>(this.detach_Rb_ContentManagers));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_HtmlText : No description found!
  /// </summary>
	[Table(Name="dbo.rb_HtmlText")]
	[DataContract()]
	public partial class Rb_HtmlText : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		private string _DesktopHtml;
		
    /// <summary>
    ///   MobileSummary : No description found!
    /// </summary>
		private string _MobileSummary;
		
    /// <summary>
    ///   MobileDetails : No description found!
    /// </summary>
		private string _MobileDetails;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnDesktopHtmlChanging(string value);
    partial void OnDesktopHtmlChanged();
    partial void OnMobileSummaryChanging(string value);
    partial void OnMobileSummaryChanged();
    partial void OnMobileDetailsChanging(string value);
    partial void OnMobileDetailsChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_HtmlText
    /// </summary>
		public Rb_HtmlText()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		[Column(Storage="_DesktopHtml", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this.OnDesktopHtmlChanging(value);
					this.SendPropertyChanging();
					this._DesktopHtml = value;
					this.SendPropertyChanged("DesktopHtml");
					this.OnDesktopHtmlChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileSummary : No description found!
    /// </summary>
		[Column(Storage="_MobileSummary", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string MobileSummary
		
    {
			get
			
      {
				return this._MobileSummary;
			}
			set
			
      {
				if ((this._MobileSummary != value))
				
        {
					this.OnMobileSummaryChanging(value);
					this.SendPropertyChanging();
					this._MobileSummary = value;
					this.SendPropertyChanged("MobileSummary");
					this.OnMobileSummaryChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileDetails : No description found!
    /// </summary>
		[Column(Storage="_MobileDetails", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=4)]
		public string MobileDetails
		
    {
			get
			
      {
				return this._MobileDetails;
			}
			set
			
      {
				if ((this._MobileDetails != value))
				
        {
					this.OnMobileDetailsChanging(value);
					this.SendPropertyChanging();
					this._MobileDetails = value;
					this.SendPropertyChanged("MobileDetails");
					this.OnMobileDetailsChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=5)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_HtmlText_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_HtmlText_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_HtmlText = null;
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_HtmlText = this;
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_HtmlText_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_HtmlText_st")]
	[DataContract()]
	public partial class Rb_HtmlText_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		private string _DesktopHtml;
		
    /// <summary>
    ///   MobileSummary : No description found!
    /// </summary>
		private string _MobileSummary;
		
    /// <summary>
    ///   MobileDetails : No description found!
    /// </summary>
		private string _MobileDetails;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnDesktopHtmlChanging(string value);
    partial void OnDesktopHtmlChanged();
    partial void OnMobileSummaryChanging(string value);
    partial void OnMobileSummaryChanged();
    partial void OnMobileDetailsChanging(string value);
    partial void OnMobileDetailsChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_HtmlText_st
    /// </summary>
		public Rb_HtmlText_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DesktopHtml : No description found!
    /// </summary>
		[Column(Storage="_DesktopHtml", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public string DesktopHtml
		
    {
			get
			
      {
				return this._DesktopHtml;
			}
			set
			
      {
				if ((this._DesktopHtml != value))
				
        {
					this.OnDesktopHtmlChanging(value);
					this.SendPropertyChanging();
					this._DesktopHtml = value;
					this.SendPropertyChanged("DesktopHtml");
					this.OnDesktopHtmlChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileSummary : No description found!
    /// </summary>
		[Column(Storage="_MobileSummary", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string MobileSummary
		
    {
			get
			
      {
				return this._MobileSummary;
			}
			set
			
      {
				if ((this._MobileSummary != value))
				
        {
					this.OnMobileSummaryChanging(value);
					this.SendPropertyChanging();
					this._MobileSummary = value;
					this.SendPropertyChanged("MobileSummary");
					this.OnMobileSummaryChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileDetails : No description found!
    /// </summary>
		[Column(Storage="_MobileDetails", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=4)]
		public string MobileDetails
		
    {
			get
			
      {
				return this._MobileDetails;
			}
			set
			
      {
				if ((this._MobileDetails != value))
				
        {
					this.OnMobileDetailsChanging(value);
					this.SendPropertyChanging();
					this._MobileDetails = value;
					this.SendPropertyChanged("MobileDetails");
					this.OnMobileDetailsChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=5)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_HtmlText_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_HtmlText_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_HtmlText_st = null;
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_HtmlText_st = this;
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Links : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Links")]
	[DataContract()]
	public partial class Rb_Link : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		private string _Url;
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		private string _MobileUrl;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private System.Nullable<int> _ViewOrder;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		private string _Target;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnMobileUrlChanging(string value);
    partial void OnMobileUrlChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Link
    /// </summary>
		public Rb_Link()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=6)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		[Column(Storage="_MobileUrl", DbType="NVarChar(250)")]
		[DataMember(Order=7)]
		public string MobileUrl
		
    {
			get
			
      {
				return this._MobileUrl;
			}
			set
			
      {
				if ((this._MobileUrl != value))
				
        {
					this.OnMobileUrlChanging(value);
					this.SendPropertyChanging();
					this._MobileUrl = value;
					this.SendPropertyChanged("MobileUrl");
					this.OnMobileUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		[Column(Storage="_Target", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Links_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Links_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Links.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Links.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Links_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Links_st")]
	[DataContract()]
	public partial class Rb_Links_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		private string _Url;
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		private string _MobileUrl;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private System.Nullable<int> _ViewOrder;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		private string _Target;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnMobileUrlChanging(string value);
    partial void OnMobileUrlChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Links_st
    /// </summary>
		public Rb_Links_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Url : No description found!
    /// </summary>
		[Column(Storage="_Url", DbType="NVarChar(800)")]
		[DataMember(Order=6)]
		public string Url
		
    {
			get
			
      {
				return this._Url;
			}
			set
			
      {
				if ((this._Url != value))
				
        {
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobileUrl : No description found!
    /// </summary>
		[Column(Storage="_MobileUrl", DbType="NVarChar(250)")]
		[DataMember(Order=7)]
		public string MobileUrl
		
    {
			get
			
      {
				return this._MobileUrl;
			}
			set
			
      {
				if ((this._MobileUrl != value))
				
        {
					this.OnMobileUrlChanging(value);
					this.SendPropertyChanging();
					this._MobileUrl = value;
					this.SendPropertyChanged("MobileUrl");
					this.OnMobileUrlChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(2000)")]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Target : No description found!
    /// </summary>
		[Column(Storage="_Target", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string Target
		
    {
			get
			
      {
				return this._Target;
			}
			set
			
      {
				if ((this._Target != value))
				
        {
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Links_st_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Links_st_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Links_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Links_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Localize : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Localize")]
	[DataContract()]
	public partial class Rb_Localize : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   TextKey : No description found!
    /// </summary>
		private string _TextKey;
		
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		private string _CultureCode;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTextKeyChanging(string value);
    partial void OnTextKeyChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Localize
    /// </summary>
		public Rb_Localize()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   TextKey : No description found!
    /// </summary>
		[Column(Storage="_TextKey", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string TextKey
		
    {
			get
			
      {
				return this._TextKey;
			}
			set
			
      {
				if ((this._TextKey != value))
				
        {
					this.OnTextKeyChanging(value);
					this.SendPropertyChanging();
					this._TextKey = value;
					this.SendPropertyChanged("TextKey");
					this.OnTextKeyChanged();
				}
			}
		}
		
    /// <summary>
    ///   CultureCode : No description found!
    /// </summary>
		[Column(Storage="_CultureCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string CultureCode
		
    {
			get
			
      {
				return this._CultureCode;
			}
			set
			
      {
				if ((this._CultureCode != value))
				
        {
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Milestones : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Milestones")]
	[DataContract()]
	public partial class Rb_Milestone : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private System.Nullable<int> _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   EstCompleteDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _EstCompleteDate;
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		private string _Status;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEstCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstCompleteDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Milestone
    /// </summary>
		public Rb_Milestone()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   EstCompleteDate : No description found!
    /// </summary>
		[Column(Storage="_EstCompleteDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> EstCompleteDate
		
    {
			get
			
      {
				return this._EstCompleteDate;
			}
			set
			
      {
				if ((this._EstCompleteDate != value))
				
        {
					this.OnEstCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._EstCompleteDate = value;
					this.SendPropertyChanged("EstCompleteDate");
					this.OnEstCompleteDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		[Column(Storage="_Status", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Milestones_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Milestones_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Milestones.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Milestones.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Milestones_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Milestones_st")]
	[DataContract()]
	public partial class Rb_Milestones_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private System.Nullable<int> _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   EstCompleteDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _EstCompleteDate;
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		private string _Status;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEstCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstCompleteDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Milestones_st
    /// </summary>
		public Rb_Milestones_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   EstCompleteDate : No description found!
    /// </summary>
		[Column(Storage="_EstCompleteDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> EstCompleteDate
		
    {
			get
			
      {
				return this._EstCompleteDate;
			}
			set
			
      {
				if ((this._EstCompleteDate != value))
				
        {
					this.OnEstCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._EstCompleteDate = value;
					this.SendPropertyChanged("EstCompleteDate");
					this.OnEstCompleteDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		[Column(Storage="_Status", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_ModuleDefinitions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ModuleDefinitions")]
	[DataContract()]
	public partial class Rb_ModuleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleDefID : No description found!
    /// </summary>
		private int _ModuleDefID;
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   GeneralModDefID : No description found!
    /// </summary>
		private System.Guid _GeneralModDefID;
		
		private EntityRef<Rb_GeneralModuleDefinition> _Rb_GeneralModuleDefinition;
		
		private EntitySet<Rb_Module> _Rb_Modules;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnGeneralModDefIDChanging(System.Guid value);
    partial void OnGeneralModDefIDChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ModuleDefinition
    /// </summary>
		public Rb_ModuleDefinition()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleDefID : No description found!
    /// </summary>
		[Column(Storage="_ModuleDefID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ModuleDefID
		
    {
			get
			
      {
				return this._ModuleDefID;
			}
			set
			
      {
				if ((this._ModuleDefID != value))
				
        {
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   GeneralModDefID : No description found!
    /// </summary>
		[Column(Storage="_GeneralModDefID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=3)]
		public System.Guid GeneralModDefID
		
    {
			get
			
      {
				return this._GeneralModDefID;
			}
			set
			
      {
				if ((this._GeneralModDefID != value))
				
        {
					if (this._Rb_GeneralModuleDefinition.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneralModDefIDChanging(value);
					this.SendPropertyChanging();
					this._GeneralModDefID = value;
					this.SendPropertyChanged("GeneralModDefID");
					this.OnGeneralModDefIDChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_ModuleDefinitions_rb_GeneralModuleDefinitions
    /// </summary>
		[Association(Name="FK_rb_ModuleDefinitions_rb_GeneralModuleDefinitions", Storage="_Rb_GeneralModuleDefinition", ThisKey="GeneralModDefID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_GeneralModuleDefinition Rb_GeneralModuleDefinition
		
    {
			get
			
      {
				return this._Rb_GeneralModuleDefinition.Entity;
			}
			set
			
      {
				Rb_GeneralModuleDefinition previousValue = this._Rb_GeneralModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._Rb_GeneralModuleDefinition.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_GeneralModuleDefinition.Entity = null;
						previousValue.Rb_ModuleDefinitions.Remove(this);
					}
					this._Rb_GeneralModuleDefinition.Entity = value;
					if ((value != null))
					
          {
						value.Rb_ModuleDefinitions.Add(this);
						this._GeneralModDefID = value.GeneralModDefID;
					}
					else
					
          {
						this._GeneralModDefID = default(System.Guid);
					}
					this.SendPropertyChanged("Rb_GeneralModuleDefinition");
				}
			}
		}
		
		[Association(Name="FK_rb_Modules_rb_ModuleDefinitions", Storage="_Rb_Modules", OtherKey="ModuleDefID", DeleteRule="CASCADE")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<Rb_Module> Rb_Modules
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Modules.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Modules;
			}
			set
			
      {
				this._Rb_Modules.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_Modules(Rb_Module entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_ModuleDefinition = this;
		}
		
		private void detach_Rb_Modules(Rb_Module entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_ModuleDefinition = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_GeneralModuleDefinition = default(EntityRef<Rb_GeneralModuleDefinition>);
			this._Rb_Modules = new EntitySet<Rb_Module>(new Action<Rb_Module>(this.attach_Rb_Modules), new Action<Rb_Module>(this.detach_Rb_Modules));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_Modules : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Modules")]
	[DataContract()]
	public partial class Rb_Module : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   TabID : No description found!
    /// </summary>
		private int _TabID;
		
    /// <summary>
    ///   ModuleDefID : No description found!
    /// </summary>
		private int _ModuleDefID;
		
    /// <summary>
    ///   ModuleOrder : No description found!
    /// </summary>
		private int _ModuleOrder;
		
    /// <summary>
    ///   PaneName : No description found!
    /// </summary>
		private string _PaneName;
		
    /// <summary>
    ///   ModuleTitle : No description found!
    /// </summary>
		private string _ModuleTitle;
		
    /// <summary>
    ///   AuthorizedEditRoles : No description found!
    /// </summary>
		private string _AuthorizedEditRoles;
		
    /// <summary>
    ///   AuthorizedViewRoles : No description found!
    /// </summary>
		private string _AuthorizedViewRoles;
		
    /// <summary>
    ///   AuthorizedAddRoles : No description found!
    /// </summary>
		private string _AuthorizedAddRoles;
		
    /// <summary>
    ///   AuthorizedDeleteRoles : No description found!
    /// </summary>
		private string _AuthorizedDeleteRoles;
		
    /// <summary>
    ///   AuthorizedPropertiesRoles : No description found!
    /// </summary>
		private string _AuthorizedPropertiesRoles;
		
    /// <summary>
    ///   CacheTime : No description found!
    /// </summary>
		private int _CacheTime;
		
    /// <summary>
    ///   ShowMobile : No description found!
    /// </summary>
		private System.Nullable<bool> _ShowMobile;
		
    /// <summary>
    ///   AuthorizedPublishingRoles : No description found!
    /// </summary>
		private string _AuthorizedPublishingRoles;
		
    /// <summary>
    ///   NewVersion : No description found!
    /// </summary>
		private System.Nullable<bool> _NewVersion;
		
    /// <summary>
    ///   SupportWorkflow : No description found!
    /// </summary>
		private System.Nullable<bool> _SupportWorkflow;
		
    /// <summary>
    ///   AuthorizedApproveRoles : No description found!
    /// </summary>
		private string _AuthorizedApproveRoles;
		
    /// <summary>
    ///   WorkflowState : No description found!
    /// </summary>
		private System.Nullable<byte> _WorkflowState;
		
    /// <summary>
    ///   LastModified : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _LastModified;
		
    /// <summary>
    ///   LastEditor : No description found!
    /// </summary>
		private string _LastEditor;
		
    /// <summary>
    ///   StagingLastModified : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _StagingLastModified;
		
    /// <summary>
    ///   StagingLastEditor : No description found!
    /// </summary>
		private string _StagingLastEditor;
		
    /// <summary>
    ///   SupportCollapsable : No description found!
    /// </summary>
		private System.Nullable<bool> _SupportCollapsable;
		
    /// <summary>
    ///   ShowEveryWhere : No description found!
    /// </summary>
		private System.Nullable<bool> _ShowEveryWhere;
		
    /// <summary>
    ///   AuthorizedMoveModuleRoles : No description found!
    /// </summary>
		private string _AuthorizedMoveModuleRoles;
		
    /// <summary>
    ///   AuthorizedDeleteModuleRoles : No description found!
    /// </summary>
		private string _AuthorizedDeleteModuleRoles;
		
		private EntityRef<Rb_ComponentModule> _Rb_ComponentModule;
		
		private EntitySet<Rb_Product> _Rb_Products;
		
		private EntitySet<Rb_Products_st> _Rb_Products_sts;
		
		private EntitySet<Rb_Announcement> _Rb_Announcements;
		
		private EntitySet<Rb_Announcements_st> _Rb_Announcements_sts;
		
		private EntitySet<Rb_Article> _Rb_Articles;
		
		private EntitySet<Rb_Articles_st> _Rb_Articles_sts;
		
		private EntitySet<Rb_BlogComment> _Rb_BlogComments;
		
		private EntitySet<Rb_Blog> _Rb_Blogs;
		
		private EntitySet<Rb_BlogStat> _Rb_BlogStats;
		
		private EntitySet<Rb_Contact> _Rb_Contacts;
		
		private EntitySet<Rb_Contacts_st> _Rb_Contacts_sts;
		
		private EntitySet<Rb_Discussion> _Rb_Discussions;
		
		private EntitySet<Rb_Document> _Rb_Documents;
		
		private EntitySet<Rb_Documents_st> _Rb_Documents_sts;
		
		private EntitySet<Rb_EnhancedHtml> _Rb_EnhancedHtmls;
		
		private EntitySet<Rb_EnhancedHtml_st> _Rb_EnhancedHtml_sts;
		
		private EntitySet<Rb_EnhancedLink> _Rb_EnhancedLinks;
		
		private EntitySet<Rb_EnhancedLinks_st> _Rb_EnhancedLinks_sts;
		
		private EntitySet<Rb_Event> _Rb_Events;
		
		private EntitySet<Rb_Events_st> _Rb_Events_sts;
		
		private EntityRef<Rb_HtmlText> _Rb_HtmlText;
		
		private EntityRef<Rb_HtmlText_st> _Rb_HtmlText_st;
		
		private EntitySet<Rb_Link> _Rb_Links;
		
		private EntitySet<Rb_Links_st> _Rb_Links_sts;
		
		private EntitySet<Rb_Milestone> _Rb_Milestones;
		
		private EntityRef<Rb_ModuleDefinition> _Rb_ModuleDefinition;
		
		private EntityRef<Rb_Page> _Rb_Page;
		
		private EntitySet<Rb_ModuleSetting> _Rb_ModuleSettings;
		
		private EntitySet<Rb_Picture> _Rb_Pictures;
		
		private EntitySet<Rb_Survey> _Rb_Surveys;
		
		private EntitySet<Rb_BookList> _Rb_BookLists;
		
		private EntitySet<Rb_Task> _Rb_Tasks;
		
		private EntitySet<Rb_UserDefinedField> _Rb_UserDefinedFields;
		
		private EntitySet<Rb_UserDefinedRow> _Rb_UserDefinedRows;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnModuleOrderChanging(int value);
    partial void OnModuleOrderChanged();
    partial void OnPaneNameChanging(string value);
    partial void OnPaneNameChanged();
    partial void OnModuleTitleChanging(string value);
    partial void OnModuleTitleChanged();
    partial void OnAuthorizedEditRolesChanging(string value);
    partial void OnAuthorizedEditRolesChanged();
    partial void OnAuthorizedViewRolesChanging(string value);
    partial void OnAuthorizedViewRolesChanged();
    partial void OnAuthorizedAddRolesChanging(string value);
    partial void OnAuthorizedAddRolesChanged();
    partial void OnAuthorizedDeleteRolesChanging(string value);
    partial void OnAuthorizedDeleteRolesChanged();
    partial void OnAuthorizedPropertiesRolesChanging(string value);
    partial void OnAuthorizedPropertiesRolesChanged();
    partial void OnCacheTimeChanging(int value);
    partial void OnCacheTimeChanged();
    partial void OnShowMobileChanging(System.Nullable<bool> value);
    partial void OnShowMobileChanged();
    partial void OnAuthorizedPublishingRolesChanging(string value);
    partial void OnAuthorizedPublishingRolesChanged();
    partial void OnNewVersionChanging(System.Nullable<bool> value);
    partial void OnNewVersionChanged();
    partial void OnSupportWorkflowChanging(System.Nullable<bool> value);
    partial void OnSupportWorkflowChanged();
    partial void OnAuthorizedApproveRolesChanging(string value);
    partial void OnAuthorizedApproveRolesChanged();
    partial void OnWorkflowStateChanging(System.Nullable<byte> value);
    partial void OnWorkflowStateChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnLastEditorChanging(string value);
    partial void OnLastEditorChanged();
    partial void OnStagingLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnStagingLastModifiedChanged();
    partial void OnStagingLastEditorChanging(string value);
    partial void OnStagingLastEditorChanged();
    partial void OnSupportCollapsableChanging(System.Nullable<bool> value);
    partial void OnSupportCollapsableChanged();
    partial void OnShowEveryWhereChanging(System.Nullable<bool> value);
    partial void OnShowEveryWhereChanged();
    partial void OnAuthorizedMoveModuleRolesChanging(string value);
    partial void OnAuthorizedMoveModuleRolesChanged();
    partial void OnAuthorizedDeleteModuleRolesChanging(string value);
    partial void OnAuthorizedDeleteModuleRolesChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Module
    /// </summary>
		public Rb_Module()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   TabID : No description found!
    /// </summary>
		[Column(Storage="_TabID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int TabID
		
    {
			get
			
      {
				return this._TabID;
			}
			set
			
      {
				if ((this._TabID != value))
				
        {
					if (this._Rb_Page.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleDefID : No description found!
    /// </summary>
		[Column(Storage="_ModuleDefID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ModuleDefID
		
    {
			get
			
      {
				return this._ModuleDefID;
			}
			set
			
      {
				if ((this._ModuleDefID != value))
				
        {
					if (this._Rb_ModuleDefinition.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleOrder : No description found!
    /// </summary>
		[Column(Storage="_ModuleOrder", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int ModuleOrder
		
    {
			get
			
      {
				return this._ModuleOrder;
			}
			set
			
      {
				if ((this._ModuleOrder != value))
				
        {
					this.OnModuleOrderChanging(value);
					this.SendPropertyChanging();
					this._ModuleOrder = value;
					this.SendPropertyChanged("ModuleOrder");
					this.OnModuleOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   PaneName : No description found!
    /// </summary>
		[Column(Storage="_PaneName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string PaneName
		
    {
			get
			
      {
				return this._PaneName;
			}
			set
			
      {
				if ((this._PaneName != value))
				
        {
					this.OnPaneNameChanging(value);
					this.SendPropertyChanging();
					this._PaneName = value;
					this.SendPropertyChanged("PaneName");
					this.OnPaneNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleTitle : No description found!
    /// </summary>
		[Column(Storage="_ModuleTitle", DbType="NVarChar(256)")]
		[DataMember(Order=6)]
		public string ModuleTitle
		
    {
			get
			
      {
				return this._ModuleTitle;
			}
			set
			
      {
				if ((this._ModuleTitle != value))
				
        {
					this.OnModuleTitleChanging(value);
					this.SendPropertyChanging();
					this._ModuleTitle = value;
					this.SendPropertyChanged("ModuleTitle");
					this.OnModuleTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedEditRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedEditRoles", DbType="NVarChar(256)")]
		[DataMember(Order=7)]
		public string AuthorizedEditRoles
		
    {
			get
			
      {
				return this._AuthorizedEditRoles;
			}
			set
			
      {
				if ((this._AuthorizedEditRoles != value))
				
        {
					this.OnAuthorizedEditRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedEditRoles = value;
					this.SendPropertyChanged("AuthorizedEditRoles");
					this.OnAuthorizedEditRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedViewRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedViewRoles", DbType="NVarChar(256)")]
		[DataMember(Order=8)]
		public string AuthorizedViewRoles
		
    {
			get
			
      {
				return this._AuthorizedViewRoles;
			}
			set
			
      {
				if ((this._AuthorizedViewRoles != value))
				
        {
					this.OnAuthorizedViewRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedViewRoles = value;
					this.SendPropertyChanged("AuthorizedViewRoles");
					this.OnAuthorizedViewRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedAddRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedAddRoles", DbType="NVarChar(256)")]
		[DataMember(Order=9)]
		public string AuthorizedAddRoles
		
    {
			get
			
      {
				return this._AuthorizedAddRoles;
			}
			set
			
      {
				if ((this._AuthorizedAddRoles != value))
				
        {
					this.OnAuthorizedAddRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedAddRoles = value;
					this.SendPropertyChanged("AuthorizedAddRoles");
					this.OnAuthorizedAddRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedDeleteRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedDeleteRoles", DbType="NVarChar(256)")]
		[DataMember(Order=10)]
		public string AuthorizedDeleteRoles
		
    {
			get
			
      {
				return this._AuthorizedDeleteRoles;
			}
			set
			
      {
				if ((this._AuthorizedDeleteRoles != value))
				
        {
					this.OnAuthorizedDeleteRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedDeleteRoles = value;
					this.SendPropertyChanged("AuthorizedDeleteRoles");
					this.OnAuthorizedDeleteRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedPropertiesRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedPropertiesRoles", DbType="NVarChar(256)")]
		[DataMember(Order=11)]
		public string AuthorizedPropertiesRoles
		
    {
			get
			
      {
				return this._AuthorizedPropertiesRoles;
			}
			set
			
      {
				if ((this._AuthorizedPropertiesRoles != value))
				
        {
					this.OnAuthorizedPropertiesRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedPropertiesRoles = value;
					this.SendPropertyChanged("AuthorizedPropertiesRoles");
					this.OnAuthorizedPropertiesRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   CacheTime : No description found!
    /// </summary>
		[Column(Storage="_CacheTime", DbType="Int NOT NULL")]
		[DataMember(Order=12)]
		public int CacheTime
		
    {
			get
			
      {
				return this._CacheTime;
			}
			set
			
      {
				if ((this._CacheTime != value))
				
        {
					this.OnCacheTimeChanging(value);
					this.SendPropertyChanging();
					this._CacheTime = value;
					this.SendPropertyChanged("CacheTime");
					this.OnCacheTimeChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShowMobile : No description found!
    /// </summary>
		[Column(Storage="_ShowMobile", DbType="Bit")]
		[DataMember(Order=13)]
		public System.Nullable<bool> ShowMobile
		
    {
			get
			
      {
				return this._ShowMobile;
			}
			set
			
      {
				if ((this._ShowMobile != value))
				
        {
					this.OnShowMobileChanging(value);
					this.SendPropertyChanging();
					this._ShowMobile = value;
					this.SendPropertyChanged("ShowMobile");
					this.OnShowMobileChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedPublishingRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedPublishingRoles", DbType="NVarChar(256)")]
		[DataMember(Order=14)]
		public string AuthorizedPublishingRoles
		
    {
			get
			
      {
				return this._AuthorizedPublishingRoles;
			}
			set
			
      {
				if ((this._AuthorizedPublishingRoles != value))
				
        {
					this.OnAuthorizedPublishingRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedPublishingRoles = value;
					this.SendPropertyChanged("AuthorizedPublishingRoles");
					this.OnAuthorizedPublishingRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   NewVersion : No description found!
    /// </summary>
		[Column(Storage="_NewVersion", DbType="Bit")]
		[DataMember(Order=15)]
		public System.Nullable<bool> NewVersion
		
    {
			get
			
      {
				return this._NewVersion;
			}
			set
			
      {
				if ((this._NewVersion != value))
				
        {
					this.OnNewVersionChanging(value);
					this.SendPropertyChanging();
					this._NewVersion = value;
					this.SendPropertyChanged("NewVersion");
					this.OnNewVersionChanged();
				}
			}
		}
		
    /// <summary>
    ///   SupportWorkflow : No description found!
    /// </summary>
		[Column(Storage="_SupportWorkflow", DbType="Bit")]
		[DataMember(Order=16)]
		public System.Nullable<bool> SupportWorkflow
		
    {
			get
			
      {
				return this._SupportWorkflow;
			}
			set
			
      {
				if ((this._SupportWorkflow != value))
				
        {
					this.OnSupportWorkflowChanging(value);
					this.SendPropertyChanging();
					this._SupportWorkflow = value;
					this.SendPropertyChanged("SupportWorkflow");
					this.OnSupportWorkflowChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedApproveRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedApproveRoles", DbType="NVarChar(256)")]
		[DataMember(Order=17)]
		public string AuthorizedApproveRoles
		
    {
			get
			
      {
				return this._AuthorizedApproveRoles;
			}
			set
			
      {
				if ((this._AuthorizedApproveRoles != value))
				
        {
					this.OnAuthorizedApproveRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedApproveRoles = value;
					this.SendPropertyChanged("AuthorizedApproveRoles");
					this.OnAuthorizedApproveRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   WorkflowState : No description found!
    /// </summary>
		[Column(Storage="_WorkflowState", DbType="TinyInt")]
		[DataMember(Order=18)]
		public System.Nullable<byte> WorkflowState
		
    {
			get
			
      {
				return this._WorkflowState;
			}
			set
			
      {
				if ((this._WorkflowState != value))
				
        {
					this.OnWorkflowStateChanging(value);
					this.SendPropertyChanging();
					this._WorkflowState = value;
					this.SendPropertyChanged("WorkflowState");
					this.OnWorkflowStateChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastModified : No description found!
    /// </summary>
		[Column(Storage="_LastModified", DbType="DateTime")]
		[DataMember(Order=19)]
		public System.Nullable<System.DateTime> LastModified
		
    {
			get
			
      {
				return this._LastModified;
			}
			set
			
      {
				if ((this._LastModified != value))
				
        {
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastEditor : No description found!
    /// </summary>
		[Column(Storage="_LastEditor", DbType="NVarChar(256)")]
		[DataMember(Order=20)]
		public string LastEditor
		
    {
			get
			
      {
				return this._LastEditor;
			}
			set
			
      {
				if ((this._LastEditor != value))
				
        {
					this.OnLastEditorChanging(value);
					this.SendPropertyChanging();
					this._LastEditor = value;
					this.SendPropertyChanged("LastEditor");
					this.OnLastEditorChanged();
				}
			}
		}
		
    /// <summary>
    ///   StagingLastModified : No description found!
    /// </summary>
		[Column(Storage="_StagingLastModified", DbType="DateTime")]
		[DataMember(Order=21)]
		public System.Nullable<System.DateTime> StagingLastModified
		
    {
			get
			
      {
				return this._StagingLastModified;
			}
			set
			
      {
				if ((this._StagingLastModified != value))
				
        {
					this.OnStagingLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._StagingLastModified = value;
					this.SendPropertyChanged("StagingLastModified");
					this.OnStagingLastModifiedChanged();
				}
			}
		}
		
    /// <summary>
    ///   StagingLastEditor : No description found!
    /// </summary>
		[Column(Storage="_StagingLastEditor", DbType="NVarChar(256)")]
		[DataMember(Order=22)]
		public string StagingLastEditor
		
    {
			get
			
      {
				return this._StagingLastEditor;
			}
			set
			
      {
				if ((this._StagingLastEditor != value))
				
        {
					this.OnStagingLastEditorChanging(value);
					this.SendPropertyChanging();
					this._StagingLastEditor = value;
					this.SendPropertyChanged("StagingLastEditor");
					this.OnStagingLastEditorChanged();
				}
			}
		}
		
    /// <summary>
    ///   SupportCollapsable : No description found!
    /// </summary>
		[Column(Storage="_SupportCollapsable", DbType="Bit")]
		[DataMember(Order=23)]
		public System.Nullable<bool> SupportCollapsable
		
    {
			get
			
      {
				return this._SupportCollapsable;
			}
			set
			
      {
				if ((this._SupportCollapsable != value))
				
        {
					this.OnSupportCollapsableChanging(value);
					this.SendPropertyChanging();
					this._SupportCollapsable = value;
					this.SendPropertyChanged("SupportCollapsable");
					this.OnSupportCollapsableChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShowEveryWhere : No description found!
    /// </summary>
		[Column(Storage="_ShowEveryWhere", DbType="Bit")]
		[DataMember(Order=24)]
		public System.Nullable<bool> ShowEveryWhere
		
    {
			get
			
      {
				return this._ShowEveryWhere;
			}
			set
			
      {
				if ((this._ShowEveryWhere != value))
				
        {
					this.OnShowEveryWhereChanging(value);
					this.SendPropertyChanging();
					this._ShowEveryWhere = value;
					this.SendPropertyChanged("ShowEveryWhere");
					this.OnShowEveryWhereChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedMoveModuleRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedMoveModuleRoles", DbType="NVarChar(256)")]
		[DataMember(Order=25)]
		public string AuthorizedMoveModuleRoles
		
    {
			get
			
      {
				return this._AuthorizedMoveModuleRoles;
			}
			set
			
      {
				if ((this._AuthorizedMoveModuleRoles != value))
				
        {
					this.OnAuthorizedMoveModuleRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedMoveModuleRoles = value;
					this.SendPropertyChanged("AuthorizedMoveModuleRoles");
					this.OnAuthorizedMoveModuleRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedDeleteModuleRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedDeleteModuleRoles", DbType="NVarChar(256)")]
		[DataMember(Order=26)]
		public string AuthorizedDeleteModuleRoles
		
    {
			get
			
      {
				return this._AuthorizedDeleteModuleRoles;
			}
			set
			
      {
				if ((this._AuthorizedDeleteModuleRoles != value))
				
        {
					this.OnAuthorizedDeleteModuleRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedDeleteModuleRoles = value;
					this.SendPropertyChanged("AuthorizedDeleteModuleRoles");
					this.OnAuthorizedDeleteModuleRolesChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_ComponentModule_Modules", Storage="_Rb_ComponentModule", ThisKey="ModuleID", OtherKey="ModuleID", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		[DataMember(Order=27, EmitDefaultValue=false)]
		public Rb_ComponentModule Rb_ComponentModule
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_ComponentModule.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this._Rb_ComponentModule.Entity;
			}
			set
			
      {
				Rb_ComponentModule previousValue = this._Rb_ComponentModule.Entity;
				if (((previousValue != value) 
							|| (this._Rb_ComponentModule.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_ComponentModule.Entity = null;
						previousValue.Rb_Module = null;
					}
					this._Rb_ComponentModule.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Module = this;
					}
					this.SendPropertyChanged("Rb_ComponentModule");
				}
			}
		}
		
		[Association(Name="FK_Products_Modules", Storage="_Rb_Products", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=28, EmitDefaultValue=false)]
		public EntitySet<Rb_Product> Rb_Products
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Products.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Products;
			}
			set
			
      {
				this._Rb_Products.Assign(value);
			}
		}
		
		[Association(Name="FK_Products_st_Modules", Storage="_Rb_Products_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=29, EmitDefaultValue=false)]
		public EntitySet<Rb_Products_st> Rb_Products_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Products_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Products_sts;
			}
			set
			
      {
				this._Rb_Products_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Announcements_rb_Modules", Storage="_Rb_Announcements", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=30, EmitDefaultValue=false)]
		public EntitySet<Rb_Announcement> Rb_Announcements
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Announcements.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Announcements;
			}
			set
			
      {
				this._Rb_Announcements.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Announcements_st_rb_Modules", Storage="_Rb_Announcements_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=31, EmitDefaultValue=false)]
		public EntitySet<Rb_Announcements_st> Rb_Announcements_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Announcements_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Announcements_sts;
			}
			set
			
      {
				this._Rb_Announcements_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Articles_rb_Modules", Storage="_Rb_Articles", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=32, EmitDefaultValue=false)]
		public EntitySet<Rb_Article> Rb_Articles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Articles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Articles;
			}
			set
			
      {
				this._Rb_Articles.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Articles_st_rb_Modules", Storage="_Rb_Articles_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=33, EmitDefaultValue=false)]
		public EntitySet<Rb_Articles_st> Rb_Articles_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Articles_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Articles_sts;
			}
			set
			
      {
				this._Rb_Articles_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_BlogComments_rb_Modules", Storage="_Rb_BlogComments", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=34, EmitDefaultValue=false)]
		public EntitySet<Rb_BlogComment> Rb_BlogComments
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_BlogComments.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_BlogComments;
			}
			set
			
      {
				this._Rb_BlogComments.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Blogs_rb_Modules", Storage="_Rb_Blogs", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=35, EmitDefaultValue=false)]
		public EntitySet<Rb_Blog> Rb_Blogs
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Blogs.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Blogs;
			}
			set
			
      {
				this._Rb_Blogs.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_BlogStats_rb_Modules", Storage="_Rb_BlogStats", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=36, EmitDefaultValue=false)]
		public EntitySet<Rb_BlogStat> Rb_BlogStats
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_BlogStats.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_BlogStats;
			}
			set
			
      {
				this._Rb_BlogStats.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Contacts_rb_Modules", Storage="_Rb_Contacts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=37, EmitDefaultValue=false)]
		public EntitySet<Rb_Contact> Rb_Contacts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Contacts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Contacts;
			}
			set
			
      {
				this._Rb_Contacts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Contacts_st_rb_Modules", Storage="_Rb_Contacts_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=38, EmitDefaultValue=false)]
		public EntitySet<Rb_Contacts_st> Rb_Contacts_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Contacts_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Contacts_sts;
			}
			set
			
      {
				this._Rb_Contacts_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Discussion_rb_Modules", Storage="_Rb_Discussions", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=39, EmitDefaultValue=false)]
		public EntitySet<Rb_Discussion> Rb_Discussions
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Discussions.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Discussions;
			}
			set
			
      {
				this._Rb_Discussions.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Documents_rb_Modules", Storage="_Rb_Documents", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=40, EmitDefaultValue=false)]
		public EntitySet<Rb_Document> Rb_Documents
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Documents.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Documents;
			}
			set
			
      {
				this._Rb_Documents.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Documents_st_rb_Modules", Storage="_Rb_Documents_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=41, EmitDefaultValue=false)]
		public EntitySet<Rb_Documents_st> Rb_Documents_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Documents_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Documents_sts;
			}
			set
			
      {
				this._Rb_Documents_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_EnhancedHtml_rb_Modules", Storage="_Rb_EnhancedHtmls", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=42, EmitDefaultValue=false)]
		public EntitySet<Rb_EnhancedHtml> Rb_EnhancedHtmls
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_EnhancedHtmls.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_EnhancedHtmls;
			}
			set
			
      {
				this._Rb_EnhancedHtmls.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_EnhancedHtml_st_rb_Modules", Storage="_Rb_EnhancedHtml_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=43, EmitDefaultValue=false)]
		public EntitySet<Rb_EnhancedHtml_st> Rb_EnhancedHtml_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_EnhancedHtml_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_EnhancedHtml_sts;
			}
			set
			
      {
				this._Rb_EnhancedHtml_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_EnhancedLinks_rb_Modules", Storage="_Rb_EnhancedLinks", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=44, EmitDefaultValue=false)]
		public EntitySet<Rb_EnhancedLink> Rb_EnhancedLinks
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_EnhancedLinks.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_EnhancedLinks;
			}
			set
			
      {
				this._Rb_EnhancedLinks.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_EnhancedLinks_st_rb_Modules", Storage="_Rb_EnhancedLinks_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=45, EmitDefaultValue=false)]
		public EntitySet<Rb_EnhancedLinks_st> Rb_EnhancedLinks_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_EnhancedLinks_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_EnhancedLinks_sts;
			}
			set
			
      {
				this._Rb_EnhancedLinks_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Events_rb_Modules", Storage="_Rb_Events", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=46, EmitDefaultValue=false)]
		public EntitySet<Rb_Event> Rb_Events
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Events.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Events;
			}
			set
			
      {
				this._Rb_Events.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Events_st_rb_Modules", Storage="_Rb_Events_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=47, EmitDefaultValue=false)]
		public EntitySet<Rb_Events_st> Rb_Events_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Events_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Events_sts;
			}
			set
			
      {
				this._Rb_Events_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_HtmlText_rb_Modules", Storage="_Rb_HtmlText", ThisKey="ModuleID", OtherKey="ModuleID", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		[DataMember(Order=48, EmitDefaultValue=false)]
		public Rb_HtmlText Rb_HtmlText
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_HtmlText.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this._Rb_HtmlText.Entity;
			}
			set
			
      {
				Rb_HtmlText previousValue = this._Rb_HtmlText.Entity;
				if (((previousValue != value) 
							|| (this._Rb_HtmlText.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_HtmlText.Entity = null;
						previousValue.Rb_Module = null;
					}
					this._Rb_HtmlText.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Module = this;
					}
					this.SendPropertyChanged("Rb_HtmlText");
				}
			}
		}
		
		[Association(Name="FK_rb_HtmlText_st_rb_Modules", Storage="_Rb_HtmlText_st", ThisKey="ModuleID", OtherKey="ModuleID", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		[DataMember(Order=49, EmitDefaultValue=false)]
		public Rb_HtmlText_st Rb_HtmlText_st
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_HtmlText_st.HasLoadedOrAssignedValue == false)))
				
        {
					return null;
				}
				return this._Rb_HtmlText_st.Entity;
			}
			set
			
      {
				Rb_HtmlText_st previousValue = this._Rb_HtmlText_st.Entity;
				if (((previousValue != value) 
							|| (this._Rb_HtmlText_st.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_HtmlText_st.Entity = null;
						previousValue.Rb_Module = null;
					}
					this._Rb_HtmlText_st.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Module = this;
					}
					this.SendPropertyChanged("Rb_HtmlText_st");
				}
			}
		}
		
		[Association(Name="FK_rb_Links_rb_Modules", Storage="_Rb_Links", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=50, EmitDefaultValue=false)]
		public EntitySet<Rb_Link> Rb_Links
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Links.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Links;
			}
			set
			
      {
				this._Rb_Links.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Links_st_rb_Modules", Storage="_Rb_Links_sts", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=51, EmitDefaultValue=false)]
		public EntitySet<Rb_Links_st> Rb_Links_sts
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Links_sts.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Links_sts;
			}
			set
			
      {
				this._Rb_Links_sts.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Milestones_rb_Modules", Storage="_Rb_Milestones", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=52, EmitDefaultValue=false)]
		public EntitySet<Rb_Milestone> Rb_Milestones
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Milestones.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Milestones;
			}
			set
			
      {
				this._Rb_Milestones.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_Modules_rb_ModuleDefinitions
    /// </summary>
		[Association(Name="FK_rb_Modules_rb_ModuleDefinitions", Storage="_Rb_ModuleDefinition", ThisKey="ModuleDefID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_ModuleDefinition Rb_ModuleDefinition
		
    {
			get
			
      {
				return this._Rb_ModuleDefinition.Entity;
			}
			set
			
      {
				Rb_ModuleDefinition previousValue = this._Rb_ModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._Rb_ModuleDefinition.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_ModuleDefinition.Entity = null;
						previousValue.Rb_Modules.Remove(this);
					}
					this._Rb_ModuleDefinition.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Modules.Add(this);
						this._ModuleDefID = value.ModuleDefID;
					}
					else
					
          {
						this._ModuleDefID = default(int);
					}
					this.SendPropertyChanged("Rb_ModuleDefinition");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_Modules_rb_Pages
    /// </summary>
		[Association(Name="FK_rb_Modules_rb_Pages", Storage="_Rb_Page", ThisKey="TabID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Page Rb_Page
		
    {
			get
			
      {
				return this._Rb_Page.Entity;
			}
			set
			
      {
				Rb_Page previousValue = this._Rb_Page.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Page.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Page.Entity = null;
						previousValue.Rb_Modules.Remove(this);
					}
					this._Rb_Page.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Modules.Add(this);
						this._TabID = value.PageID;
					}
					else
					
          {
						this._TabID = default(int);
					}
					this.SendPropertyChanged("Rb_Page");
				}
			}
		}
		
		[Association(Name="FK_rb_ModuleSettings_rb_Modules", Storage="_Rb_ModuleSettings", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=53, EmitDefaultValue=false)]
		public EntitySet<Rb_ModuleSetting> Rb_ModuleSettings
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_ModuleSettings.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_ModuleSettings;
			}
			set
			
      {
				this._Rb_ModuleSettings.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Pictures_rb_Modules", Storage="_Rb_Pictures", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=54, EmitDefaultValue=false)]
		public EntitySet<Rb_Picture> Rb_Pictures
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Pictures.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Pictures;
			}
			set
			
      {
				this._Rb_Pictures.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Surveys_Modules", Storage="_Rb_Surveys", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=55, EmitDefaultValue=false)]
		public EntitySet<Rb_Survey> Rb_Surveys
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Surveys.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Surveys;
			}
			set
			
      {
				this._Rb_Surveys.Assign(value);
			}
		}
		
		[Association(Name="FK_rbBookListModules", Storage="_Rb_BookLists", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=56, EmitDefaultValue=false)]
		public EntitySet<Rb_BookList> Rb_BookLists
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_BookLists.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_BookLists;
			}
			set
			
      {
				this._Rb_BookLists.Assign(value);
			}
		}
		
		[Association(Name="FK_Tasks_Modules", Storage="_Rb_Tasks", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=57, EmitDefaultValue=false)]
		public EntitySet<Rb_Task> Rb_Tasks
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Tasks.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Tasks;
			}
			set
			
      {
				this._Rb_Tasks.Assign(value);
			}
		}
		
		[Association(Name="FK_UserDefinedFields_Modules", Storage="_Rb_UserDefinedFields", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=58, EmitDefaultValue=false)]
		public EntitySet<Rb_UserDefinedField> Rb_UserDefinedFields
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_UserDefinedFields.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_UserDefinedFields;
			}
			set
			
      {
				this._Rb_UserDefinedFields.Assign(value);
			}
		}
		
		[Association(Name="FK_UserDefinedRows_Modules", Storage="_Rb_UserDefinedRows", OtherKey="ModuleID", DeleteRule="CASCADE")]
		[DataMember(Order=59, EmitDefaultValue=false)]
		public EntitySet<Rb_UserDefinedRow> Rb_UserDefinedRows
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_UserDefinedRows.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_UserDefinedRows;
			}
			set
			
      {
				this._Rb_UserDefinedRows.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_Products(Rb_Product entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Products(Rb_Product entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Products_sts(Rb_Products_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Products_sts(Rb_Products_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Announcements(Rb_Announcement entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Announcements(Rb_Announcement entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Announcements_sts(Rb_Announcements_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Announcements_sts(Rb_Announcements_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Articles(Rb_Article entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Articles(Rb_Article entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Articles_sts(Rb_Articles_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Articles_sts(Rb_Articles_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_BlogComments(Rb_BlogComment entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_BlogComments(Rb_BlogComment entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Blogs(Rb_Blog entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Blogs(Rb_Blog entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_BlogStats(Rb_BlogStat entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_BlogStats(Rb_BlogStat entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Contacts(Rb_Contact entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Contacts(Rb_Contact entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Contacts_sts(Rb_Contacts_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Contacts_sts(Rb_Contacts_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Discussions(Rb_Discussion entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Discussions(Rb_Discussion entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Documents(Rb_Document entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Documents(Rb_Document entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Documents_sts(Rb_Documents_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Documents_sts(Rb_Documents_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_EnhancedHtmls(Rb_EnhancedHtml entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_EnhancedHtmls(Rb_EnhancedHtml entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_EnhancedHtml_sts(Rb_EnhancedHtml_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_EnhancedHtml_sts(Rb_EnhancedHtml_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_EnhancedLinks(Rb_EnhancedLink entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_EnhancedLinks(Rb_EnhancedLink entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_EnhancedLinks_sts(Rb_EnhancedLinks_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_EnhancedLinks_sts(Rb_EnhancedLinks_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Events(Rb_Event entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Events(Rb_Event entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Events_sts(Rb_Events_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Events_sts(Rb_Events_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Links(Rb_Link entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Links(Rb_Link entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Links_sts(Rb_Links_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Links_sts(Rb_Links_st entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Milestones(Rb_Milestone entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Milestones(Rb_Milestone entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_ModuleSettings(Rb_ModuleSetting entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_ModuleSettings(Rb_ModuleSetting entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Pictures(Rb_Picture entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Pictures(Rb_Picture entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Surveys(Rb_Survey entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Surveys(Rb_Survey entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_BookLists(Rb_BookList entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_BookLists(Rb_BookList entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_Tasks(Rb_Task entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_Tasks(Rb_Task entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_UserDefinedFields(Rb_UserDefinedField entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_UserDefinedFields(Rb_UserDefinedField entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void attach_Rb_UserDefinedRows(Rb_UserDefinedRow entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = this;
		}
		
		private void detach_Rb_UserDefinedRows(Rb_UserDefinedRow entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Module = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_ComponentModule = default(EntityRef<Rb_ComponentModule>);
			this._Rb_Products = new EntitySet<Rb_Product>(new Action<Rb_Product>(this.attach_Rb_Products), new Action<Rb_Product>(this.detach_Rb_Products));
			this._Rb_Products_sts = new EntitySet<Rb_Products_st>(new Action<Rb_Products_st>(this.attach_Rb_Products_sts), new Action<Rb_Products_st>(this.detach_Rb_Products_sts));
			this._Rb_Announcements = new EntitySet<Rb_Announcement>(new Action<Rb_Announcement>(this.attach_Rb_Announcements), new Action<Rb_Announcement>(this.detach_Rb_Announcements));
			this._Rb_Announcements_sts = new EntitySet<Rb_Announcements_st>(new Action<Rb_Announcements_st>(this.attach_Rb_Announcements_sts), new Action<Rb_Announcements_st>(this.detach_Rb_Announcements_sts));
			this._Rb_Articles = new EntitySet<Rb_Article>(new Action<Rb_Article>(this.attach_Rb_Articles), new Action<Rb_Article>(this.detach_Rb_Articles));
			this._Rb_Articles_sts = new EntitySet<Rb_Articles_st>(new Action<Rb_Articles_st>(this.attach_Rb_Articles_sts), new Action<Rb_Articles_st>(this.detach_Rb_Articles_sts));
			this._Rb_BlogComments = new EntitySet<Rb_BlogComment>(new Action<Rb_BlogComment>(this.attach_Rb_BlogComments), new Action<Rb_BlogComment>(this.detach_Rb_BlogComments));
			this._Rb_Blogs = new EntitySet<Rb_Blog>(new Action<Rb_Blog>(this.attach_Rb_Blogs), new Action<Rb_Blog>(this.detach_Rb_Blogs));
			this._Rb_BlogStats = new EntitySet<Rb_BlogStat>(new Action<Rb_BlogStat>(this.attach_Rb_BlogStats), new Action<Rb_BlogStat>(this.detach_Rb_BlogStats));
			this._Rb_Contacts = new EntitySet<Rb_Contact>(new Action<Rb_Contact>(this.attach_Rb_Contacts), new Action<Rb_Contact>(this.detach_Rb_Contacts));
			this._Rb_Contacts_sts = new EntitySet<Rb_Contacts_st>(new Action<Rb_Contacts_st>(this.attach_Rb_Contacts_sts), new Action<Rb_Contacts_st>(this.detach_Rb_Contacts_sts));
			this._Rb_Discussions = new EntitySet<Rb_Discussion>(new Action<Rb_Discussion>(this.attach_Rb_Discussions), new Action<Rb_Discussion>(this.detach_Rb_Discussions));
			this._Rb_Documents = new EntitySet<Rb_Document>(new Action<Rb_Document>(this.attach_Rb_Documents), new Action<Rb_Document>(this.detach_Rb_Documents));
			this._Rb_Documents_sts = new EntitySet<Rb_Documents_st>(new Action<Rb_Documents_st>(this.attach_Rb_Documents_sts), new Action<Rb_Documents_st>(this.detach_Rb_Documents_sts));
			this._Rb_EnhancedHtmls = new EntitySet<Rb_EnhancedHtml>(new Action<Rb_EnhancedHtml>(this.attach_Rb_EnhancedHtmls), new Action<Rb_EnhancedHtml>(this.detach_Rb_EnhancedHtmls));
			this._Rb_EnhancedHtml_sts = new EntitySet<Rb_EnhancedHtml_st>(new Action<Rb_EnhancedHtml_st>(this.attach_Rb_EnhancedHtml_sts), new Action<Rb_EnhancedHtml_st>(this.detach_Rb_EnhancedHtml_sts));
			this._Rb_EnhancedLinks = new EntitySet<Rb_EnhancedLink>(new Action<Rb_EnhancedLink>(this.attach_Rb_EnhancedLinks), new Action<Rb_EnhancedLink>(this.detach_Rb_EnhancedLinks));
			this._Rb_EnhancedLinks_sts = new EntitySet<Rb_EnhancedLinks_st>(new Action<Rb_EnhancedLinks_st>(this.attach_Rb_EnhancedLinks_sts), new Action<Rb_EnhancedLinks_st>(this.detach_Rb_EnhancedLinks_sts));
			this._Rb_Events = new EntitySet<Rb_Event>(new Action<Rb_Event>(this.attach_Rb_Events), new Action<Rb_Event>(this.detach_Rb_Events));
			this._Rb_Events_sts = new EntitySet<Rb_Events_st>(new Action<Rb_Events_st>(this.attach_Rb_Events_sts), new Action<Rb_Events_st>(this.detach_Rb_Events_sts));
			this._Rb_HtmlText = default(EntityRef<Rb_HtmlText>);
			this._Rb_HtmlText_st = default(EntityRef<Rb_HtmlText_st>);
			this._Rb_Links = new EntitySet<Rb_Link>(new Action<Rb_Link>(this.attach_Rb_Links), new Action<Rb_Link>(this.detach_Rb_Links));
			this._Rb_Links_sts = new EntitySet<Rb_Links_st>(new Action<Rb_Links_st>(this.attach_Rb_Links_sts), new Action<Rb_Links_st>(this.detach_Rb_Links_sts));
			this._Rb_Milestones = new EntitySet<Rb_Milestone>(new Action<Rb_Milestone>(this.attach_Rb_Milestones), new Action<Rb_Milestone>(this.detach_Rb_Milestones));
			this._Rb_ModuleDefinition = default(EntityRef<Rb_ModuleDefinition>);
			this._Rb_Page = default(EntityRef<Rb_Page>);
			this._Rb_ModuleSettings = new EntitySet<Rb_ModuleSetting>(new Action<Rb_ModuleSetting>(this.attach_Rb_ModuleSettings), new Action<Rb_ModuleSetting>(this.detach_Rb_ModuleSettings));
			this._Rb_Pictures = new EntitySet<Rb_Picture>(new Action<Rb_Picture>(this.attach_Rb_Pictures), new Action<Rb_Picture>(this.detach_Rb_Pictures));
			this._Rb_Surveys = new EntitySet<Rb_Survey>(new Action<Rb_Survey>(this.attach_Rb_Surveys), new Action<Rb_Survey>(this.detach_Rb_Surveys));
			this._Rb_BookLists = new EntitySet<Rb_BookList>(new Action<Rb_BookList>(this.attach_Rb_BookLists), new Action<Rb_BookList>(this.detach_Rb_BookLists));
			this._Rb_Tasks = new EntitySet<Rb_Task>(new Action<Rb_Task>(this.attach_Rb_Tasks), new Action<Rb_Task>(this.detach_Rb_Tasks));
			this._Rb_UserDefinedFields = new EntitySet<Rb_UserDefinedField>(new Action<Rb_UserDefinedField>(this.attach_Rb_UserDefinedFields), new Action<Rb_UserDefinedField>(this.detach_Rb_UserDefinedFields));
			this._Rb_UserDefinedRows = new EntitySet<Rb_UserDefinedRow>(new Action<Rb_UserDefinedRow>(this.attach_Rb_UserDefinedRows), new Action<Rb_UserDefinedRow>(this.detach_Rb_UserDefinedRows));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_ModuleSettings : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ModuleSettings")]
	[DataContract()]
	public partial class Rb_ModuleSetting : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		private string _SettingName;
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		private string _SettingValue;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ModuleSetting
    /// </summary>
		public Rb_ModuleSetting()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		[Column(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string SettingName
		
    {
			get
			
      {
				return this._SettingName;
			}
			set
			
      {
				if ((this._SettingName != value))
				
        {
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		[Column(Storage="_SettingValue", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SettingValue
		
    {
			get
			
      {
				return this._SettingValue;
			}
			set
			
      {
				if ((this._SettingValue != value))
				
        {
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_ModuleSettings_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_ModuleSettings_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_ModuleSettings.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_ModuleSettings.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_ModuleUserSettings : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ModuleUserSettings")]
	[DataContract()]
	public partial class Rb_ModuleUserSetting : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		private int _UserID;
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		private string _SettingName;
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		private string _SettingValue;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ModuleUserSetting
    /// </summary>
		public Rb_ModuleUserSetting()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		[Column(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SettingName
		
    {
			get
			
      {
				return this._SettingName;
			}
			set
			
      {
				if ((this._SettingName != value))
				
        {
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		[Column(Storage="_SettingValue", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string SettingValue
		
    {
			get
			
      {
				return this._SettingValue;
			}
			set
			
      {
				if ((this._SettingValue != value))
				
        {
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=5)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Monitoring : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Monitoring")]
	[DataContract()]
	public partial class Rb_Monitoring : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ID : No description found!
    /// </summary>
		private int _ID;
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		private System.Nullable<System.Guid> _UserID;
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private System.Nullable<int> _PortalID;
		
    /// <summary>
    ///   PageID : No description found!
    /// </summary>
		private System.Nullable<int> _PageID;
		
    /// <summary>
    ///   ActivityTime : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ActivityTime;
		
    /// <summary>
    ///   ActivityType : No description found!
    /// </summary>
		private string _ActivityType;
		
    /// <summary>
    ///   Referrer : No description found!
    /// </summary>
		private string _Referrer;
		
    /// <summary>
    ///   UserAgent : No description found!
    /// </summary>
		private string _UserAgent;
		
    /// <summary>
    ///   UserHostAddress : No description found!
    /// </summary>
		private string _UserHostAddress;
		
    /// <summary>
    ///   BrowserType : No description found!
    /// </summary>
		private string _BrowserType;
		
    /// <summary>
    ///   BrowserName : No description found!
    /// </summary>
		private string _BrowserName;
		
    /// <summary>
    ///   BrowserVersion : No description found!
    /// </summary>
		private string _BrowserVersion;
		
    /// <summary>
    ///   BrowserPlatform : No description found!
    /// </summary>
		private string _BrowserPlatform;
		
    /// <summary>
    ///   BrowserIsAOL : No description found!
    /// </summary>
		private System.Nullable<bool> _BrowserIsAOL;
		
    /// <summary>
    ///   UserField : No description found!
    /// </summary>
		private string _UserField;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnPageIDChanging(System.Nullable<int> value);
    partial void OnPageIDChanged();
    partial void OnActivityTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActivityTimeChanged();
    partial void OnActivityTypeChanging(string value);
    partial void OnActivityTypeChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnUserHostAddressChanging(string value);
    partial void OnUserHostAddressChanged();
    partial void OnBrowserTypeChanging(string value);
    partial void OnBrowserTypeChanged();
    partial void OnBrowserNameChanging(string value);
    partial void OnBrowserNameChanged();
    partial void OnBrowserVersionChanging(string value);
    partial void OnBrowserVersionChanged();
    partial void OnBrowserPlatformChanging(string value);
    partial void OnBrowserPlatformChanged();
    partial void OnBrowserIsAOLChanging(System.Nullable<bool> value);
    partial void OnBrowserIsAOLChanged();
    partial void OnUserFieldChanging(string value);
    partial void OnUserFieldChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Monitoring
    /// </summary>
		public Rb_Monitoring()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ID : No description found!
    /// </summary>
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		
    {
			get
			
      {
				return this._ID;
			}
			set
			
      {
				if ((this._ID != value))
				
        {
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		[Column(Storage="_UserID", DbType="UniqueIdentifier")]
		[DataMember(Order=2)]
		public System.Nullable<System.Guid> UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PageID : No description found!
    /// </summary>
		[Column(Storage="_PageID", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> PageID
		
    {
			get
			
      {
				return this._PageID;
			}
			set
			
      {
				if ((this._PageID != value))
				
        {
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ActivityTime : No description found!
    /// </summary>
		[Column(Storage="_ActivityTime", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> ActivityTime
		
    {
			get
			
      {
				return this._ActivityTime;
			}
			set
			
      {
				if ((this._ActivityTime != value))
				
        {
					this.OnActivityTimeChanging(value);
					this.SendPropertyChanging();
					this._ActivityTime = value;
					this.SendPropertyChanged("ActivityTime");
					this.OnActivityTimeChanged();
				}
			}
		}
		
    /// <summary>
    ///   ActivityType : No description found!
    /// </summary>
		[Column(Storage="_ActivityType", DbType="VarChar(50)")]
		[DataMember(Order=6)]
		public string ActivityType
		
    {
			get
			
      {
				return this._ActivityType;
			}
			set
			
      {
				if ((this._ActivityType != value))
				
        {
					this.OnActivityTypeChanging(value);
					this.SendPropertyChanging();
					this._ActivityType = value;
					this.SendPropertyChanged("ActivityType");
					this.OnActivityTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   Referrer : No description found!
    /// </summary>
		[Column(Storage="_Referrer", DbType="VarChar(255)")]
		[DataMember(Order=7)]
		public string Referrer
		
    {
			get
			
      {
				return this._Referrer;
			}
			set
			
      {
				if ((this._Referrer != value))
				
        {
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserAgent : No description found!
    /// </summary>
		[Column(Storage="_UserAgent", DbType="VarChar(100)")]
		[DataMember(Order=8)]
		public string UserAgent
		
    {
			get
			
      {
				return this._UserAgent;
			}
			set
			
      {
				if ((this._UserAgent != value))
				
        {
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserHostAddress : No description found!
    /// </summary>
		[Column(Storage="_UserHostAddress", DbType="VarChar(15)")]
		[DataMember(Order=9)]
		public string UserHostAddress
		
    {
			get
			
      {
				return this._UserHostAddress;
			}
			set
			
      {
				if ((this._UserHostAddress != value))
				
        {
					this.OnUserHostAddressChanging(value);
					this.SendPropertyChanging();
					this._UserHostAddress = value;
					this.SendPropertyChanged("UserHostAddress");
					this.OnUserHostAddressChanged();
				}
			}
		}
		
    /// <summary>
    ///   BrowserType : No description found!
    /// </summary>
		[Column(Storage="_BrowserType", DbType="VarChar(100)")]
		[DataMember(Order=10)]
		public string BrowserType
		
    {
			get
			
      {
				return this._BrowserType;
			}
			set
			
      {
				if ((this._BrowserType != value))
				
        {
					this.OnBrowserTypeChanging(value);
					this.SendPropertyChanging();
					this._BrowserType = value;
					this.SendPropertyChanged("BrowserType");
					this.OnBrowserTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   BrowserName : No description found!
    /// </summary>
		[Column(Storage="_BrowserName", DbType="VarChar(100)")]
		[DataMember(Order=11)]
		public string BrowserName
		
    {
			get
			
      {
				return this._BrowserName;
			}
			set
			
      {
				if ((this._BrowserName != value))
				
        {
					this.OnBrowserNameChanging(value);
					this.SendPropertyChanging();
					this._BrowserName = value;
					this.SendPropertyChanged("BrowserName");
					this.OnBrowserNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   BrowserVersion : No description found!
    /// </summary>
		[Column(Storage="_BrowserVersion", DbType="VarChar(100)")]
		[DataMember(Order=12)]
		public string BrowserVersion
		
    {
			get
			
      {
				return this._BrowserVersion;
			}
			set
			
      {
				if ((this._BrowserVersion != value))
				
        {
					this.OnBrowserVersionChanging(value);
					this.SendPropertyChanging();
					this._BrowserVersion = value;
					this.SendPropertyChanged("BrowserVersion");
					this.OnBrowserVersionChanged();
				}
			}
		}
		
    /// <summary>
    ///   BrowserPlatform : No description found!
    /// </summary>
		[Column(Storage="_BrowserPlatform", DbType="VarChar(100)")]
		[DataMember(Order=13)]
		public string BrowserPlatform
		
    {
			get
			
      {
				return this._BrowserPlatform;
			}
			set
			
      {
				if ((this._BrowserPlatform != value))
				
        {
					this.OnBrowserPlatformChanging(value);
					this.SendPropertyChanging();
					this._BrowserPlatform = value;
					this.SendPropertyChanged("BrowserPlatform");
					this.OnBrowserPlatformChanged();
				}
			}
		}
		
    /// <summary>
    ///   BrowserIsAOL : No description found!
    /// </summary>
		[Column(Storage="_BrowserIsAOL", DbType="Bit")]
		[DataMember(Order=14)]
		public System.Nullable<bool> BrowserIsAOL
		
    {
			get
			
      {
				return this._BrowserIsAOL;
			}
			set
			
      {
				if ((this._BrowserIsAOL != value))
				
        {
					this.OnBrowserIsAOLChanging(value);
					this.SendPropertyChanging();
					this._BrowserIsAOL = value;
					this.SendPropertyChanged("BrowserIsAOL");
					this.OnBrowserIsAOLChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserField : No description found!
    /// </summary>
		[Column(Storage="_UserField", DbType="VarChar(500)")]
		[DataMember(Order=15)]
		public string UserField
		
    {
			get
			
      {
				return this._UserField;
			}
			set
			
      {
				if ((this._UserField != value))
				
        {
					this.OnUserFieldChanging(value);
					this.SendPropertyChanging();
					this._UserField = value;
					this.SendPropertyChanged("UserField");
					this.OnUserFieldChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_ObjectTypes : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ObjectTypes")]
	[DataContract()]
	public partial class Rb_ObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ObjectTypeId : No description found!
    /// </summary>
		private System.Guid _ObjectTypeId;
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		private string _Name;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
		private EntitySet<Rb_PermissionMembership> _Rb_PermissionMemberships;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectTypeIdChanging(System.Guid value);
    partial void OnObjectTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ObjectType
    /// </summary>
		public Rb_ObjectType()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ObjectTypeId : No description found!
    /// </summary>
		[Column(Storage="_ObjectTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid ObjectTypeId
		
    {
			get
			
      {
				return this._ObjectTypeId;
			}
			set
			
      {
				if ((this._ObjectTypeId != value))
				
        {
					this.OnObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeId = value;
					this.SendPropertyChanged("ObjectTypeId");
					this.OnObjectTypeIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		[Column(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		[DataMember(Order=3)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_PermissionMemberships_rb_ObjectTypes", Storage="_Rb_PermissionMemberships", OtherKey="ObjectTypeId", DeleteRule="CASCADE")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<Rb_PermissionMembership> Rb_PermissionMemberships
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_PermissionMemberships.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_PermissionMemberships;
			}
			set
			
      {
				this._Rb_PermissionMemberships.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_PermissionMemberships(Rb_PermissionMembership entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_ObjectType = this;
		}
		
		private void detach_Rb_PermissionMemberships(Rb_PermissionMembership entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_ObjectType = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_PermissionMemberships = new EntitySet<Rb_PermissionMembership>(new Action<Rb_PermissionMembership>(this.attach_Rb_PermissionMemberships), new Action<Rb_PermissionMembership>(this.detach_Rb_PermissionMemberships));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_OrderDetails : No description found!
  /// </summary>
	[Table(Name="dbo.rb_OrderDetails")]
	[DataContract()]
	public partial class Rb_OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   OrderID : No description found!
    /// </summary>
		private string _OrderID;
		
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		private int _ProductID;
		
    /// <summary>
    ///   Quantity : No description found!
    /// </summary>
		private int _Quantity;
		
    /// <summary>
    ///   ModelName : No description found!
    /// </summary>
		private string _ModelName;
		
    /// <summary>
    ///   ModelNumber : No description found!
    /// </summary>
		private string _ModelNumber;
		
    /// <summary>
    ///   UnitPrice : No description found!
    /// </summary>
		private decimal _UnitPrice;
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		private float _Weight;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnModelNumberChanging(string value);
    partial void OnModelNumberChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnWeightChanging(float value);
    partial void OnWeightChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_OrderDetail
    /// </summary>
		public Rb_OrderDetail()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   OrderID : No description found!
    /// </summary>
		[Column(Storage="_OrderID", DbType="Char(24) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string OrderID
		
    {
			get
			
      {
				return this._OrderID;
			}
			set
			
      {
				if ((this._OrderID != value))
				
        {
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		[Column(Storage="_ProductID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Quantity : No description found!
    /// </summary>
		[Column(Storage="_Quantity", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int Quantity
		
    {
			get
			
      {
				return this._Quantity;
			}
			set
			
      {
				if ((this._Quantity != value))
				
        {
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModelName : No description found!
    /// </summary>
		[Column(Storage="_ModelName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string ModelName
		
    {
			get
			
      {
				return this._ModelName;
			}
			set
			
      {
				if ((this._ModelName != value))
				
        {
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModelNumber : No description found!
    /// </summary>
		[Column(Storage="_ModelNumber", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string ModelNumber
		
    {
			get
			
      {
				return this._ModelNumber;
			}
			set
			
      {
				if ((this._ModelNumber != value))
				
        {
					this.OnModelNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelNumber = value;
					this.SendPropertyChanged("ModelNumber");
					this.OnModelNumberChanged();
				}
			}
		}
		
    /// <summary>
    ///   UnitPrice : No description found!
    /// </summary>
		[Column(Storage="_UnitPrice", DbType="Money NOT NULL")]
		[DataMember(Order=6)]
		public decimal UnitPrice
		
    {
			get
			
      {
				return this._UnitPrice;
			}
			set
			
      {
				if ((this._UnitPrice != value))
				
        {
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		[Column(Storage="_Weight", DbType="Real NOT NULL")]
		[DataMember(Order=7)]
		public float Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=8)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Orders : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Orders")]
	[DataContract()]
	public partial class Rb_Order : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   OrderID : No description found!
    /// </summary>
		private string _OrderID;
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		private int _UserID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   TotalGoods : No description found!
    /// </summary>
		private System.Nullable<decimal> _TotalGoods;
		
    /// <summary>
    ///   TotalShipping : No description found!
    /// </summary>
		private System.Nullable<decimal> _TotalShipping;
		
    /// <summary>
    ///   TotalTaxes : No description found!
    /// </summary>
		private System.Nullable<decimal> _TotalTaxes;
		
    /// <summary>
    ///   TotalExpenses : No description found!
    /// </summary>
		private System.Nullable<decimal> _TotalExpenses;
		
    /// <summary>
    ///   TotalWeight : No description found!
    /// </summary>
		private System.Nullable<float> _TotalWeight;
		
    /// <summary>
    ///   DateCreated : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _DateCreated;
		
    /// <summary>
    ///   DateModified : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _DateModified;
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		private System.Nullable<int> _Status;
		
    /// <summary>
    ///   PaymentMethod : No description found!
    /// </summary>
		private string _PaymentMethod;
		
    /// <summary>
    ///   ShippingMethod : No description found!
    /// </summary>
		private string _ShippingMethod;
		
    /// <summary>
    ///   ShippingData : No description found!
    /// </summary>
		private string _ShippingData;
		
    /// <summary>
    ///   BillingData : No description found!
    /// </summary>
		private string _BillingData;
		
    /// <summary>
    ///   TransactionID : No description found!
    /// </summary>
		private string _TransactionID;
		
    /// <summary>
    ///   AuthCode : No description found!
    /// </summary>
		private string _AuthCode;
		
    /// <summary>
    ///   ISOCurrencySymbol : No description found!
    /// </summary>
		private string _ISOCurrencySymbol;
		
    /// <summary>
    ///   WeightUnit : No description found!
    /// </summary>
		private string _WeightUnit;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_User> _Rb_User;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTotalGoodsChanging(System.Nullable<decimal> value);
    partial void OnTotalGoodsChanged();
    partial void OnTotalShippingChanging(System.Nullable<decimal> value);
    partial void OnTotalShippingChanged();
    partial void OnTotalTaxesChanging(System.Nullable<decimal> value);
    partial void OnTotalTaxesChanged();
    partial void OnTotalExpensesChanging(System.Nullable<decimal> value);
    partial void OnTotalExpensesChanged();
    partial void OnTotalWeightChanging(System.Nullable<float> value);
    partial void OnTotalWeightChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnPaymentMethodChanging(string value);
    partial void OnPaymentMethodChanged();
    partial void OnShippingMethodChanging(string value);
    partial void OnShippingMethodChanged();
    partial void OnShippingDataChanging(string value);
    partial void OnShippingDataChanged();
    partial void OnBillingDataChanging(string value);
    partial void OnBillingDataChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnAuthCodeChanging(string value);
    partial void OnAuthCodeChanged();
    partial void OnISOCurrencySymbolChanging(string value);
    partial void OnISOCurrencySymbolChanged();
    partial void OnWeightUnitChanging(string value);
    partial void OnWeightUnitChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Order
    /// </summary>
		public Rb_Order()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   OrderID : No description found!
    /// </summary>
		[Column(Storage="_OrderID", DbType="Char(24) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string OrderID
		
    {
			get
			
      {
				return this._OrderID;
			}
			set
			
      {
				if ((this._OrderID != value))
				
        {
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					if (this._Rb_User.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   TotalGoods : No description found!
    /// </summary>
		[Column(Storage="_TotalGoods", DbType="Money")]
		[DataMember(Order=4)]
		public System.Nullable<decimal> TotalGoods
		
    {
			get
			
      {
				return this._TotalGoods;
			}
			set
			
      {
				if ((this._TotalGoods != value))
				
        {
					this.OnTotalGoodsChanging(value);
					this.SendPropertyChanging();
					this._TotalGoods = value;
					this.SendPropertyChanged("TotalGoods");
					this.OnTotalGoodsChanged();
				}
			}
		}
		
    /// <summary>
    ///   TotalShipping : No description found!
    /// </summary>
		[Column(Storage="_TotalShipping", DbType="Money")]
		[DataMember(Order=5)]
		public System.Nullable<decimal> TotalShipping
		
    {
			get
			
      {
				return this._TotalShipping;
			}
			set
			
      {
				if ((this._TotalShipping != value))
				
        {
					this.OnTotalShippingChanging(value);
					this.SendPropertyChanging();
					this._TotalShipping = value;
					this.SendPropertyChanged("TotalShipping");
					this.OnTotalShippingChanged();
				}
			}
		}
		
    /// <summary>
    ///   TotalTaxes : No description found!
    /// </summary>
		[Column(Storage="_TotalTaxes", DbType="Money")]
		[DataMember(Order=6)]
		public System.Nullable<decimal> TotalTaxes
		
    {
			get
			
      {
				return this._TotalTaxes;
			}
			set
			
      {
				if ((this._TotalTaxes != value))
				
        {
					this.OnTotalTaxesChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxes = value;
					this.SendPropertyChanged("TotalTaxes");
					this.OnTotalTaxesChanged();
				}
			}
		}
		
    /// <summary>
    ///   TotalExpenses : No description found!
    /// </summary>
		[Column(Storage="_TotalExpenses", DbType="Money")]
		[DataMember(Order=7)]
		public System.Nullable<decimal> TotalExpenses
		
    {
			get
			
      {
				return this._TotalExpenses;
			}
			set
			
      {
				if ((this._TotalExpenses != value))
				
        {
					this.OnTotalExpensesChanging(value);
					this.SendPropertyChanging();
					this._TotalExpenses = value;
					this.SendPropertyChanged("TotalExpenses");
					this.OnTotalExpensesChanged();
				}
			}
		}
		
    /// <summary>
    ///   TotalWeight : No description found!
    /// </summary>
		[Column(Storage="_TotalWeight", DbType="Real")]
		[DataMember(Order=8)]
		public System.Nullable<float> TotalWeight
		
    {
			get
			
      {
				return this._TotalWeight;
			}
			set
			
      {
				if ((this._TotalWeight != value))
				
        {
					this.OnTotalWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalWeight = value;
					this.SendPropertyChanged("TotalWeight");
					this.OnTotalWeightChanged();
				}
			}
		}
		
    /// <summary>
    ///   DateCreated : No description found!
    /// </summary>
		[Column(Storage="_DateCreated", DbType="DateTime")]
		[DataMember(Order=9)]
		public System.Nullable<System.DateTime> DateCreated
		
    {
			get
			
      {
				return this._DateCreated;
			}
			set
			
      {
				if ((this._DateCreated != value))
				
        {
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
    /// <summary>
    ///   DateModified : No description found!
    /// </summary>
		[Column(Storage="_DateModified", DbType="DateTime")]
		[DataMember(Order=10)]
		public System.Nullable<System.DateTime> DateModified
		
    {
			get
			
      {
				return this._DateModified;
			}
			set
			
      {
				if ((this._DateModified != value))
				
        {
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		[Column(Storage="_Status", DbType="Int")]
		[DataMember(Order=11)]
		public System.Nullable<int> Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
    /// <summary>
    ///   PaymentMethod : No description found!
    /// </summary>
		[Column(Storage="_PaymentMethod", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string PaymentMethod
		
    {
			get
			
      {
				return this._PaymentMethod;
			}
			set
			
      {
				if ((this._PaymentMethod != value))
				
        {
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShippingMethod : No description found!
    /// </summary>
		[Column(Storage="_ShippingMethod", DbType="NVarChar(50)")]
		[DataMember(Order=13)]
		public string ShippingMethod
		
    {
			get
			
      {
				return this._ShippingMethod;
			}
			set
			
      {
				if ((this._ShippingMethod != value))
				
        {
					this.OnShippingMethodChanging(value);
					this.SendPropertyChanging();
					this._ShippingMethod = value;
					this.SendPropertyChanged("ShippingMethod");
					this.OnShippingMethodChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShippingData : No description found!
    /// </summary>
		[Column(Storage="_ShippingData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=14)]
		public string ShippingData
		
    {
			get
			
      {
				return this._ShippingData;
			}
			set
			
      {
				if ((this._ShippingData != value))
				
        {
					this.OnShippingDataChanging(value);
					this.SendPropertyChanging();
					this._ShippingData = value;
					this.SendPropertyChanged("ShippingData");
					this.OnShippingDataChanged();
				}
			}
		}
		
    /// <summary>
    ///   BillingData : No description found!
    /// </summary>
		[Column(Storage="_BillingData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=15)]
		public string BillingData
		
    {
			get
			
      {
				return this._BillingData;
			}
			set
			
      {
				if ((this._BillingData != value))
				
        {
					this.OnBillingDataChanging(value);
					this.SendPropertyChanging();
					this._BillingData = value;
					this.SendPropertyChanged("BillingData");
					this.OnBillingDataChanged();
				}
			}
		}
		
    /// <summary>
    ///   TransactionID : No description found!
    /// </summary>
		[Column(Storage="_TransactionID", DbType="NVarChar(50)")]
		[DataMember(Order=16)]
		public string TransactionID
		
    {
			get
			
      {
				return this._TransactionID;
			}
			set
			
      {
				if ((this._TransactionID != value))
				
        {
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthCode : No description found!
    /// </summary>
		[Column(Storage="_AuthCode", DbType="NVarChar(50)")]
		[DataMember(Order=17)]
		public string AuthCode
		
    {
			get
			
      {
				return this._AuthCode;
			}
			set
			
      {
				if ((this._AuthCode != value))
				
        {
					this.OnAuthCodeChanging(value);
					this.SendPropertyChanging();
					this._AuthCode = value;
					this.SendPropertyChanged("AuthCode");
					this.OnAuthCodeChanged();
				}
			}
		}
		
    /// <summary>
    ///   ISOCurrencySymbol : No description found!
    /// </summary>
		[Column(Storage="_ISOCurrencySymbol", DbType="Char(3)")]
		[DataMember(Order=18)]
		public string ISOCurrencySymbol
		
    {
			get
			
      {
				return this._ISOCurrencySymbol;
			}
			set
			
      {
				if ((this._ISOCurrencySymbol != value))
				
        {
					this.OnISOCurrencySymbolChanging(value);
					this.SendPropertyChanging();
					this._ISOCurrencySymbol = value;
					this.SendPropertyChanged("ISOCurrencySymbol");
					this.OnISOCurrencySymbolChanged();
				}
			}
		}
		
    /// <summary>
    ///   WeightUnit : No description found!
    /// </summary>
		[Column(Storage="_WeightUnit", DbType="NVarChar(15)")]
		[DataMember(Order=19)]
		public string WeightUnit
		
    {
			get
			
      {
				return this._WeightUnit;
			}
			set
			
      {
				if ((this._WeightUnit != value))
				
        {
					this.OnWeightUnitChanging(value);
					this.SendPropertyChanging();
					this._WeightUnit = value;
					this.SendPropertyChanged("WeightUnit");
					this.OnWeightUnitChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=20)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_Orders_Users
    /// </summary>
		[Association(Name="FK_Orders_Users", Storage="_Rb_User", ThisKey="UserID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_User Rb_User
		
    {
			get
			
      {
				return this._Rb_User.Entity;
			}
			set
			
      {
				Rb_User previousValue = this._Rb_User.Entity;
				if (((previousValue != value) 
							|| (this._Rb_User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_User.Entity = null;
						previousValue.Rb_Orders.Remove(this);
					}
					this._Rb_User.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Orders.Add(this);
						this._UserID = value.UserID;
					}
					else
					
          {
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Rb_User");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_User = default(EntityRef<Rb_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Pages : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Pages")]
	[DataContract()]
	public partial class Rb_Page : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PageID : No description found!
    /// </summary>
		private int _PageID;
		
    /// <summary>
    ///   ParentPageID : No description found!
    /// </summary>
		private System.Nullable<int> _ParentPageID;
		
    /// <summary>
    ///   PageOrder : No description found!
    /// </summary>
		private int _PageOrder;
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   PageName : No description found!
    /// </summary>
		private string _PageName;
		
    /// <summary>
    ///   MobilePageName : No description found!
    /// </summary>
		private string _MobilePageName;
		
    /// <summary>
    ///   AuthorizedRoles : No description found!
    /// </summary>
		private string _AuthorizedRoles;
		
    /// <summary>
    ///   ShowMobile : No description found!
    /// </summary>
		private bool _ShowMobile;
		
    /// <summary>
    ///   PageLayout : No description found!
    /// </summary>
		private System.Nullable<int> _PageLayout;
		
    /// <summary>
    ///   PageDescription : No description found!
    /// </summary>
		private string _PageDescription;
		
		private EntitySet<Rb_Module> _Rb_Modules;
		
		private EntityRef<Rb_Page> _ParentPage;
		
		private EntitySet<Rb_Page> _Pages;
		
		private EntityRef<Rb_Portal> _Rb_Portal;
		
		private EntitySet<Rb_PageSetting> _Rb_PageSettings;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnParentPageIDChanging(System.Nullable<int> value);
    partial void OnParentPageIDChanged();
    partial void OnPageOrderChanging(int value);
    partial void OnPageOrderChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnMobilePageNameChanging(string value);
    partial void OnMobilePageNameChanged();
    partial void OnAuthorizedRolesChanging(string value);
    partial void OnAuthorizedRolesChanged();
    partial void OnShowMobileChanging(bool value);
    partial void OnShowMobileChanged();
    partial void OnPageLayoutChanging(System.Nullable<int> value);
    partial void OnPageLayoutChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Page
    /// </summary>
		public Rb_Page()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PageID : No description found!
    /// </summary>
		[Column(Storage="_PageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int PageID
		
    {
			get
			
      {
				return this._PageID;
			}
			set
			
      {
				if ((this._PageID != value))
				
        {
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ParentPageID : No description found!
    /// </summary>
		[Column(Storage="_ParentPageID", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> ParentPageID
		
    {
			get
			
      {
				return this._ParentPageID;
			}
			set
			
      {
				if ((this._ParentPageID != value))
				
        {
					if (this._ParentPage.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentPageIDChanging(value);
					this.SendPropertyChanging();
					this._ParentPageID = value;
					this.SendPropertyChanged("ParentPageID");
					this.OnParentPageIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PageOrder : No description found!
    /// </summary>
		[Column(Storage="_PageOrder", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int PageOrder
		
    {
			get
			
      {
				return this._PageOrder;
			}
			set
			
      {
				if ((this._PageOrder != value))
				
        {
					this.OnPageOrderChanging(value);
					this.SendPropertyChanging();
					this._PageOrder = value;
					this.SendPropertyChanged("PageOrder");
					this.OnPageOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					if (this._Rb_Portal.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PageName : No description found!
    /// </summary>
		[Column(Storage="_PageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string PageName
		
    {
			get
			
      {
				return this._PageName;
			}
			set
			
      {
				if ((this._PageName != value))
				
        {
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   MobilePageName : No description found!
    /// </summary>
		[Column(Storage="_MobilePageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string MobilePageName
		
    {
			get
			
      {
				return this._MobilePageName;
			}
			set
			
      {
				if ((this._MobilePageName != value))
				
        {
					this.OnMobilePageNameChanging(value);
					this.SendPropertyChanging();
					this._MobilePageName = value;
					this.SendPropertyChanged("MobilePageName");
					this.OnMobilePageNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   AuthorizedRoles : No description found!
    /// </summary>
		[Column(Storage="_AuthorizedRoles", DbType="NVarChar(512)")]
		[DataMember(Order=7)]
		public string AuthorizedRoles
		
    {
			get
			
      {
				return this._AuthorizedRoles;
			}
			set
			
      {
				if ((this._AuthorizedRoles != value))
				
        {
					this.OnAuthorizedRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedRoles = value;
					this.SendPropertyChanged("AuthorizedRoles");
					this.OnAuthorizedRolesChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShowMobile : No description found!
    /// </summary>
		[Column(Storage="_ShowMobile", DbType="Bit NOT NULL")]
		[DataMember(Order=8)]
		public bool ShowMobile
		
    {
			get
			
      {
				return this._ShowMobile;
			}
			set
			
      {
				if ((this._ShowMobile != value))
				
        {
					this.OnShowMobileChanging(value);
					this.SendPropertyChanging();
					this._ShowMobile = value;
					this.SendPropertyChanged("ShowMobile");
					this.OnShowMobileChanged();
				}
			}
		}
		
    /// <summary>
    ///   PageLayout : No description found!
    /// </summary>
		[Column(Storage="_PageLayout", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> PageLayout
		
    {
			get
			
      {
				return this._PageLayout;
			}
			set
			
      {
				if ((this._PageLayout != value))
				
        {
					this.OnPageLayoutChanging(value);
					this.SendPropertyChanging();
					this._PageLayout = value;
					this.SendPropertyChanged("PageLayout");
					this.OnPageLayoutChanged();
				}
			}
		}
		
    /// <summary>
    ///   PageDescription : No description found!
    /// </summary>
		[Column(Storage="_PageDescription", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string PageDescription
		
    {
			get
			
      {
				return this._PageDescription;
			}
			set
			
      {
				if ((this._PageDescription != value))
				
        {
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_Modules_rb_Pages", Storage="_Rb_Modules", OtherKey="TabID", DeleteRule="CASCADE")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<Rb_Module> Rb_Modules
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Modules.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Modules;
			}
			set
			
      {
				this._Rb_Modules.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_Pages_rb_Pages
    /// </summary>
		[Association(Name="FK_rb_Pages_rb_Pages", Storage="_ParentPage", ThisKey="ParentPageID", IsForeignKey=true)]
		public Rb_Page ParentPage
		
    {
			get
			
      {
				return this._ParentPage.Entity;
			}
			set
			
      {
				Rb_Page previousValue = this._ParentPage.Entity;
				if (((previousValue != value) 
							|| (this._ParentPage.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._ParentPage.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._ParentPage.Entity = value;
					if ((value != null))
					
          {
						value.Pages.Add(this);
						this._ParentPageID = value.PageID;
					}
					else
					
          {
						this._ParentPageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentPage");
				}
			}
		}
		
    /// <summary>
    ///   The set of rb_Pages for this rb_Pages.
    ///   
    ///   Referenced by foreign key: FK_rb_Pages_rb_Pages
    /// </summary>
		[Association(Name="FK_rb_Pages_rb_Pages", Storage="_Pages", OtherKey="ParentPageID", DeleteRule="NO ACTION")]
		[DataMember(Order=12, EmitDefaultValue=false)]
		public EntitySet<Rb_Page> Pages
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Pages.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Pages;
			}
			set
			
      {
				this._Pages.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_Pages_rb_Portals
    /// </summary>
		[Association(Name="FK_rb_Pages_rb_Portals", Storage="_Rb_Portal", ThisKey="PortalID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Portal Rb_Portal
		
    {
			get
			
      {
				return this._Rb_Portal.Entity;
			}
			set
			
      {
				Rb_Portal previousValue = this._Rb_Portal.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Portal.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Portal.Entity = null;
						previousValue.Rb_Pages.Remove(this);
					}
					this._Rb_Portal.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Pages.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					
          {
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Rb_Portal");
				}
			}
		}
		
		[Association(Name="FK_rb_Tabsettings_rb_Pages", Storage="_Rb_PageSettings", OtherKey="PageId", DeleteRule="CASCADE")]
		[DataMember(Order=13, EmitDefaultValue=false)]
		public EntitySet<Rb_PageSetting> Rb_PageSettings
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_PageSettings.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_PageSettings;
			}
			set
			
      {
				this._Rb_PageSettings.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_Modules(Rb_Module entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Page = this;
		}
		
		private void detach_Rb_Modules(Rb_Module entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Page = null;
		}
		
		private void attach_Pages(Rb_Page entity)
		
    {
			this.SendPropertyChanging();
			entity.ParentPage = this;
		}
		
		private void detach_Pages(Rb_Page entity)
		
    {
			this.SendPropertyChanging();
			entity.ParentPage = null;
		}
		
		private void attach_Rb_PageSettings(Rb_PageSetting entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Page = this;
		}
		
		private void detach_Rb_PageSettings(Rb_PageSetting entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Page = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_Modules = new EntitySet<Rb_Module>(new Action<Rb_Module>(this.attach_Rb_Modules), new Action<Rb_Module>(this.detach_Rb_Modules));
			this._ParentPage = default(EntityRef<Rb_Page>);
			this._Pages = new EntitySet<Rb_Page>(new Action<Rb_Page>(this.attach_Pages), new Action<Rb_Page>(this.detach_Pages));
			this._Rb_Portal = default(EntityRef<Rb_Portal>);
			this._Rb_PageSettings = new EntitySet<Rb_PageSetting>(new Action<Rb_PageSetting>(this.attach_Rb_PageSettings), new Action<Rb_PageSetting>(this.detach_Rb_PageSettings));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_PageSettings : No description found!
  /// </summary>
	[Table(Name="dbo.rb_PageSettings")]
	[DataContract()]
	public partial class Rb_PageSetting : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PageId : No description found!
    /// </summary>
		private int _PageId;
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		private string _SettingName;
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		private string _SettingValue;
		
    /// <summary>
    ///   SettingGroupId : No description found!
    /// </summary>
		private System.Nullable<int> _SettingGroupId;
		
    /// <summary>
    ///   EnglishName : No description found!
    /// </summary>
		private string _EnglishName;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   DataType : No description found!
    /// </summary>
		private string _DataType;
		
    /// <summary>
    ///   MinValue : No description found!
    /// </summary>
		private System.Nullable<int> _MinValue;
		
    /// <summary>
    ///   MaxValue : No description found!
    /// </summary>
		private System.Nullable<int> _MaxValue;
		
    /// <summary>
    ///   SettingOrder : No description found!
    /// </summary>
		private System.Nullable<int> _SettingOrder;
		
    /// <summary>
    ///   IsRequired : No description found!
    /// </summary>
		private System.Nullable<bool> _IsRequired;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Page> _Rb_Page;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnSettingGroupIdChanging(System.Nullable<int> value);
    partial void OnSettingGroupIdChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnMinValueChanging(System.Nullable<int> value);
    partial void OnMinValueChanged();
    partial void OnMaxValueChanging(System.Nullable<int> value);
    partial void OnMaxValueChanged();
    partial void OnSettingOrderChanging(System.Nullable<int> value);
    partial void OnSettingOrderChanged();
    partial void OnIsRequiredChanging(System.Nullable<bool> value);
    partial void OnIsRequiredChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_PageSetting
    /// </summary>
		public Rb_PageSetting()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PageId : No description found!
    /// </summary>
		[Column(Storage="_PageId", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int PageId
		
    {
			get
			
      {
				return this._PageId;
			}
			set
			
      {
				if ((this._PageId != value))
				
        {
					if (this._Rb_Page.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		[Column(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string SettingName
		
    {
			get
			
      {
				return this._SettingName;
			}
			set
			
      {
				if ((this._SettingName != value))
				
        {
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		[Column(Storage="_SettingValue", DbType="NVarChar(1500)")]
		[DataMember(Order=3)]
		public string SettingValue
		
    {
			get
			
      {
				return this._SettingValue;
			}
			set
			
      {
				if ((this._SettingValue != value))
				
        {
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingGroupId : No description found!
    /// </summary>
		[Column(Storage="_SettingGroupId", DbType="Int")]
		[DataMember(Order=4)]
		public System.Nullable<int> SettingGroupId
		
    {
			get
			
      {
				return this._SettingGroupId;
			}
			set
			
      {
				if ((this._SettingGroupId != value))
				
        {
					this.OnSettingGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SettingGroupId = value;
					this.SendPropertyChanged("SettingGroupId");
					this.OnSettingGroupIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   EnglishName : No description found!
    /// </summary>
		[Column(Storage="_EnglishName", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string EnglishName
		
    {
			get
			
      {
				return this._EnglishName;
			}
			set
			
      {
				if ((this._EnglishName != value))
				
        {
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NVarChar(255)")]
		[DataMember(Order=6)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   DataType : No description found!
    /// </summary>
		[Column(Storage="_DataType", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string DataType
		
    {
			get
			
      {
				return this._DataType;
			}
			set
			
      {
				if ((this._DataType != value))
				
        {
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
    /// <summary>
    ///   MinValue : No description found!
    /// </summary>
		[Column(Storage="_MinValue", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> MinValue
		
    {
			get
			
      {
				return this._MinValue;
			}
			set
			
      {
				if ((this._MinValue != value))
				
        {
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   MaxValue : No description found!
    /// </summary>
		[Column(Storage="_MaxValue", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> MaxValue
		
    {
			get
			
      {
				return this._MaxValue;
			}
			set
			
      {
				if ((this._MaxValue != value))
				
        {
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingOrder : No description found!
    /// </summary>
		[Column(Storage="_SettingOrder", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> SettingOrder
		
    {
			get
			
      {
				return this._SettingOrder;
			}
			set
			
      {
				if ((this._SettingOrder != value))
				
        {
					this.OnSettingOrderChanging(value);
					this.SendPropertyChanging();
					this._SettingOrder = value;
					this.SendPropertyChanged("SettingOrder");
					this.OnSettingOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   IsRequired : No description found!
    /// </summary>
		[Column(Storage="_IsRequired", DbType="Bit")]
		[DataMember(Order=11)]
		public System.Nullable<bool> IsRequired
		
    {
			get
			
      {
				return this._IsRequired;
			}
			set
			
      {
				if ((this._IsRequired != value))
				
        {
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=12)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Tabsettings_rb_Pages
    /// </summary>
		[Association(Name="FK_rb_Tabsettings_rb_Pages", Storage="_Rb_Page", ThisKey="PageId", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Page Rb_Page
		
    {
			get
			
      {
				return this._Rb_Page.Entity;
			}
			set
			
      {
				Rb_Page previousValue = this._Rb_Page.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Page.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Page.Entity = null;
						previousValue.Rb_PageSettings.Remove(this);
					}
					this._Rb_Page.Entity = value;
					if ((value != null))
					
          {
						value.Rb_PageSettings.Add(this);
						this._PageId = value.PageID;
					}
					else
					
          {
						this._PageId = default(int);
					}
					this.SendPropertyChanged("Rb_Page");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Page = default(EntityRef<Rb_Page>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_PermissionMemberships : No description found!
  /// </summary>
	[Table(Name="dbo.rb_PermissionMemberships")]
	[DataContract()]
	public partial class Rb_PermissionMembership : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PermissionMembershipId : No description found!
    /// </summary>
		private System.Guid _PermissionMembershipId;
		
    /// <summary>
    ///   PermissionId : No description found!
    /// </summary>
		private System.Guid _PermissionId;
		
    /// <summary>
    ///   UserOrRoleId : No description found!
    /// </summary>
		private System.Nullable<System.Guid> _UserOrRoleId;
		
    /// <summary>
    ///   ObjectId : No description found!
    /// </summary>
		private System.Guid _ObjectId;
		
    /// <summary>
    ///   ObjectTypeId : No description found!
    /// </summary>
		private System.Guid _ObjectTypeId;
		
		private EntityRef<Rb_ObjectType> _Rb_ObjectType;
		
		private EntityRef<Rb_Permission> _Rb_Permission;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionMembershipIdChanging(System.Guid value);
    partial void OnPermissionMembershipIdChanged();
    partial void OnPermissionIdChanging(System.Guid value);
    partial void OnPermissionIdChanged();
    partial void OnUserOrRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserOrRoleIdChanged();
    partial void OnObjectIdChanging(System.Guid value);
    partial void OnObjectIdChanged();
    partial void OnObjectTypeIdChanging(System.Guid value);
    partial void OnObjectTypeIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_PermissionMembership
    /// </summary>
		public Rb_PermissionMembership()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PermissionMembershipId : No description found!
    /// </summary>
		[Column(Storage="_PermissionMembershipId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid PermissionMembershipId
		
    {
			get
			
      {
				return this._PermissionMembershipId;
			}
			set
			
      {
				if ((this._PermissionMembershipId != value))
				
        {
					this.OnPermissionMembershipIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionMembershipId = value;
					this.SendPropertyChanged("PermissionMembershipId");
					this.OnPermissionMembershipIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   PermissionId : No description found!
    /// </summary>
		[Column(Storage="_PermissionId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid PermissionId
		
    {
			get
			
      {
				return this._PermissionId;
			}
			set
			
      {
				if ((this._PermissionId != value))
				
        {
					if (this._Rb_Permission.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserOrRoleId : No description found!
    /// </summary>
		[Column(Storage="_UserOrRoleId", DbType="UniqueIdentifier")]
		[DataMember(Order=3)]
		public System.Nullable<System.Guid> UserOrRoleId
		
    {
			get
			
      {
				return this._UserOrRoleId;
			}
			set
			
      {
				if ((this._UserOrRoleId != value))
				
        {
					this.OnUserOrRoleIdChanging(value);
					this.SendPropertyChanging();
					this._UserOrRoleId = value;
					this.SendPropertyChanged("UserOrRoleId");
					this.OnUserOrRoleIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   ObjectId : No description found!
    /// </summary>
		[Column(Storage="_ObjectId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=4)]
		public System.Guid ObjectId
		
    {
			get
			
      {
				return this._ObjectId;
			}
			set
			
      {
				if ((this._ObjectId != value))
				
        {
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   ObjectTypeId : No description found!
    /// </summary>
		[Column(Storage="_ObjectTypeId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=5)]
		public System.Guid ObjectTypeId
		
    {
			get
			
      {
				return this._ObjectTypeId;
			}
			set
			
      {
				if ((this._ObjectTypeId != value))
				
        {
					if (this._Rb_ObjectType.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeId = value;
					this.SendPropertyChanged("ObjectTypeId");
					this.OnObjectTypeIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_PermissionMemberships_rb_ObjectTypes
    /// </summary>
		[Association(Name="FK_rb_PermissionMemberships_rb_ObjectTypes", Storage="_Rb_ObjectType", ThisKey="ObjectTypeId", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_ObjectType Rb_ObjectType
		
    {
			get
			
      {
				return this._Rb_ObjectType.Entity;
			}
			set
			
      {
				Rb_ObjectType previousValue = this._Rb_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._Rb_ObjectType.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_ObjectType.Entity = null;
						previousValue.Rb_PermissionMemberships.Remove(this);
					}
					this._Rb_ObjectType.Entity = value;
					if ((value != null))
					
          {
						value.Rb_PermissionMemberships.Add(this);
						this._ObjectTypeId = value.ObjectTypeId;
					}
					else
					
          {
						this._ObjectTypeId = default(System.Guid);
					}
					this.SendPropertyChanged("Rb_ObjectType");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_PermissionMemberships_rb_Permissions
    /// </summary>
		[Association(Name="FK_rb_PermissionMemberships_rb_Permissions", Storage="_Rb_Permission", ThisKey="PermissionId", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Permission Rb_Permission
		
    {
			get
			
      {
				return this._Rb_Permission.Entity;
			}
			set
			
      {
				Rb_Permission previousValue = this._Rb_Permission.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Permission.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Permission.Entity = null;
						previousValue.Rb_PermissionMemberships.Remove(this);
					}
					this._Rb_Permission.Entity = value;
					if ((value != null))
					
          {
						value.Rb_PermissionMemberships.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					
          {
						this._PermissionId = default(System.Guid);
					}
					this.SendPropertyChanged("Rb_Permission");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_ObjectType = default(EntityRef<Rb_ObjectType>);
			this._Rb_Permission = default(EntityRef<Rb_Permission>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Permissions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Permissions")]
	[DataContract()]
	public partial class Rb_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PermissionId : No description found!
    /// </summary>
		private System.Guid _PermissionId;
		
    /// <summary>
    ///   PermissionName : No description found!
    /// </summary>
		private string _PermissionName;
		
    /// <summary>
    ///   PermissionDescription : No description found!
    /// </summary>
		private string _PermissionDescription;
		
		private EntitySet<Rb_PermissionMembership> _Rb_PermissionMemberships;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(System.Guid value);
    partial void OnPermissionIdChanged();
    partial void OnPermissionNameChanging(string value);
    partial void OnPermissionNameChanged();
    partial void OnPermissionDescriptionChanging(string value);
    partial void OnPermissionDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Permission
    /// </summary>
		public Rb_Permission()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PermissionId : No description found!
    /// </summary>
		[Column(Storage="_PermissionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid PermissionId
		
    {
			get
			
      {
				return this._PermissionId;
			}
			set
			
      {
				if ((this._PermissionId != value))
				
        {
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   PermissionName : No description found!
    /// </summary>
		[Column(Storage="_PermissionName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string PermissionName
		
    {
			get
			
      {
				return this._PermissionName;
			}
			set
			
      {
				if ((this._PermissionName != value))
				
        {
					this.OnPermissionNameChanging(value);
					this.SendPropertyChanging();
					this._PermissionName = value;
					this.SendPropertyChanged("PermissionName");
					this.OnPermissionNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   PermissionDescription : No description found!
    /// </summary>
		[Column(Storage="_PermissionDescription", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string PermissionDescription
		
    {
			get
			
      {
				return this._PermissionDescription;
			}
			set
			
      {
				if ((this._PermissionDescription != value))
				
        {
					this.OnPermissionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PermissionDescription = value;
					this.SendPropertyChanged("PermissionDescription");
					this.OnPermissionDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_PermissionMemberships_rb_Permissions", Storage="_Rb_PermissionMemberships", OtherKey="PermissionId", DeleteRule="CASCADE")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<Rb_PermissionMembership> Rb_PermissionMemberships
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_PermissionMemberships.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_PermissionMemberships;
			}
			set
			
      {
				this._Rb_PermissionMemberships.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_PermissionMemberships(Rb_PermissionMembership entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Permission = this;
		}
		
		private void detach_Rb_PermissionMemberships(Rb_PermissionMembership entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Permission = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_PermissionMemberships = new EntitySet<Rb_PermissionMembership>(new Action<Rb_PermissionMembership>(this.attach_Rb_PermissionMemberships), new Action<Rb_PermissionMembership>(this.detach_Rb_PermissionMemberships));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_Pictures : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Pictures")]
	[DataContract()]
	public partial class Rb_Picture : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		private int _DisplayOrder;
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		private string _MetadataXml;
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		private string _ShortDescription;
		
    /// <summary>
    ///   Keywords : No description found!
    /// </summary>
		private string _Keywords;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnMetadataXmlChanging(string value);
    partial void OnMetadataXmlChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Picture
    /// </summary>
		public Rb_Picture()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		[Column(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		[Column(Storage="_MetadataXml", DbType="NVarChar(3000)")]
		[DataMember(Order=4)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this.OnMetadataXmlChanging(value);
					this.SendPropertyChanging();
					this._MetadataXml = value;
					this.SendPropertyChanged("MetadataXml");
					this.OnMetadataXmlChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		[Column(Storage="_ShortDescription", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string ShortDescription
		
    {
			get
			
      {
				return this._ShortDescription;
			}
			set
			
      {
				if ((this._ShortDescription != value))
				
        {
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Keywords : No description found!
    /// </summary>
		[Column(Storage="_Keywords", DbType="NVarChar(256)")]
		[DataMember(Order=6)]
		public string Keywords
		
    {
			get
			
      {
				return this._Keywords;
			}
			set
			
      {
				if ((this._Keywords != value))
				
        {
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Pictures_rb_Modules
    /// </summary>
		[Association(Name="FK_rb_Pictures_rb_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Pictures.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Pictures.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Pictures_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Pictures_st")]
	[DataContract()]
	public partial class Rb_Pictures_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		private int _DisplayOrder;
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		private string _MetadataXml;
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		private string _ShortDescription;
		
    /// <summary>
    ///   Keywords : No description found!
    /// </summary>
		private string _Keywords;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnMetadataXmlChanging(string value);
    partial void OnMetadataXmlChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Pictures_st
    /// </summary>
		public Rb_Pictures_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		[Column(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		[Column(Storage="_MetadataXml", DbType="NVarChar(3000)")]
		[DataMember(Order=4)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this.OnMetadataXmlChanging(value);
					this.SendPropertyChanging();
					this._MetadataXml = value;
					this.SendPropertyChanged("MetadataXml");
					this.OnMetadataXmlChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		[Column(Storage="_ShortDescription", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string ShortDescription
		
    {
			get
			
      {
				return this._ShortDescription;
			}
			set
			
      {
				if ((this._ShortDescription != value))
				
        {
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Keywords : No description found!
    /// </summary>
		[Column(Storage="_Keywords", DbType="NVarChar(256)")]
		[DataMember(Order=6)]
		public string Keywords
		
    {
			get
			
      {
				return this._Keywords;
			}
			set
			
      {
				if ((this._Keywords != value))
				
        {
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=7)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=8)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Portals : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Portals")]
	[DataContract()]
	public partial class Rb_Portal : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   PortalAlias : No description found!
    /// </summary>
		private string _PortalAlias;
		
    /// <summary>
    ///   PortalName : No description found!
    /// </summary>
		private string _PortalName;
		
    /// <summary>
    ///   PortalPath : No description found!
    /// </summary>
		private string _PortalPath;
		
    /// <summary>
    ///   AlwaysShowEditButton : No description found!
    /// </summary>
		private bool _AlwaysShowEditButton;
		
		private EntitySet<Rb_Page> _Rb_Pages;
		
		private EntitySet<Rb_PortalSetting> _Rb_PortalSettings;
		
		private EntitySet<Rb_Role> _Rb_Roles;
		
		private EntitySet<Rb_User> _Rb_Users;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnPortalAliasChanging(string value);
    partial void OnPortalAliasChanged();
    partial void OnPortalNameChanging(string value);
    partial void OnPortalNameChanged();
    partial void OnPortalPathChanging(string value);
    partial void OnPortalPathChanged();
    partial void OnAlwaysShowEditButtonChanging(bool value);
    partial void OnAlwaysShowEditButtonChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Portal
    /// </summary>
		public Rb_Portal()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalAlias : No description found!
    /// </summary>
		[Column(Storage="_PortalAlias", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string PortalAlias
		
    {
			get
			
      {
				return this._PortalAlias;
			}
			set
			
      {
				if ((this._PortalAlias != value))
				
        {
					this.OnPortalAliasChanging(value);
					this.SendPropertyChanging();
					this._PortalAlias = value;
					this.SendPropertyChanged("PortalAlias");
					this.OnPortalAliasChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalName : No description found!
    /// </summary>
		[Column(Storage="_PortalName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string PortalName
		
    {
			get
			
      {
				return this._PortalName;
			}
			set
			
      {
				if ((this._PortalName != value))
				
        {
					this.OnPortalNameChanging(value);
					this.SendPropertyChanging();
					this._PortalName = value;
					this.SendPropertyChanged("PortalName");
					this.OnPortalNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalPath : No description found!
    /// </summary>
		[Column(Storage="_PortalPath", DbType="NVarChar(128)")]
		[DataMember(Order=4)]
		public string PortalPath
		
    {
			get
			
      {
				return this._PortalPath;
			}
			set
			
      {
				if ((this._PortalPath != value))
				
        {
					this.OnPortalPathChanging(value);
					this.SendPropertyChanging();
					this._PortalPath = value;
					this.SendPropertyChanged("PortalPath");
					this.OnPortalPathChanged();
				}
			}
		}
		
    /// <summary>
    ///   AlwaysShowEditButton : No description found!
    /// </summary>
		[Column(Storage="_AlwaysShowEditButton", DbType="Bit NOT NULL")]
		[DataMember(Order=5)]
		public bool AlwaysShowEditButton
		
    {
			get
			
      {
				return this._AlwaysShowEditButton;
			}
			set
			
      {
				if ((this._AlwaysShowEditButton != value))
				
        {
					this.OnAlwaysShowEditButtonChanging(value);
					this.SendPropertyChanging();
					this._AlwaysShowEditButton = value;
					this.SendPropertyChanged("AlwaysShowEditButton");
					this.OnAlwaysShowEditButtonChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_Pages_rb_Portals", Storage="_Rb_Pages", OtherKey="PortalID", DeleteRule="CASCADE")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<Rb_Page> Rb_Pages
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Pages.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Pages;
			}
			set
			
      {
				this._Rb_Pages.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_PortalSettings_rb_Portals", Storage="_Rb_PortalSettings", OtherKey="PortalID", DeleteRule="CASCADE")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<Rb_PortalSetting> Rb_PortalSettings
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_PortalSettings.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_PortalSettings;
			}
			set
			
      {
				this._Rb_PortalSettings.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Roles_rb_Portals", Storage="_Rb_Roles", OtherKey="PortalID", DeleteRule="CASCADE")]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public EntitySet<Rb_Role> Rb_Roles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Roles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Roles;
			}
			set
			
      {
				this._Rb_Roles.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_Users_rb_Portals", Storage="_Rb_Users", OtherKey="PortalID", DeleteRule="CASCADE")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<Rb_User> Rb_Users
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Users.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Users;
			}
			set
			
      {
				this._Rb_Users.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_Pages(Rb_Page entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = this;
		}
		
		private void detach_Rb_Pages(Rb_Page entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = null;
		}
		
		private void attach_Rb_PortalSettings(Rb_PortalSetting entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = this;
		}
		
		private void detach_Rb_PortalSettings(Rb_PortalSetting entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = null;
		}
		
		private void attach_Rb_Roles(Rb_Role entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = this;
		}
		
		private void detach_Rb_Roles(Rb_Role entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = null;
		}
		
		private void attach_Rb_Users(Rb_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = this;
		}
		
		private void detach_Rb_Users(Rb_User entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Portal = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_Pages = new EntitySet<Rb_Page>(new Action<Rb_Page>(this.attach_Rb_Pages), new Action<Rb_Page>(this.detach_Rb_Pages));
			this._Rb_PortalSettings = new EntitySet<Rb_PortalSetting>(new Action<Rb_PortalSetting>(this.attach_Rb_PortalSettings), new Action<Rb_PortalSetting>(this.detach_Rb_PortalSettings));
			this._Rb_Roles = new EntitySet<Rb_Role>(new Action<Rb_Role>(this.attach_Rb_Roles), new Action<Rb_Role>(this.detach_Rb_Roles));
			this._Rb_Users = new EntitySet<Rb_User>(new Action<Rb_User>(this.attach_Rb_Users), new Action<Rb_User>(this.detach_Rb_Users));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_PortalSettings : No description found!
  /// </summary>
	[Table(Name="dbo.rb_PortalSettings")]
	[DataContract()]
	public partial class Rb_PortalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		private string _SettingName;
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		private string _SettingValue;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Portal> _Rb_Portal;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_PortalSetting
    /// </summary>
		public Rb_PortalSetting()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					if (this._Rb_Portal.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingName : No description found!
    /// </summary>
		[Column(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string SettingName
		
    {
			get
			
      {
				return this._SettingName;
			}
			set
			
      {
				if ((this._SettingName != value))
				
        {
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingValue : No description found!
    /// </summary>
		[Column(Storage="_SettingValue", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SettingValue
		
    {
			get
			
      {
				return this._SettingValue;
			}
			set
			
      {
				if ((this._SettingValue != value))
				
        {
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_PortalSettings_rb_Portals
    /// </summary>
		[Association(Name="FK_rb_PortalSettings_rb_Portals", Storage="_Rb_Portal", ThisKey="PortalID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Portal Rb_Portal
		
    {
			get
			
      {
				return this._Rb_Portal.Entity;
			}
			set
			
      {
				Rb_Portal previousValue = this._Rb_Portal.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Portal.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Portal.Entity = null;
						previousValue.Rb_PortalSettings.Remove(this);
					}
					this._Rb_Portal.Entity = value;
					if ((value != null))
					
          {
						value.Rb_PortalSettings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					
          {
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Rb_Portal");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Portal = default(EntityRef<Rb_Portal>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Products : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Products")]
	[DataContract()]
	public partial class Rb_Product : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		private int _ProductID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CategoryID : No description found!
    /// </summary>
		private int _CategoryID;
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		private int _DisplayOrder;
		
    /// <summary>
    ///   ModelNumber : No description found!
    /// </summary>
		private string _ModelNumber;
		
    /// <summary>
    ///   ModelName : No description found!
    /// </summary>
		private string _ModelName;
		
    /// <summary>
    ///   UnitPrice : No description found!
    /// </summary>
		private decimal _UnitPrice;
		
    /// <summary>
    ///   FeaturedItem : No description found!
    /// </summary>
		private bool _FeaturedItem;
		
    /// <summary>
    ///   LongDescription : No description found!
    /// </summary>
		private string _LongDescription;
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		private string _ShortDescription;
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		private string _MetadataXml;
		
    /// <summary>
    ///   TaxRate : No description found!
    /// </summary>
		private System.Nullable<double> _TaxRate;
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		private System.Nullable<double> _Weight;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnModelNumberChanging(string value);
    partial void OnModelNumberChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnFeaturedItemChanging(bool value);
    partial void OnFeaturedItemChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnMetadataXmlChanging(string value);
    partial void OnMetadataXmlChanged();
    partial void OnTaxRateChanging(System.Nullable<double> value);
    partial void OnTaxRateChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Product
    /// </summary>
		public Rb_Product()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		[Column(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CategoryID : No description found!
    /// </summary>
		[Column(Storage="_CategoryID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int CategoryID
		
    {
			get
			
      {
				return this._CategoryID;
			}
			set
			
      {
				if ((this._CategoryID != value))
				
        {
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		[Column(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModelNumber : No description found!
    /// </summary>
		[Column(Storage="_ModelNumber", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string ModelNumber
		
    {
			get
			
      {
				return this._ModelNumber;
			}
			set
			
      {
				if ((this._ModelNumber != value))
				
        {
					this.OnModelNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelNumber = value;
					this.SendPropertyChanged("ModelNumber");
					this.OnModelNumberChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModelName : No description found!
    /// </summary>
		[Column(Storage="_ModelName", DbType="NVarChar(256)")]
		[DataMember(Order=6)]
		public string ModelName
		
    {
			get
			
      {
				return this._ModelName;
			}
			set
			
      {
				if ((this._ModelName != value))
				
        {
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   UnitPrice : No description found!
    /// </summary>
		[Column(Storage="_UnitPrice", DbType="Money NOT NULL")]
		[DataMember(Order=7)]
		public decimal UnitPrice
		
    {
			get
			
      {
				return this._UnitPrice;
			}
			set
			
      {
				if ((this._UnitPrice != value))
				
        {
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
    /// <summary>
    ///   FeaturedItem : No description found!
    /// </summary>
		[Column(Storage="_FeaturedItem", DbType="Bit NOT NULL")]
		[DataMember(Order=8)]
		public bool FeaturedItem
		
    {
			get
			
      {
				return this._FeaturedItem;
			}
			set
			
      {
				if ((this._FeaturedItem != value))
				
        {
					this.OnFeaturedItemChanging(value);
					this.SendPropertyChanging();
					this._FeaturedItem = value;
					this.SendPropertyChanged("FeaturedItem");
					this.OnFeaturedItemChanged();
				}
			}
		}
		
    /// <summary>
    ///   LongDescription : No description found!
    /// </summary>
		[Column(Storage="_LongDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=9)]
		public string LongDescription
		
    {
			get
			
      {
				return this._LongDescription;
			}
			set
			
      {
				if ((this._LongDescription != value))
				
        {
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		[Column(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=10)]
		public string ShortDescription
		
    {
			get
			
      {
				return this._ShortDescription;
			}
			set
			
      {
				if ((this._ShortDescription != value))
				
        {
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		[Column(Storage="_MetadataXml", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=11)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this.OnMetadataXmlChanging(value);
					this.SendPropertyChanging();
					this._MetadataXml = value;
					this.SendPropertyChanged("MetadataXml");
					this.OnMetadataXmlChanged();
				}
			}
		}
		
    /// <summary>
    ///   TaxRate : No description found!
    /// </summary>
		[Column(Storage="_TaxRate", DbType="Float")]
		[DataMember(Order=12)]
		public System.Nullable<double> TaxRate
		
    {
			get
			
      {
				return this._TaxRate;
			}
			set
			
      {
				if ((this._TaxRate != value))
				
        {
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		[Column(Storage="_Weight", DbType="Float")]
		[DataMember(Order=13)]
		public System.Nullable<double> Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_Products_Modules
    /// </summary>
		[Association(Name="FK_Products_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Products.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Products.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Products_st : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Products_st")]
	[DataContract()]
	public partial class Rb_Products_st : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		private int _ProductID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CategoryID : No description found!
    /// </summary>
		private int _CategoryID;
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		private int _DisplayOrder;
		
    /// <summary>
    ///   ModelNumber : No description found!
    /// </summary>
		private string _ModelNumber;
		
    /// <summary>
    ///   ModelName : No description found!
    /// </summary>
		private string _ModelName;
		
    /// <summary>
    ///   UnitPrice : No description found!
    /// </summary>
		private decimal _UnitPrice;
		
    /// <summary>
    ///   FeaturedItem : No description found!
    /// </summary>
		private bool _FeaturedItem;
		
    /// <summary>
    ///   LongDescription : No description found!
    /// </summary>
		private string _LongDescription;
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		private string _ShortDescription;
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		private string _MetadataXml;
		
    /// <summary>
    ///   TaxRate : No description found!
    /// </summary>
		private System.Nullable<double> _TaxRate;
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		private System.Nullable<double> _Weight;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnModelNumberChanging(string value);
    partial void OnModelNumberChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnFeaturedItemChanging(bool value);
    partial void OnFeaturedItemChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnMetadataXmlChanging(string value);
    partial void OnMetadataXmlChanged();
    partial void OnTaxRateChanging(System.Nullable<double> value);
    partial void OnTaxRateChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Products_st
    /// </summary>
		public Rb_Products_st()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ProductID : No description found!
    /// </summary>
		[Column(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ProductID
		
    {
			get
			
      {
				return this._ProductID;
			}
			set
			
      {
				if ((this._ProductID != value))
				
        {
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CategoryID : No description found!
    /// </summary>
		[Column(Storage="_CategoryID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int CategoryID
		
    {
			get
			
      {
				return this._CategoryID;
			}
			set
			
      {
				if ((this._CategoryID != value))
				
        {
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DisplayOrder : No description found!
    /// </summary>
		[Column(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int DisplayOrder
		
    {
			get
			
      {
				return this._DisplayOrder;
			}
			set
			
      {
				if ((this._DisplayOrder != value))
				
        {
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModelNumber : No description found!
    /// </summary>
		[Column(Storage="_ModelNumber", DbType="NVarChar(256)")]
		[DataMember(Order=5)]
		public string ModelNumber
		
    {
			get
			
      {
				return this._ModelNumber;
			}
			set
			
      {
				if ((this._ModelNumber != value))
				
        {
					this.OnModelNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelNumber = value;
					this.SendPropertyChanged("ModelNumber");
					this.OnModelNumberChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModelName : No description found!
    /// </summary>
		[Column(Storage="_ModelName", DbType="NVarChar(256)")]
		[DataMember(Order=6)]
		public string ModelName
		
    {
			get
			
      {
				return this._ModelName;
			}
			set
			
      {
				if ((this._ModelName != value))
				
        {
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   UnitPrice : No description found!
    /// </summary>
		[Column(Storage="_UnitPrice", DbType="Money NOT NULL")]
		[DataMember(Order=7)]
		public decimal UnitPrice
		
    {
			get
			
      {
				return this._UnitPrice;
			}
			set
			
      {
				if ((this._UnitPrice != value))
				
        {
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
    /// <summary>
    ///   FeaturedItem : No description found!
    /// </summary>
		[Column(Storage="_FeaturedItem", DbType="Bit NOT NULL")]
		[DataMember(Order=8)]
		public bool FeaturedItem
		
    {
			get
			
      {
				return this._FeaturedItem;
			}
			set
			
      {
				if ((this._FeaturedItem != value))
				
        {
					this.OnFeaturedItemChanging(value);
					this.SendPropertyChanging();
					this._FeaturedItem = value;
					this.SendPropertyChanged("FeaturedItem");
					this.OnFeaturedItemChanged();
				}
			}
		}
		
    /// <summary>
    ///   LongDescription : No description found!
    /// </summary>
		[Column(Storage="_LongDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=9)]
		public string LongDescription
		
    {
			get
			
      {
				return this._LongDescription;
			}
			set
			
      {
				if ((this._LongDescription != value))
				
        {
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShortDescription : No description found!
    /// </summary>
		[Column(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=10)]
		public string ShortDescription
		
    {
			get
			
      {
				return this._ShortDescription;
			}
			set
			
      {
				if ((this._ShortDescription != value))
				
        {
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   MetadataXml : No description found!
    /// </summary>
		[Column(Storage="_MetadataXml", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=11)]
		public string MetadataXml
		
    {
			get
			
      {
				return this._MetadataXml;
			}
			set
			
      {
				if ((this._MetadataXml != value))
				
        {
					this.OnMetadataXmlChanging(value);
					this.SendPropertyChanging();
					this._MetadataXml = value;
					this.SendPropertyChanged("MetadataXml");
					this.OnMetadataXmlChanged();
				}
			}
		}
		
    /// <summary>
    ///   TaxRate : No description found!
    /// </summary>
		[Column(Storage="_TaxRate", DbType="Float")]
		[DataMember(Order=12)]
		public System.Nullable<double> TaxRate
		
    {
			get
			
      {
				return this._TaxRate;
			}
			set
			
      {
				if ((this._TaxRate != value))
				
        {
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		[Column(Storage="_Weight", DbType="Float")]
		[DataMember(Order=13)]
		public System.Nullable<double> Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_Products_st_Modules
    /// </summary>
		[Association(Name="FK_Products_st_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Products_sts.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Products_sts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Recycler : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Recycler")]
	[DataContract()]
	public partial class Rb_Recycler : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   DateDeleted : No description found!
    /// </summary>
		private System.DateTime _DateDeleted;
		
    /// <summary>
    ///   DeletedBy : No description found!
    /// </summary>
		private string _DeletedBy;
		
    /// <summary>
    ///   OriginalTab : No description found!
    /// </summary>
		private int _OriginalTab;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnDateDeletedChanging(System.DateTime value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnOriginalTabChanging(int value);
    partial void OnOriginalTabChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Recycler
    /// </summary>
		public Rb_Recycler()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   DateDeleted : No description found!
    /// </summary>
		[Column(Storage="_DateDeleted", DbType="DateTime NOT NULL")]
		[DataMember(Order=2)]
		public System.DateTime DateDeleted
		
    {
			get
			
      {
				return this._DateDeleted;
			}
			set
			
      {
				if ((this._DateDeleted != value))
				
        {
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
    /// <summary>
    ///   DeletedBy : No description found!
    /// </summary>
		[Column(Storage="_DeletedBy", DbType="NVarChar(250)")]
		[DataMember(Order=3)]
		public string DeletedBy
		
    {
			get
			
      {
				return this._DeletedBy;
			}
			set
			
      {
				if ((this._DeletedBy != value))
				
        {
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
    /// <summary>
    ///   OriginalTab : No description found!
    /// </summary>
		[Column(Storage="_OriginalTab", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int OriginalTab
		
    {
			get
			
      {
				return this._OriginalTab;
			}
			set
			
      {
				if ((this._OriginalTab != value))
				
        {
					this.OnOriginalTabChanging(value);
					this.SendPropertyChanging();
					this._OriginalTab = value;
					this.SendPropertyChanged("OriginalTab");
					this.OnOriginalTabChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=5)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Roles : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Roles")]
	[DataContract()]
	public partial class Rb_Role : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   RoleID : No description found!
    /// </summary>
		private int _RoleID;
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   RoleName : No description found!
    /// </summary>
		private string _RoleName;
		
    /// <summary>
    ///   Permission : No description found!
    /// </summary>
		private System.Nullable<byte> _Permission;
		
		private EntityRef<Rb_Portal> _Rb_Portal;
		
		private EntitySet<Rb_UserRole> _Rb_UserRoles;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnPermissionChanging(System.Nullable<byte> value);
    partial void OnPermissionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Role
    /// </summary>
		public Rb_Role()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   RoleID : No description found!
    /// </summary>
		[Column(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int RoleID
		
    {
			get
			
      {
				return this._RoleID;
			}
			set
			
      {
				if ((this._RoleID != value))
				
        {
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					if (this._Rb_Portal.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   RoleName : No description found!
    /// </summary>
		[Column(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string RoleName
		
    {
			get
			
      {
				return this._RoleName;
			}
			set
			
      {
				if ((this._RoleName != value))
				
        {
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Permission : No description found!
    /// </summary>
		[Column(Storage="_Permission", DbType="TinyInt")]
		[DataMember(Order=4)]
		public System.Nullable<byte> Permission
		
    {
			get
			
      {
				return this._Permission;
			}
			set
			
      {
				if ((this._Permission != value))
				
        {
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_Roles_rb_Portals
    /// </summary>
		[Association(Name="FK_rb_Roles_rb_Portals", Storage="_Rb_Portal", ThisKey="PortalID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Portal Rb_Portal
		
    {
			get
			
      {
				return this._Rb_Portal.Entity;
			}
			set
			
      {
				Rb_Portal previousValue = this._Rb_Portal.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Portal.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Portal.Entity = null;
						previousValue.Rb_Roles.Remove(this);
					}
					this._Rb_Portal.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Roles.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					
          {
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Rb_Portal");
				}
			}
		}
		
		[Association(Name="FK_rb_UserRoles_rb_Roles", Storage="_Rb_UserRoles", OtherKey="RoleID", DeleteRule="NO ACTION")]
		[DataMember(Order=5, EmitDefaultValue=false)]
		public EntitySet<Rb_UserRole> Rb_UserRoles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_UserRoles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_UserRoles;
			}
			set
			
      {
				this._Rb_UserRoles.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_UserRoles(Rb_UserRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Role = this;
		}
		
		private void detach_Rb_UserRoles(Rb_UserRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Role = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_Portal = default(EntityRef<Rb_Portal>);
			this._Rb_UserRoles = new EntitySet<Rb_UserRole>(new Action<Rb_UserRole>(this.attach_Rb_UserRoles), new Action<Rb_UserRole>(this.detach_Rb_UserRoles));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_SettingGroups : No description found!
  /// </summary>
	[Table(Name="dbo.rb_SettingGroups")]
	[DataContract()]
	public partial class Rb_SettingGroup : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   SettingGroupId : No description found!
    /// </summary>
		private int _SettingGroupId;
		
    /// <summary>
    ///   SettingGroupName : No description found!
    /// </summary>
		private string _SettingGroupName;
		
    /// <summary>
    ///   SettingGroupDescription : No description found!
    /// </summary>
		private string _SettingGroupDescription;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingGroupIdChanging(int value);
    partial void OnSettingGroupIdChanged();
    partial void OnSettingGroupNameChanging(string value);
    partial void OnSettingGroupNameChanged();
    partial void OnSettingGroupDescriptionChanging(string value);
    partial void OnSettingGroupDescriptionChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_SettingGroup
    /// </summary>
		public Rb_SettingGroup()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   SettingGroupId : No description found!
    /// </summary>
		[Column(Storage="_SettingGroupId", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int SettingGroupId
		
    {
			get
			
      {
				return this._SettingGroupId;
			}
			set
			
      {
				if ((this._SettingGroupId != value))
				
        {
					this.OnSettingGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SettingGroupId = value;
					this.SendPropertyChanged("SettingGroupId");
					this.OnSettingGroupIdChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingGroupName : No description found!
    /// </summary>
		[Column(Storage="_SettingGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string SettingGroupName
		
    {
			get
			
      {
				return this._SettingGroupName;
			}
			set
			
      {
				if ((this._SettingGroupName != value))
				
        {
					this.OnSettingGroupNameChanging(value);
					this.SendPropertyChanging();
					this._SettingGroupName = value;
					this.SendPropertyChanged("SettingGroupName");
					this.OnSettingGroupNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   SettingGroupDescription : No description found!
    /// </summary>
		[Column(Storage="_SettingGroupDescription", DbType="NVarChar(255)")]
		[DataMember(Order=3)]
		public string SettingGroupDescription
		
    {
			get
			
      {
				return this._SettingGroupDescription;
			}
			set
			
      {
				if ((this._SettingGroupDescription != value))
				
        {
					this.OnSettingGroupDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SettingGroupDescription = value;
					this.SendPropertyChanged("SettingGroupDescription");
					this.OnSettingGroupDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_ShipPrices : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ShipPrices")]
	[DataContract()]
	public partial class Rb_ShipPrice : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ShipPriceID : No description found!
    /// </summary>
		private int _ShipPriceID;
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		private double _Weight;
		
    /// <summary>
    ///   Price : No description found!
    /// </summary>
		private decimal _Price;
		
		private EntitySet<Rb_ShipZone> _Rb_ShipZones;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipPriceIDChanging(int value);
    partial void OnShipPriceIDChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ShipPrice
    /// </summary>
		public Rb_ShipPrice()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ShipPriceID : No description found!
    /// </summary>
		[Column(Storage="_ShipPriceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ShipPriceID
		
    {
			get
			
      {
				return this._ShipPriceID;
			}
			set
			
      {
				if ((this._ShipPriceID != value))
				
        {
					this.OnShipPriceIDChanging(value);
					this.SendPropertyChanging();
					this._ShipPriceID = value;
					this.SendPropertyChanged("ShipPriceID");
					this.OnShipPriceIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Weight : No description found!
    /// </summary>
		[Column(Storage="_Weight", DbType="Float NOT NULL")]
		[DataMember(Order=2)]
		public double Weight
		
    {
			get
			
      {
				return this._Weight;
			}
			set
			
      {
				if ((this._Weight != value))
				
        {
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
    /// <summary>
    ///   Price : No description found!
    /// </summary>
		[Column(Storage="_Price", DbType="Money NOT NULL")]
		[DataMember(Order=3)]
		public decimal Price
		
    {
			get
			
      {
				return this._Price;
			}
			set
			
      {
				if ((this._Price != value))
				
        {
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_ShipZones_rb_ShipPrices", Storage="_Rb_ShipZones", OtherKey="ShipPriceID", DeleteRule="NO ACTION")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<Rb_ShipZone> Rb_ShipZones
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_ShipZones.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_ShipZones;
			}
			set
			
      {
				this._Rb_ShipZones.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_ShipZones(Rb_ShipZone entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_ShipPrice = this;
		}
		
		private void detach_Rb_ShipZones(Rb_ShipZone entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_ShipPrice = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_ShipZones = new EntitySet<Rb_ShipZone>(new Action<Rb_ShipZone>(this.attach_Rb_ShipZones), new Action<Rb_ShipZone>(this.detach_Rb_ShipZones));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_ShipZones : No description found!
  /// </summary>
	[Table(Name="dbo.rb_ShipZones")]
	[DataContract()]
	public partial class Rb_ShipZone : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		private string _CountryID;
		
    /// <summary>
    ///   ShipPriceID : No description found!
    /// </summary>
		private int _ShipPriceID;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Country> _Rb_Country;
		
		private EntityRef<Rb_ShipPrice> _Rb_ShipPrice;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(string value);
    partial void OnCountryIDChanged();
    partial void OnShipPriceIDChanging(int value);
    partial void OnShipPriceIDChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_ShipZone
    /// </summary>
		public Rb_ShipZone()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		[Column(Storage="_CountryID", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					if (this._Rb_Country.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ShipPriceID : No description found!
    /// </summary>
		[Column(Storage="_ShipPriceID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ShipPriceID
		
    {
			get
			
      {
				return this._ShipPriceID;
			}
			set
			
      {
				if ((this._ShipPriceID != value))
				
        {
					if (this._Rb_ShipPrice.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipPriceIDChanging(value);
					this.SendPropertyChanging();
					this._ShipPriceID = value;
					this.SendPropertyChanged("ShipPriceID");
					this.OnShipPriceIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=3)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_ShipZones_rb_Countries
    /// </summary>
		[Association(Name="FK_rb_ShipZones_rb_Countries", Storage="_Rb_Country", ThisKey="CountryID", IsForeignKey=true)]
		public Rb_Country Rb_Country
		
    {
			get
			
      {
				return this._Rb_Country.Entity;
			}
			set
			
      {
				Rb_Country previousValue = this._Rb_Country.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Country.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Country.Entity = null;
						previousValue.Rb_ShipZones.Remove(this);
					}
					this._Rb_Country.Entity = value;
					if ((value != null))
					
          {
						value.Rb_ShipZones.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					
          {
						this._CountryID = default(string);
					}
					this.SendPropertyChanged("Rb_Country");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_ShipZones_rb_ShipPrices
    /// </summary>
		[Association(Name="FK_rb_ShipZones_rb_ShipPrices", Storage="_Rb_ShipPrice", ThisKey="ShipPriceID", IsForeignKey=true)]
		public Rb_ShipPrice Rb_ShipPrice
		
    {
			get
			
      {
				return this._Rb_ShipPrice.Entity;
			}
			set
			
      {
				Rb_ShipPrice previousValue = this._Rb_ShipPrice.Entity;
				if (((previousValue != value) 
							|| (this._Rb_ShipPrice.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_ShipPrice.Entity = null;
						previousValue.Rb_ShipZones.Remove(this);
					}
					this._Rb_ShipPrice.Entity = value;
					if ((value != null))
					
          {
						value.Rb_ShipZones.Add(this);
						this._ShipPriceID = value.ShipPriceID;
					}
					else
					
          {
						this._ShipPriceID = default(int);
					}
					this.SendPropertyChanged("Rb_ShipPrice");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Country = default(EntityRef<Rb_Country>);
			this._Rb_ShipPrice = default(EntityRef<Rb_ShipPrice>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_SolutionModuleDefinitions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_SolutionModuleDefinitions")]
	[DataContract()]
	public partial class Rb_SolutionModuleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   SolutionModDefID : No description found!
    /// </summary>
		private int _SolutionModDefID;
		
    /// <summary>
    ///   GeneralModDefID : No description found!
    /// </summary>
		private System.Guid _GeneralModDefID;
		
    /// <summary>
    ///   SolutionsID : No description found!
    /// </summary>
		private int _SolutionsID;
		
		private EntityRef<Rb_GeneralModuleDefinition> _Rb_GeneralModuleDefinition;
		
		private EntityRef<Rb_Solution> _Rb_Solution;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolutionModDefIDChanging(int value);
    partial void OnSolutionModDefIDChanged();
    partial void OnGeneralModDefIDChanging(System.Guid value);
    partial void OnGeneralModDefIDChanged();
    partial void OnSolutionsIDChanging(int value);
    partial void OnSolutionsIDChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_SolutionModuleDefinition
    /// </summary>
		public Rb_SolutionModuleDefinition()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   SolutionModDefID : No description found!
    /// </summary>
		[Column(Storage="_SolutionModDefID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int SolutionModDefID
		
    {
			get
			
      {
				return this._SolutionModDefID;
			}
			set
			
      {
				if ((this._SolutionModDefID != value))
				
        {
					this.OnSolutionModDefIDChanging(value);
					this.SendPropertyChanging();
					this._SolutionModDefID = value;
					this.SendPropertyChanged("SolutionModDefID");
					this.OnSolutionModDefIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   GeneralModDefID : No description found!
    /// </summary>
		[Column(Storage="_GeneralModDefID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid GeneralModDefID
		
    {
			get
			
      {
				return this._GeneralModDefID;
			}
			set
			
      {
				if ((this._GeneralModDefID != value))
				
        {
					if (this._Rb_GeneralModuleDefinition.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneralModDefIDChanging(value);
					this.SendPropertyChanging();
					this._GeneralModDefID = value;
					this.SendPropertyChanged("GeneralModDefID");
					this.OnGeneralModDefIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SolutionsID : No description found!
    /// </summary>
		[Column(Storage="_SolutionsID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int SolutionsID
		
    {
			get
			
      {
				return this._SolutionsID;
			}
			set
			
      {
				if ((this._SolutionsID != value))
				
        {
					if (this._Rb_Solution.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSolutionsIDChanging(value);
					this.SendPropertyChanging();
					this._SolutionsID = value;
					this.SendPropertyChanged("SolutionsID");
					this.OnSolutionsIDChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_SolutionModuleDefinitions_rb_GeneralModuleDefinitions
    /// </summary>
		[Association(Name="FK_rb_SolutionModuleDefinitions_rb_GeneralModuleDefinitions", Storage="_Rb_GeneralModuleDefinition", ThisKey="GeneralModDefID", IsForeignKey=true)]
		public Rb_GeneralModuleDefinition Rb_GeneralModuleDefinition
		
    {
			get
			
      {
				return this._Rb_GeneralModuleDefinition.Entity;
			}
			set
			
      {
				Rb_GeneralModuleDefinition previousValue = this._Rb_GeneralModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._Rb_GeneralModuleDefinition.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_GeneralModuleDefinition.Entity = null;
						previousValue.Rb_SolutionModuleDefinitions.Remove(this);
					}
					this._Rb_GeneralModuleDefinition.Entity = value;
					if ((value != null))
					
          {
						value.Rb_SolutionModuleDefinitions.Add(this);
						this._GeneralModDefID = value.GeneralModDefID;
					}
					else
					
          {
						this._GeneralModDefID = default(System.Guid);
					}
					this.SendPropertyChanged("Rb_GeneralModuleDefinition");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_SolutionModuleDefintions_rb_Solutions
    /// </summary>
		[Association(Name="FK_rb_SolutionModuleDefintions_rb_Solutions", Storage="_Rb_Solution", ThisKey="SolutionsID", IsForeignKey=true)]
		public Rb_Solution Rb_Solution
		
    {
			get
			
      {
				return this._Rb_Solution.Entity;
			}
			set
			
      {
				Rb_Solution previousValue = this._Rb_Solution.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Solution.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Solution.Entity = null;
						previousValue.Rb_SolutionModuleDefinitions.Remove(this);
					}
					this._Rb_Solution.Entity = value;
					if ((value != null))
					
          {
						value.Rb_SolutionModuleDefinitions.Add(this);
						this._SolutionsID = value.SolutionsID;
					}
					else
					
          {
						this._SolutionsID = default(int);
					}
					this.SendPropertyChanged("Rb_Solution");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_GeneralModuleDefinition = default(EntityRef<Rb_GeneralModuleDefinition>);
			this._Rb_Solution = default(EntityRef<Rb_Solution>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Solutions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Solutions")]
	[DataContract()]
	public partial class Rb_Solution : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   SolutionsID : No description found!
    /// </summary>
		private int _SolutionsID;
		
    /// <summary>
    ///   SolDescription : No description found!
    /// </summary>
		private string _SolDescription;
		
		private EntitySet<Rb_SolutionModuleDefinition> _Rb_SolutionModuleDefinitions;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolutionsIDChanging(int value);
    partial void OnSolutionsIDChanged();
    partial void OnSolDescriptionChanging(string value);
    partial void OnSolDescriptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Solution
    /// </summary>
		public Rb_Solution()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   SolutionsID : No description found!
    /// </summary>
		[Column(Storage="_SolutionsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int SolutionsID
		
    {
			get
			
      {
				return this._SolutionsID;
			}
			set
			
      {
				if ((this._SolutionsID != value))
				
        {
					this.OnSolutionsIDChanging(value);
					this.SendPropertyChanging();
					this._SolutionsID = value;
					this.SendPropertyChanged("SolutionsID");
					this.OnSolutionsIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SolDescription : No description found!
    /// </summary>
		[Column(Storage="_SolDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string SolDescription
		
    {
			get
			
      {
				return this._SolDescription;
			}
			set
			
      {
				if ((this._SolDescription != value))
				
        {
					this.OnSolDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SolDescription = value;
					this.SendPropertyChanged("SolDescription");
					this.OnSolDescriptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_SolutionModuleDefintions_rb_Solutions", Storage="_Rb_SolutionModuleDefinitions", OtherKey="SolutionsID", DeleteRule="NO ACTION")]
		[DataMember(Order=3, EmitDefaultValue=false)]
		public EntitySet<Rb_SolutionModuleDefinition> Rb_SolutionModuleDefinitions
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_SolutionModuleDefinitions.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_SolutionModuleDefinitions;
			}
			set
			
      {
				this._Rb_SolutionModuleDefinitions.Assign(value);
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_SolutionModuleDefinitions(Rb_SolutionModuleDefinition entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Solution = this;
		}
		
		private void detach_Rb_SolutionModuleDefinitions(Rb_SolutionModuleDefinition entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Solution = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_SolutionModuleDefinitions = new EntitySet<Rb_SolutionModuleDefinition>(new Action<Rb_SolutionModuleDefinition>(this.attach_Rb_SolutionModuleDefinitions), new Action<Rb_SolutionModuleDefinition>(this.detach_Rb_SolutionModuleDefinitions));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_States : No description found!
  /// </summary>
	[Table(Name="dbo.rb_States")]
	[DataContract()]
	public partial class Rb_State : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   StateID : No description found!
    /// </summary>
		private int _StateID;
		
    /// <summary>
    ///   NeutralName : No description found!
    /// </summary>
		private string _NeutralName;
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		private string _CountryID;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Country> _Rb_Country;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnNeutralNameChanging(string value);
    partial void OnNeutralNameChanged();
    partial void OnCountryIDChanging(string value);
    partial void OnCountryIDChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_State
    /// </summary>
		public Rb_State()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   StateID : No description found!
    /// </summary>
		[Column(Storage="_StateID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int StateID
		
    {
			get
			
      {
				return this._StateID;
			}
			set
			
      {
				if ((this._StateID != value))
				
        {
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   NeutralName : No description found!
    /// </summary>
		[Column(Storage="_NeutralName", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string NeutralName
		
    {
			get
			
      {
				return this._NeutralName;
			}
			set
			
      {
				if ((this._NeutralName != value))
				
        {
					this.OnNeutralNameChanging(value);
					this.SendPropertyChanging();
					this._NeutralName = value;
					this.SendPropertyChanged("NeutralName");
					this.OnNeutralNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		[Column(Storage="_CountryID", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					if (this._Rb_Country.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_States_rb_Countries
    /// </summary>
		[Association(Name="FK_rb_States_rb_Countries", Storage="_Rb_Country", ThisKey="CountryID", IsForeignKey=true)]
		public Rb_Country Rb_Country
		
    {
			get
			
      {
				return this._Rb_Country.Entity;
			}
			set
			
      {
				Rb_Country previousValue = this._Rb_Country.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Country.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Country.Entity = null;
						previousValue.Rb_States.Remove(this);
					}
					this._Rb_Country.Entity = value;
					if ((value != null))
					
          {
						value.Rb_States.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					
          {
						this._CountryID = default(string);
					}
					this.SendPropertyChanged("Rb_Country");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Country = default(EntityRef<Rb_Country>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_SurveyAnswers : No description found!
  /// </summary>
	[Table(Name="dbo.rb_SurveyAnswers")]
	[DataContract()]
	public partial class Rb_SurveyAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   AnswerID : No description found!
    /// </summary>
		private int _AnswerID;
		
    /// <summary>
    ///   SurveyID : No description found!
    /// </summary>
		private int _SurveyID;
		
    /// <summary>
    ///   QuestionID : No description found!
    /// </summary>
		private int _QuestionID;
		
    /// <summary>
    ///   OptionID : No description found!
    /// </summary>
		private int _OptionID;
		
		private EntityRef<Rb_Survey> _Rb_Survey;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerIDChanging(int value);
    partial void OnAnswerIDChanged();
    partial void OnSurveyIDChanging(int value);
    partial void OnSurveyIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_SurveyAnswer
    /// </summary>
		public Rb_SurveyAnswer()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   AnswerID : No description found!
    /// </summary>
		[Column(Storage="_AnswerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int AnswerID
		
    {
			get
			
      {
				return this._AnswerID;
			}
			set
			
      {
				if ((this._AnswerID != value))
				
        {
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SurveyID : No description found!
    /// </summary>
		[Column(Storage="_SurveyID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					if (this._Rb_Survey.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurveyIDChanging(value);
					this.SendPropertyChanging();
					this._SurveyID = value;
					this.SendPropertyChanged("SurveyID");
					this.OnSurveyIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   QuestionID : No description found!
    /// </summary>
		[Column(Storage="_QuestionID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int QuestionID
		
    {
			get
			
      {
				return this._QuestionID;
			}
			set
			
      {
				if ((this._QuestionID != value))
				
        {
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   OptionID : No description found!
    /// </summary>
		[Column(Storage="_OptionID", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int OptionID
		
    {
			get
			
      {
				return this._OptionID;
			}
			set
			
      {
				if ((this._OptionID != value))
				
        {
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_SurveyAnswers_rb_Surveys
    /// </summary>
		[Association(Name="FK_rb_SurveyAnswers_rb_Surveys", Storage="_Rb_Survey", ThisKey="SurveyID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Survey Rb_Survey
		
    {
			get
			
      {
				return this._Rb_Survey.Entity;
			}
			set
			
      {
				Rb_Survey previousValue = this._Rb_Survey.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Survey.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Survey.Entity = null;
						previousValue.Rb_SurveyAnswers.Remove(this);
					}
					this._Rb_Survey.Entity = value;
					if ((value != null))
					
          {
						value.Rb_SurveyAnswers.Add(this);
						this._SurveyID = value.SurveyID;
					}
					else
					
          {
						this._SurveyID = default(int);
					}
					this.SendPropertyChanged("Rb_Survey");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Survey = default(EntityRef<Rb_Survey>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_SurveyOptions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_SurveyOptions")]
	[DataContract()]
	public partial class Rb_SurveyOption : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   OptionID : No description found!
    /// </summary>
		private int _OptionID;
		
    /// <summary>
    ///   QuestionID : No description found!
    /// </summary>
		private int _QuestionID;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private int _ViewOrder;
		
    /// <summary>
    ///   OptionDesc : No description found!
    /// </summary>
		private string _OptionDesc;
		
		private EntityRef<Rb_SurveyQuestion> _Rb_SurveyQuestion;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnOptionDescChanging(string value);
    partial void OnOptionDescChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_SurveyOption
    /// </summary>
		public Rb_SurveyOption()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   OptionID : No description found!
    /// </summary>
		[Column(Storage="_OptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int OptionID
		
    {
			get
			
      {
				return this._OptionID;
			}
			set
			
      {
				if ((this._OptionID != value))
				
        {
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   QuestionID : No description found!
    /// </summary>
		[Column(Storage="_QuestionID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int QuestionID
		
    {
			get
			
      {
				return this._QuestionID;
			}
			set
			
      {
				if ((this._QuestionID != value))
				
        {
					if (this._Rb_SurveyQuestion.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   OptionDesc : No description found!
    /// </summary>
		[Column(Storage="_OptionDesc", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string OptionDesc
		
    {
			get
			
      {
				return this._OptionDesc;
			}
			set
			
      {
				if ((this._OptionDesc != value))
				
        {
					this.OnOptionDescChanging(value);
					this.SendPropertyChanging();
					this._OptionDesc = value;
					this.SendPropertyChanged("OptionDesc");
					this.OnOptionDescChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_SurveyOptions_rb_SurveyQuestions
    /// </summary>
		[Association(Name="FK_rb_SurveyOptions_rb_SurveyQuestions", Storage="_Rb_SurveyQuestion", ThisKey="QuestionID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_SurveyQuestion Rb_SurveyQuestion
		
    {
			get
			
      {
				return this._Rb_SurveyQuestion.Entity;
			}
			set
			
      {
				Rb_SurveyQuestion previousValue = this._Rb_SurveyQuestion.Entity;
				if (((previousValue != value) 
							|| (this._Rb_SurveyQuestion.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_SurveyQuestion.Entity = null;
						previousValue.Rb_SurveyOptions.Remove(this);
					}
					this._Rb_SurveyQuestion.Entity = value;
					if ((value != null))
					
          {
						value.Rb_SurveyOptions.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					
          {
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Rb_SurveyQuestion");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_SurveyQuestion = default(EntityRef<Rb_SurveyQuestion>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_SurveyQuestions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_SurveyQuestions")]
	[DataContract()]
	public partial class Rb_SurveyQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   QuestionID : No description found!
    /// </summary>
		private int _QuestionID;
		
    /// <summary>
    ///   SurveyID : No description found!
    /// </summary>
		private int _SurveyID;
		
    /// <summary>
    ///   Question : No description found!
    /// </summary>
		private string _Question;
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		private int _ViewOrder;
		
    /// <summary>
    ///   TypeOption : No description found!
    /// </summary>
		private string _TypeOption;
		
		private EntitySet<Rb_SurveyOption> _Rb_SurveyOptions;
		
		private EntityRef<Rb_Survey> _Rb_Survey;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnSurveyIDChanging(int value);
    partial void OnSurveyIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnTypeOptionChanging(string value);
    partial void OnTypeOptionChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_SurveyQuestion
    /// </summary>
		public Rb_SurveyQuestion()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   QuestionID : No description found!
    /// </summary>
		[Column(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int QuestionID
		
    {
			get
			
      {
				return this._QuestionID;
			}
			set
			
      {
				if ((this._QuestionID != value))
				
        {
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SurveyID : No description found!
    /// </summary>
		[Column(Storage="_SurveyID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					if (this._Rb_Survey.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurveyIDChanging(value);
					this.SendPropertyChanging();
					this._SurveyID = value;
					this.SendPropertyChanged("SurveyID");
					this.OnSurveyIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Question : No description found!
    /// </summary>
		[Column(Storage="_Question", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Question
		
    {
			get
			
      {
				return this._Question;
			}
			set
			
      {
				if ((this._Question != value))
				
        {
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ViewOrder : No description found!
    /// </summary>
		[Column(Storage="_ViewOrder", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int ViewOrder
		
    {
			get
			
      {
				return this._ViewOrder;
			}
			set
			
      {
				if ((this._ViewOrder != value))
				
        {
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   TypeOption : No description found!
    /// </summary>
		[Column(Storage="_TypeOption", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string TypeOption
		
    {
			get
			
      {
				return this._TypeOption;
			}
			set
			
      {
				if ((this._TypeOption != value))
				
        {
					this.OnTypeOptionChanging(value);
					this.SendPropertyChanging();
					this._TypeOption = value;
					this.SendPropertyChanged("TypeOption");
					this.OnTypeOptionChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_SurveyOptions_rb_SurveyQuestions", Storage="_Rb_SurveyOptions", OtherKey="QuestionID", DeleteRule="CASCADE")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<Rb_SurveyOption> Rb_SurveyOptions
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_SurveyOptions.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_SurveyOptions;
			}
			set
			
      {
				this._Rb_SurveyOptions.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_SurveyQuestions_rb_Surveys
    /// </summary>
		[Association(Name="FK_rb_SurveyQuestions_rb_Surveys", Storage="_Rb_Survey", ThisKey="SurveyID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Survey Rb_Survey
		
    {
			get
			
      {
				return this._Rb_Survey.Entity;
			}
			set
			
      {
				Rb_Survey previousValue = this._Rb_Survey.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Survey.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Survey.Entity = null;
						previousValue.Rb_SurveyQuestions.Remove(this);
					}
					this._Rb_Survey.Entity = value;
					if ((value != null))
					
          {
						value.Rb_SurveyQuestions.Add(this);
						this._SurveyID = value.SurveyID;
					}
					else
					
          {
						this._SurveyID = default(int);
					}
					this.SendPropertyChanged("Rb_Survey");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_SurveyOptions(Rb_SurveyOption entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_SurveyQuestion = this;
		}
		
		private void detach_Rb_SurveyOptions(Rb_SurveyOption entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_SurveyQuestion = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_SurveyOptions = new EntitySet<Rb_SurveyOption>(new Action<Rb_SurveyOption>(this.attach_Rb_SurveyOptions), new Action<Rb_SurveyOption>(this.detach_Rb_SurveyOptions));
			this._Rb_Survey = default(EntityRef<Rb_Survey>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_Surveys : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Surveys")]
	[DataContract()]
	public partial class Rb_Survey : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   SurveyID : No description found!
    /// </summary>
		private int _SurveyID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   SurveyDesc : No description found!
    /// </summary>
		private string _SurveyDesc;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.DateTime _CreatedDate;
		
		private EntitySet<Rb_SurveyAnswer> _Rb_SurveyAnswers;
		
		private EntitySet<Rb_SurveyQuestion> _Rb_SurveyQuestions;
		
		private EntityRef<Rb_Module> _Rb_Module;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSurveyIDChanging(int value);
    partial void OnSurveyIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnSurveyDescChanging(string value);
    partial void OnSurveyDescChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Survey
    /// </summary>
		public Rb_Survey()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   SurveyID : No description found!
    /// </summary>
		[Column(Storage="_SurveyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int SurveyID
		
    {
			get
			
      {
				return this._SurveyID;
			}
			set
			
      {
				if ((this._SurveyID != value))
				
        {
					this.OnSurveyIDChanging(value);
					this.SendPropertyChanging();
					this._SurveyID = value;
					this.SendPropertyChanged("SurveyID");
					this.OnSurveyIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   SurveyDesc : No description found!
    /// </summary>
		[Column(Storage="_SurveyDesc", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string SurveyDesc
		
    {
			get
			
      {
				return this._SurveyDesc;
			}
			set
			
      {
				if ((this._SurveyDesc != value))
				
        {
					this.OnSurveyDescChanging(value);
					this.SendPropertyChanging();
					this._SurveyDesc = value;
					this.SendPropertyChanged("SurveyDesc");
					this.OnSurveyDescChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[DataMember(Order=5)]
		public System.DateTime CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_rb_SurveyAnswers_rb_Surveys", Storage="_Rb_SurveyAnswers", OtherKey="SurveyID", DeleteRule="CASCADE")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<Rb_SurveyAnswer> Rb_SurveyAnswers
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_SurveyAnswers.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_SurveyAnswers;
			}
			set
			
      {
				this._Rb_SurveyAnswers.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_SurveyQuestions_rb_Surveys", Storage="_Rb_SurveyQuestions", OtherKey="SurveyID", DeleteRule="CASCADE")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<Rb_SurveyQuestion> Rb_SurveyQuestions
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_SurveyQuestions.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_SurveyQuestions;
			}
			set
			
      {
				this._Rb_SurveyQuestions.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_Surveys_Modules
    /// </summary>
		[Association(Name="FK_rb_Surveys_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Surveys.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Surveys.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_SurveyAnswers(Rb_SurveyAnswer entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Survey = this;
		}
		
		private void detach_Rb_SurveyAnswers(Rb_SurveyAnswer entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Survey = null;
		}
		
		private void attach_Rb_SurveyQuestions(Rb_SurveyQuestion entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Survey = this;
		}
		
		private void detach_Rb_SurveyQuestions(Rb_SurveyQuestion entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_Survey = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_SurveyAnswers = new EntitySet<Rb_SurveyAnswer>(new Action<Rb_SurveyAnswer>(this.attach_Rb_SurveyAnswers), new Action<Rb_SurveyAnswer>(this.detach_Rb_SurveyAnswers));
			this._Rb_SurveyQuestions = new EntitySet<Rb_SurveyQuestion>(new Action<Rb_SurveyQuestion>(this.attach_Rb_SurveyQuestions), new Action<Rb_SurveyQuestion>(this.detach_Rb_SurveyQuestions));
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_Tasks : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Tasks")]
	[DataContract()]
	public partial class Rb_Task : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		private int _ItemID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		private string _CreatedByUser;
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _CreatedDate;
		
    /// <summary>
    ///   ModifiedByUser : No description found!
    /// </summary>
		private string _ModifiedByUser;
		
    /// <summary>
    ///   ModifiedDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    /// <summary>
    ///   AssignedTo : No description found!
    /// </summary>
		private string _AssignedTo;
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		private string _Title;
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		private string _Description;
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		private string _Status;
		
    /// <summary>
    ///   Priority : No description found!
    /// </summary>
		private string _Priority;
		
    /// <summary>
    ///   PercentComplete : No description found!
    /// </summary>
		private System.Nullable<int> _PercentComplete;
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _StartDate;
		
    /// <summary>
    ///   DueDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _DueDate;
		
		private EntityRef<Rb_Module> _Rb_Module;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByUserChanging(string value);
    partial void OnModifiedByUserChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAssignedToChanging(string value);
    partial void OnAssignedToChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnPercentCompleteChanging(System.Nullable<int> value);
    partial void OnPercentCompleteChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Task
    /// </summary>
		public Rb_Task()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   ItemID : No description found!
    /// </summary>
		[Column(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ItemID
		
    {
			get
			
      {
				return this._ItemID;
			}
			set
			
      {
				if ((this._ItemID != value))
				
        {
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedByUser : No description found!
    /// </summary>
		[Column(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=3)]
		public string CreatedByUser
		
    {
			get
			
      {
				return this._CreatedByUser;
			}
			set
			
      {
				if ((this._CreatedByUser != value))
				
        {
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   CreatedDate : No description found!
    /// </summary>
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		
    {
			get
			
      {
				return this._CreatedDate;
			}
			set
			
      {
				if ((this._CreatedDate != value))
				
        {
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModifiedByUser : No description found!
    /// </summary>
		[Column(Storage="_ModifiedByUser", DbType="NVarChar(100)")]
		[DataMember(Order=5)]
		public string ModifiedByUser
		
    {
			get
			
      {
				return this._ModifiedByUser;
			}
			set
			
      {
				if ((this._ModifiedByUser != value))
				
        {
					this.OnModifiedByUserChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUser = value;
					this.SendPropertyChanged("ModifiedByUser");
					this.OnModifiedByUserChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModifiedDate : No description found!
    /// </summary>
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> ModifiedDate
		
    {
			get
			
      {
				return this._ModifiedDate;
			}
			set
			
      {
				if ((this._ModifiedDate != value))
				
        {
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   AssignedTo : No description found!
    /// </summary>
		[Column(Storage="_AssignedTo", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string AssignedTo
		
    {
			get
			
      {
				return this._AssignedTo;
			}
			set
			
      {
				if ((this._AssignedTo != value))
				
        {
					this.OnAssignedToChanging(value);
					this.SendPropertyChanging();
					this._AssignedTo = value;
					this.SendPropertyChanged("AssignedTo");
					this.OnAssignedToChanged();
				}
			}
		}
		
    /// <summary>
    ///   Title : No description found!
    /// </summary>
		[Column(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string Title
		
    {
			get
			
      {
				return this._Title;
			}
			set
			
      {
				if ((this._Title != value))
				
        {
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Description : No description found!
    /// </summary>
		[Column(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=9)]
		public string Description
		
    {
			get
			
      {
				return this._Description;
			}
			set
			
      {
				if ((this._Description != value))
				
        {
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
    /// <summary>
    ///   Status : No description found!
    /// </summary>
		[Column(Storage="_Status", DbType="NVarChar(20)")]
		[DataMember(Order=10)]
		public string Status
		
    {
			get
			
      {
				return this._Status;
			}
			set
			
      {
				if ((this._Status != value))
				
        {
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
    /// <summary>
    ///   Priority : No description found!
    /// </summary>
		[Column(Storage="_Priority", DbType="NVarChar(20)")]
		[DataMember(Order=11)]
		public string Priority
		
    {
			get
			
      {
				return this._Priority;
			}
			set
			
      {
				if ((this._Priority != value))
				
        {
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
    /// <summary>
    ///   PercentComplete : No description found!
    /// </summary>
		[Column(Storage="_PercentComplete", DbType="Int")]
		[DataMember(Order=12)]
		public System.Nullable<int> PercentComplete
		
    {
			get
			
      {
				return this._PercentComplete;
			}
			set
			
      {
				if ((this._PercentComplete != value))
				
        {
					this.OnPercentCompleteChanging(value);
					this.SendPropertyChanging();
					this._PercentComplete = value;
					this.SendPropertyChanged("PercentComplete");
					this.OnPercentCompleteChanged();
				}
			}
		}
		
    /// <summary>
    ///   StartDate : No description found!
    /// </summary>
		[Column(Storage="_StartDate", DbType="DateTime")]
		[DataMember(Order=13)]
		public System.Nullable<System.DateTime> StartDate
		
    {
			get
			
      {
				return this._StartDate;
			}
			set
			
      {
				if ((this._StartDate != value))
				
        {
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   DueDate : No description found!
    /// </summary>
		[Column(Storage="_DueDate", DbType="DateTime")]
		[DataMember(Order=14)]
		public System.Nullable<System.DateTime> DueDate
		
    {
			get
			
      {
				return this._DueDate;
			}
			set
			
      {
				if ((this._DueDate != value))
				
        {
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_Tasks_Modules
    /// </summary>
		[Association(Name="FK_Tasks_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_Tasks.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Tasks.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_UserDefinedData : No description found!
  /// </summary>
	[Table(Name="dbo.rb_UserDefinedData")]
	[DataContract()]
	public partial class Rb_UserDefinedData : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserDefinedDataID : No description found!
    /// </summary>
		private int _UserDefinedDataID;
		
    /// <summary>
    ///   UserDefinedFieldID : No description found!
    /// </summary>
		private int _UserDefinedFieldID;
		
    /// <summary>
    ///   UserDefinedRowID : No description found!
    /// </summary>
		private int _UserDefinedRowID;
		
    /// <summary>
    ///   FieldValue : No description found!
    /// </summary>
		private string _FieldValue;
		
		private EntityRef<Rb_UserDefinedField> _Rb_UserDefinedField;
		
		private EntityRef<Rb_UserDefinedRow> _Rb_UserDefinedRow;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserDefinedDataIDChanging(int value);
    partial void OnUserDefinedDataIDChanged();
    partial void OnUserDefinedFieldIDChanging(int value);
    partial void OnUserDefinedFieldIDChanged();
    partial void OnUserDefinedRowIDChanging(int value);
    partial void OnUserDefinedRowIDChanged();
    partial void OnFieldValueChanging(string value);
    partial void OnFieldValueChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_UserDefinedData
    /// </summary>
		public Rb_UserDefinedData()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserDefinedDataID : No description found!
    /// </summary>
		[Column(Storage="_UserDefinedDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int UserDefinedDataID
		
    {
			get
			
      {
				return this._UserDefinedDataID;
			}
			set
			
      {
				if ((this._UserDefinedDataID != value))
				
        {
					this.OnUserDefinedDataIDChanging(value);
					this.SendPropertyChanging();
					this._UserDefinedDataID = value;
					this.SendPropertyChanged("UserDefinedDataID");
					this.OnUserDefinedDataIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserDefinedFieldID : No description found!
    /// </summary>
		[Column(Storage="_UserDefinedFieldID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int UserDefinedFieldID
		
    {
			get
			
      {
				return this._UserDefinedFieldID;
			}
			set
			
      {
				if ((this._UserDefinedFieldID != value))
				
        {
					if (this._Rb_UserDefinedField.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserDefinedFieldIDChanging(value);
					this.SendPropertyChanging();
					this._UserDefinedFieldID = value;
					this.SendPropertyChanged("UserDefinedFieldID");
					this.OnUserDefinedFieldIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   UserDefinedRowID : No description found!
    /// </summary>
		[Column(Storage="_UserDefinedRowID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int UserDefinedRowID
		
    {
			get
			
      {
				return this._UserDefinedRowID;
			}
			set
			
      {
				if ((this._UserDefinedRowID != value))
				
        {
					if (this._Rb_UserDefinedRow.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserDefinedRowIDChanging(value);
					this.SendPropertyChanging();
					this._UserDefinedRowID = value;
					this.SendPropertyChanged("UserDefinedRowID");
					this.OnUserDefinedRowIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   FieldValue : No description found!
    /// </summary>
		[Column(Storage="_FieldValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string FieldValue
		
    {
			get
			
      {
				return this._FieldValue;
			}
			set
			
      {
				if ((this._FieldValue != value))
				
        {
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_UserDefinedData_UserDefinedFields
    /// </summary>
		[Association(Name="FK_UserDefinedData_UserDefinedFields", Storage="_Rb_UserDefinedField", ThisKey="UserDefinedFieldID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_UserDefinedField Rb_UserDefinedField
		
    {
			get
			
      {
				return this._Rb_UserDefinedField.Entity;
			}
			set
			
      {
				Rb_UserDefinedField previousValue = this._Rb_UserDefinedField.Entity;
				if (((previousValue != value) 
							|| (this._Rb_UserDefinedField.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_UserDefinedField.Entity = null;
						previousValue.Rb_UserDefinedDatas.Remove(this);
					}
					this._Rb_UserDefinedField.Entity = value;
					if ((value != null))
					
          {
						value.Rb_UserDefinedDatas.Add(this);
						this._UserDefinedFieldID = value.UserDefinedFieldID;
					}
					else
					
          {
						this._UserDefinedFieldID = default(int);
					}
					this.SendPropertyChanged("Rb_UserDefinedField");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_UserDefinedData_UserDefinedRows
    /// </summary>
		[Association(Name="FK_UserDefinedData_UserDefinedRows", Storage="_Rb_UserDefinedRow", ThisKey="UserDefinedRowID", IsForeignKey=true)]
		public Rb_UserDefinedRow Rb_UserDefinedRow
		
    {
			get
			
      {
				return this._Rb_UserDefinedRow.Entity;
			}
			set
			
      {
				Rb_UserDefinedRow previousValue = this._Rb_UserDefinedRow.Entity;
				if (((previousValue != value) 
							|| (this._Rb_UserDefinedRow.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_UserDefinedRow.Entity = null;
						previousValue.Rb_UserDefinedDatas.Remove(this);
					}
					this._Rb_UserDefinedRow.Entity = value;
					if ((value != null))
					
          {
						value.Rb_UserDefinedDatas.Add(this);
						this._UserDefinedRowID = value.UserDefinedRowID;
					}
					else
					
          {
						this._UserDefinedRowID = default(int);
					}
					this.SendPropertyChanged("Rb_UserDefinedRow");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_UserDefinedField = default(EntityRef<Rb_UserDefinedField>);
			this._Rb_UserDefinedRow = default(EntityRef<Rb_UserDefinedRow>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_UserDefinedFields : No description found!
  /// </summary>
	[Table(Name="dbo.rb_UserDefinedFields")]
	[DataContract()]
	public partial class Rb_UserDefinedField : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserDefinedFieldID : No description found!
    /// </summary>
		private int _UserDefinedFieldID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   FieldTitle : No description found!
    /// </summary>
		private string _FieldTitle;
		
    /// <summary>
    ///   Visible : No description found!
    /// </summary>
		private bool _Visible;
		
    /// <summary>
    ///   FieldOrder : No description found!
    /// </summary>
		private int _FieldOrder;
		
    /// <summary>
    ///   FieldType : No description found!
    /// </summary>
		private string _FieldType;
		
		private EntitySet<Rb_UserDefinedData> _Rb_UserDefinedDatas;
		
		private EntityRef<Rb_Module> _Rb_Module;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserDefinedFieldIDChanging(int value);
    partial void OnUserDefinedFieldIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnFieldTitleChanging(string value);
    partial void OnFieldTitleChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnFieldOrderChanging(int value);
    partial void OnFieldOrderChanged();
    partial void OnFieldTypeChanging(string value);
    partial void OnFieldTypeChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_UserDefinedField
    /// </summary>
		public Rb_UserDefinedField()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserDefinedFieldID : No description found!
    /// </summary>
		[Column(Storage="_UserDefinedFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int UserDefinedFieldID
		
    {
			get
			
      {
				return this._UserDefinedFieldID;
			}
			set
			
      {
				if ((this._UserDefinedFieldID != value))
				
        {
					this.OnUserDefinedFieldIDChanging(value);
					this.SendPropertyChanging();
					this._UserDefinedFieldID = value;
					this.SendPropertyChanged("UserDefinedFieldID");
					this.OnUserDefinedFieldIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   FieldTitle : No description found!
    /// </summary>
		[Column(Storage="_FieldTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string FieldTitle
		
    {
			get
			
      {
				return this._FieldTitle;
			}
			set
			
      {
				if ((this._FieldTitle != value))
				
        {
					this.OnFieldTitleChanging(value);
					this.SendPropertyChanging();
					this._FieldTitle = value;
					this.SendPropertyChanged("FieldTitle");
					this.OnFieldTitleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Visible : No description found!
    /// </summary>
		[Column(Storage="_Visible", DbType="Bit NOT NULL")]
		[DataMember(Order=4)]
		public bool Visible
		
    {
			get
			
      {
				return this._Visible;
			}
			set
			
      {
				if ((this._Visible != value))
				
        {
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
    /// <summary>
    ///   FieldOrder : No description found!
    /// </summary>
		[Column(Storage="_FieldOrder", DbType="Int NOT NULL")]
		[DataMember(Order=5)]
		public int FieldOrder
		
    {
			get
			
      {
				return this._FieldOrder;
			}
			set
			
      {
				if ((this._FieldOrder != value))
				
        {
					this.OnFieldOrderChanging(value);
					this.SendPropertyChanging();
					this._FieldOrder = value;
					this.SendPropertyChanged("FieldOrder");
					this.OnFieldOrderChanged();
				}
			}
		}
		
    /// <summary>
    ///   FieldType : No description found!
    /// </summary>
		[Column(Storage="_FieldType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string FieldType
		
    {
			get
			
      {
				return this._FieldType;
			}
			set
			
      {
				if ((this._FieldType != value))
				
        {
					this.OnFieldTypeChanging(value);
					this.SendPropertyChanging();
					this._FieldType = value;
					this.SendPropertyChanged("FieldType");
					this.OnFieldTypeChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_UserDefinedData_UserDefinedFields", Storage="_Rb_UserDefinedDatas", OtherKey="UserDefinedFieldID", DeleteRule="CASCADE")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<Rb_UserDefinedData> Rb_UserDefinedDatas
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_UserDefinedDatas.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_UserDefinedDatas;
			}
			set
			
      {
				this._Rb_UserDefinedDatas.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_UserDefinedFields_Modules
    /// </summary>
		[Association(Name="FK_UserDefinedFields_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_UserDefinedFields.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_UserDefinedFields.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_UserDefinedDatas(Rb_UserDefinedData entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_UserDefinedField = this;
		}
		
		private void detach_Rb_UserDefinedDatas(Rb_UserDefinedData entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_UserDefinedField = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_UserDefinedDatas = new EntitySet<Rb_UserDefinedData>(new Action<Rb_UserDefinedData>(this.attach_Rb_UserDefinedDatas), new Action<Rb_UserDefinedData>(this.detach_Rb_UserDefinedDatas));
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_UserDefinedRows : No description found!
  /// </summary>
	[Table(Name="dbo.rb_UserDefinedRows")]
	[DataContract()]
	public partial class Rb_UserDefinedRow : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserDefinedRowID : No description found!
    /// </summary>
		private int _UserDefinedRowID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
		private EntitySet<Rb_UserDefinedData> _Rb_UserDefinedDatas;
		
		private EntityRef<Rb_Module> _Rb_Module;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserDefinedRowIDChanging(int value);
    partial void OnUserDefinedRowIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_UserDefinedRow
    /// </summary>
		public Rb_UserDefinedRow()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserDefinedRowID : No description found!
    /// </summary>
		[Column(Storage="_UserDefinedRowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int UserDefinedRowID
		
    {
			get
			
      {
				return this._UserDefinedRowID;
			}
			set
			
      {
				if ((this._UserDefinedRowID != value))
				
        {
					this.OnUserDefinedRowIDChanging(value);
					this.SendPropertyChanging();
					this._UserDefinedRowID = value;
					this.SendPropertyChanged("UserDefinedRowID");
					this.OnUserDefinedRowIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					if (this._Rb_Module.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_UserDefinedData_UserDefinedRows", Storage="_Rb_UserDefinedDatas", OtherKey="UserDefinedRowID", DeleteRule="NO ACTION")]
		[DataMember(Order=3, EmitDefaultValue=false)]
		public EntitySet<Rb_UserDefinedData> Rb_UserDefinedDatas
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_UserDefinedDatas.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_UserDefinedDatas;
			}
			set
			
      {
				this._Rb_UserDefinedDatas.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_UserDefinedRows_Modules
    /// </summary>
		[Association(Name="FK_UserDefinedRows_Modules", Storage="_Rb_Module", ThisKey="ModuleID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Module Rb_Module
		
    {
			get
			
      {
				return this._Rb_Module.Entity;
			}
			set
			
      {
				Rb_Module previousValue = this._Rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Module.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Module.Entity = null;
						previousValue.Rb_UserDefinedRows.Remove(this);
					}
					this._Rb_Module.Entity = value;
					if ((value != null))
					
          {
						value.Rb_UserDefinedRows.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					
          {
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Rb_Module");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_UserDefinedDatas(Rb_UserDefinedData entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_UserDefinedRow = this;
		}
		
		private void detach_Rb_UserDefinedDatas(Rb_UserDefinedData entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_UserDefinedRow = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_UserDefinedDatas = new EntitySet<Rb_UserDefinedData>(new Action<Rb_UserDefinedData>(this.attach_Rb_UserDefinedDatas), new Action<Rb_UserDefinedData>(this.detach_Rb_UserDefinedDatas));
			this._Rb_Module = default(EntityRef<Rb_Module>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_UserDesktop : No description found!
  /// </summary>
	[Table(Name="dbo.rb_UserDesktop")]
	[DataContract()]
	public partial class Rb_UserDesktop : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		private int _UserID;
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		private int _ModuleID;
		
    /// <summary>
    ///   TabID : No description found!
    /// </summary>
		private int _TabID;
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   State : No description found!
    /// </summary>
		private short _State;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_User> _Rb_User;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnStateChanging(short value);
    partial void OnStateChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_UserDesktop
    /// </summary>
		public Rb_UserDesktop()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					if (this._Rb_User.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   ModuleID : No description found!
    /// </summary>
		[Column(Storage="_ModuleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ModuleID
		
    {
			get
			
      {
				return this._ModuleID;
			}
			set
			
      {
				if ((this._ModuleID != value))
				
        {
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   TabID : No description found!
    /// </summary>
		[Column(Storage="_TabID", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int TabID
		
    {
			get
			
      {
				return this._TabID;
			}
			set
			
      {
				if ((this._TabID != value))
				
        {
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   State : No description found!
    /// </summary>
		[Column(Storage="_State", DbType="SmallInt NOT NULL")]
		[DataMember(Order=5)]
		public short State
		
    {
			get
			
      {
				return this._State;
			}
			set
			
      {
				if ((this._State != value))
				
        {
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=6)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_UserDesktop_rb_Users
    /// </summary>
		[Association(Name="FK_rb_UserDesktop_rb_Users", Storage="_Rb_User", ThisKey="UserID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_User Rb_User
		
    {
			get
			
      {
				return this._Rb_User.Entity;
			}
			set
			
      {
				Rb_User previousValue = this._Rb_User.Entity;
				if (((previousValue != value) 
							|| (this._Rb_User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_User.Entity = null;
						previousValue.Rb_UserDesktops.Remove(this);
					}
					this._Rb_User.Entity = value;
					if ((value != null))
					
          {
						value.Rb_UserDesktops.Add(this);
						this._UserID = value.UserID;
					}
					else
					
          {
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Rb_User");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_User = default(EntityRef<Rb_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_UserRoles : No description found!
  /// </summary>
	[Table(Name="dbo.rb_UserRoles")]
	[DataContract()]
	public partial class Rb_UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		private int _UserID;
		
    /// <summary>
    ///   RoleID : No description found!
    /// </summary>
		private int _RoleID;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
		
		private EntityRef<Rb_Role> _Rb_Role;
		
		private EntityRef<Rb_User> _Rb_User;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_UserRole
    /// </summary>
		public Rb_UserRole()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					if (this._Rb_User.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   RoleID : No description found!
    /// </summary>
		[Column(Storage="_RoleID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int RoleID
		
    {
			get
			
      {
				return this._RoleID;
			}
			set
			
      {
				if ((this._RoleID != value))
				
        {
					if (this._Rb_Role.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=3)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
    /// <summary>
    ///   Foreign Key: FK_rb_UserRoles_rb_Roles
    /// </summary>
		[Association(Name="FK_rb_UserRoles_rb_Roles", Storage="_Rb_Role", ThisKey="RoleID", IsForeignKey=true)]
		public Rb_Role Rb_Role
		
    {
			get
			
      {
				return this._Rb_Role.Entity;
			}
			set
			
      {
				Rb_Role previousValue = this._Rb_Role.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Role.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Role.Entity = null;
						previousValue.Rb_UserRoles.Remove(this);
					}
					this._Rb_Role.Entity = value;
					if ((value != null))
					
          {
						value.Rb_UserRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					
          {
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Rb_Role");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_UserRoles_rb_Users
    /// </summary>
		[Association(Name="FK_rb_UserRoles_rb_Users", Storage="_Rb_User", ThisKey="UserID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_User Rb_User
		
    {
			get
			
      {
				return this._Rb_User.Entity;
			}
			set
			
      {
				Rb_User previousValue = this._Rb_User.Entity;
				if (((previousValue != value) 
							|| (this._Rb_User.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_User.Entity = null;
						previousValue.Rb_UserRoles.Remove(this);
					}
					this._Rb_User.Entity = value;
					if ((value != null))
					
          {
						value.Rb_UserRoles.Add(this);
						this._UserID = value.UserID;
					}
					else
					
          {
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Rb_User");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			this._Rb_Role = default(EntityRef<Rb_Role>);
			this._Rb_User = default(EntityRef<Rb_User>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	
  /// <summary>
  ///   rb_Users : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Users")]
	[DataContract()]
	public partial class Rb_User : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		private int _UserID;
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		private int _PortalID;
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		private string _Name;
		
    /// <summary>
    ///   Company : No description found!
    /// </summary>
		private string _Company;
		
    /// <summary>
    ///   Address : No description found!
    /// </summary>
		private string _Address;
		
    /// <summary>
    ///   City : No description found!
    /// </summary>
		private string _City;
		
    /// <summary>
    ///   Zip : No description found!
    /// </summary>
		private string _Zip;
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		private string _CountryID;
		
    /// <summary>
    ///   StateID : No description found!
    /// </summary>
		private System.Nullable<int> _StateID;
		
    /// <summary>
    ///   PIva : No description found!
    /// </summary>
		private string _PIva;
		
    /// <summary>
    ///   CFiscale : No description found!
    /// </summary>
		private string _CFiscale;
		
    /// <summary>
    ///   Phone : No description found!
    /// </summary>
		private string _Phone;
		
    /// <summary>
    ///   Fax : No description found!
    /// </summary>
		private string _Fax;
		
    /// <summary>
    ///   Password : No description found!
    /// </summary>
		private string _Password;
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		private string _Email;
		
    /// <summary>
    ///   SendNewsletter : No description found!
    /// </summary>
		private System.Nullable<bool> _SendNewsletter;
		
    /// <summary>
    ///   MailChecked : No description found!
    /// </summary>
		private System.Nullable<byte> _MailChecked;
		
    /// <summary>
    ///   LastSend : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _LastSend;
		
    /// <summary>
    ///   user_last_visit : No description found!
    /// </summary>
		private System.DateTime _User_last_visit;
		
    /// <summary>
    ///   user_current_visit : No description found!
    /// </summary>
		private System.DateTime _User_current_visit;
		
    /// <summary>
    ///   Salt : No description found!
    /// </summary>
		private string _Salt;
		
		private EntitySet<Rb_Order> _Rb_Orders;
		
		private EntitySet<Rb_UserDesktop> _Rb_UserDesktops;
		
		private EntitySet<Rb_UserRole> _Rb_UserRoles;
		
		private EntityRef<Rb_Country> _Rb_Country;
		
		private EntityRef<Rb_Portal> _Rb_Portal;
		
		private bool serializing;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryIDChanging(string value);
    partial void OnCountryIDChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnPIvaChanging(string value);
    partial void OnPIvaChanged();
    partial void OnCFiscaleChanging(string value);
    partial void OnCFiscaleChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSendNewsletterChanging(System.Nullable<bool> value);
    partial void OnSendNewsletterChanged();
    partial void OnMailCheckedChanging(System.Nullable<byte> value);
    partial void OnMailCheckedChanged();
    partial void OnLastSendChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSendChanged();
    partial void OnUser_last_visitChanging(System.DateTime value);
    partial void OnUser_last_visitChanged();
    partial void OnUser_current_visitChanging(System.DateTime value);
    partial void OnUser_current_visitChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_User
    /// </summary>
		public Rb_User()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   UserID : No description found!
    /// </summary>
		[Column(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int UserID
		
    {
			get
			
      {
				return this._UserID;
			}
			set
			
      {
				if ((this._UserID != value))
				
        {
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PortalID : No description found!
    /// </summary>
		[Column(Storage="_PortalID", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int PortalID
		
    {
			get
			
      {
				return this._PortalID;
			}
			set
			
      {
				if ((this._PortalID != value))
				
        {
					if (this._Rb_Portal.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   Name : No description found!
    /// </summary>
		[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Name
		
    {
			get
			
      {
				return this._Name;
			}
			set
			
      {
				if ((this._Name != value))
				
        {
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
    /// <summary>
    ///   Company : No description found!
    /// </summary>
		[Column(Storage="_Company", DbType="NVarChar(50)")]
		[DataMember(Order=4)]
		public string Company
		
    {
			get
			
      {
				return this._Company;
			}
			set
			
      {
				if ((this._Company != value))
				
        {
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
    /// <summary>
    ///   Address : No description found!
    /// </summary>
		[Column(Storage="_Address", DbType="NVarChar(50)")]
		[DataMember(Order=5)]
		public string Address
		
    {
			get
			
      {
				return this._Address;
			}
			set
			
      {
				if ((this._Address != value))
				
        {
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
    /// <summary>
    ///   City : No description found!
    /// </summary>
		[Column(Storage="_City", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string City
		
    {
			get
			
      {
				return this._City;
			}
			set
			
      {
				if ((this._City != value))
				
        {
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
    /// <summary>
    ///   Zip : No description found!
    /// </summary>
		[Column(Storage="_Zip", DbType="NVarChar(6)")]
		[DataMember(Order=7)]
		public string Zip
		
    {
			get
			
      {
				return this._Zip;
			}
			set
			
      {
				if ((this._Zip != value))
				
        {
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
    /// <summary>
    ///   CountryID : No description found!
    /// </summary>
		[Column(Storage="_CountryID", DbType="NChar(2)")]
		[DataMember(Order=8)]
		public string CountryID
		
    {
			get
			
      {
				return this._CountryID;
			}
			set
			
      {
				if ((this._CountryID != value))
				
        {
					if (this._Rb_Country.HasLoadedOrAssignedValue)
					
          {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   StateID : No description found!
    /// </summary>
		[Column(Storage="_StateID", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> StateID
		
    {
			get
			
      {
				return this._StateID;
			}
			set
			
      {
				if ((this._StateID != value))
				
        {
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
    /// <summary>
    ///   PIva : No description found!
    /// </summary>
		[Column(Storage="_PIva", DbType="NVarChar(11)")]
		[DataMember(Order=10)]
		public string PIva
		
    {
			get
			
      {
				return this._PIva;
			}
			set
			
      {
				if ((this._PIva != value))
				
        {
					this.OnPIvaChanging(value);
					this.SendPropertyChanging();
					this._PIva = value;
					this.SendPropertyChanged("PIva");
					this.OnPIvaChanged();
				}
			}
		}
		
    /// <summary>
    ///   CFiscale : No description found!
    /// </summary>
		[Column(Storage="_CFiscale", DbType="NVarChar(16)")]
		[DataMember(Order=11)]
		public string CFiscale
		
    {
			get
			
      {
				return this._CFiscale;
			}
			set
			
      {
				if ((this._CFiscale != value))
				
        {
					this.OnCFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CFiscale = value;
					this.SendPropertyChanged("CFiscale");
					this.OnCFiscaleChanged();
				}
			}
		}
		
    /// <summary>
    ///   Phone : No description found!
    /// </summary>
		[Column(Storage="_Phone", DbType="NVarChar(50)")]
		[DataMember(Order=12)]
		public string Phone
		
    {
			get
			
      {
				return this._Phone;
			}
			set
			
      {
				if ((this._Phone != value))
				
        {
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
    /// <summary>
    ///   Fax : No description found!
    /// </summary>
		[Column(Storage="_Fax", DbType="NVarChar(50)")]
		[DataMember(Order=13)]
		public string Fax
		
    {
			get
			
      {
				return this._Fax;
			}
			set
			
      {
				if ((this._Fax != value))
				
        {
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
    /// <summary>
    ///   Password : No description found!
    /// </summary>
		[Column(Storage="_Password", DbType="VarChar(40)")]
		[DataMember(Order=14)]
		public string Password
		
    {
			get
			
      {
				return this._Password;
			}
			set
			
      {
				if ((this._Password != value))
				
        {
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
    /// <summary>
    ///   Email : No description found!
    /// </summary>
		[Column(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=15)]
		public string Email
		
    {
			get
			
      {
				return this._Email;
			}
			set
			
      {
				if ((this._Email != value))
				
        {
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
    /// <summary>
    ///   SendNewsletter : No description found!
    /// </summary>
		[Column(Storage="_SendNewsletter", DbType="Bit")]
		[DataMember(Order=16)]
		public System.Nullable<bool> SendNewsletter
		
    {
			get
			
      {
				return this._SendNewsletter;
			}
			set
			
      {
				if ((this._SendNewsletter != value))
				
        {
					this.OnSendNewsletterChanging(value);
					this.SendPropertyChanging();
					this._SendNewsletter = value;
					this.SendPropertyChanged("SendNewsletter");
					this.OnSendNewsletterChanged();
				}
			}
		}
		
    /// <summary>
    ///   MailChecked : No description found!
    /// </summary>
		[Column(Storage="_MailChecked", DbType="TinyInt")]
		[DataMember(Order=17)]
		public System.Nullable<byte> MailChecked
		
    {
			get
			
      {
				return this._MailChecked;
			}
			set
			
      {
				if ((this._MailChecked != value))
				
        {
					this.OnMailCheckedChanging(value);
					this.SendPropertyChanging();
					this._MailChecked = value;
					this.SendPropertyChanged("MailChecked");
					this.OnMailCheckedChanged();
				}
			}
		}
		
    /// <summary>
    ///   LastSend : No description found!
    /// </summary>
		[Column(Storage="_LastSend", DbType="SmallDateTime")]
		[DataMember(Order=18)]
		public System.Nullable<System.DateTime> LastSend
		
    {
			get
			
      {
				return this._LastSend;
			}
			set
			
      {
				if ((this._LastSend != value))
				
        {
					this.OnLastSendChanging(value);
					this.SendPropertyChanging();
					this._LastSend = value;
					this.SendPropertyChanged("LastSend");
					this.OnLastSendChanged();
				}
			}
		}
		
    /// <summary>
    ///   user_last_visit : No description found!
    /// </summary>
		[Column(Name="user_last_visit", Storage="_User_last_visit", DbType="DateTime NOT NULL")]
		[DataMember(Order=19)]
		public System.DateTime User_last_visit
		
    {
			get
			
      {
				return this._User_last_visit;
			}
			set
			
      {
				if ((this._User_last_visit != value))
				
        {
					this.OnUser_last_visitChanging(value);
					this.SendPropertyChanging();
					this._User_last_visit = value;
					this.SendPropertyChanged("User_last_visit");
					this.OnUser_last_visitChanged();
				}
			}
		}
		
    /// <summary>
    ///   user_current_visit : No description found!
    /// </summary>
		[Column(Name="user_current_visit", Storage="_User_current_visit", DbType="DateTime NOT NULL")]
		[DataMember(Order=20)]
		public System.DateTime User_current_visit
		
    {
			get
			
      {
				return this._User_current_visit;
			}
			set
			
      {
				if ((this._User_current_visit != value))
				
        {
					this.OnUser_current_visitChanging(value);
					this.SendPropertyChanging();
					this._User_current_visit = value;
					this.SendPropertyChanged("User_current_visit");
					this.OnUser_current_visitChanged();
				}
			}
		}
		
    /// <summary>
    ///   Salt : No description found!
    /// </summary>
		[Column(Storage="_Salt", DbType="VarChar(10)")]
		[DataMember(Order=21)]
		public string Salt
		
    {
			get
			
      {
				return this._Salt;
			}
			set
			
      {
				if ((this._Salt != value))
				
        {
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
    #endregion
		
    #region Properties  --  Assocation(s)
		[Association(Name="FK_Orders_Users", Storage="_Rb_Orders", OtherKey="UserID", DeleteRule="CASCADE")]
		[DataMember(Order=22, EmitDefaultValue=false)]
		public EntitySet<Rb_Order> Rb_Orders
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_Orders.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_Orders;
			}
			set
			
      {
				this._Rb_Orders.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_UserDesktop_rb_Users", Storage="_Rb_UserDesktops", OtherKey="UserID", DeleteRule="CASCADE")]
		[DataMember(Order=23, EmitDefaultValue=false)]
		public EntitySet<Rb_UserDesktop> Rb_UserDesktops
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_UserDesktops.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_UserDesktops;
			}
			set
			
      {
				this._Rb_UserDesktops.Assign(value);
			}
		}
		
		[Association(Name="FK_rb_UserRoles_rb_Users", Storage="_Rb_UserRoles", OtherKey="UserID", DeleteRule="CASCADE")]
		[DataMember(Order=24, EmitDefaultValue=false)]
		public EntitySet<Rb_UserRole> Rb_UserRoles
		
    {
			get
			
      {
				if ((this.serializing 
							&& (this._Rb_UserRoles.HasLoadedOrAssignedValues == false)))
				
        {
					return null;
				}
				return this._Rb_UserRoles;
			}
			set
			
      {
				this._Rb_UserRoles.Assign(value);
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_Users_rb_Countries
    /// </summary>
		[Association(Name="FK_rb_Users_rb_Countries", Storage="_Rb_Country", ThisKey="CountryID", IsForeignKey=true)]
		public Rb_Country Rb_Country
		
    {
			get
			
      {
				return this._Rb_Country.Entity;
			}
			set
			
      {
				Rb_Country previousValue = this._Rb_Country.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Country.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Country.Entity = null;
						previousValue.Rb_Users.Remove(this);
					}
					this._Rb_Country.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Users.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					
          {
						this._CountryID = default(string);
					}
					this.SendPropertyChanged("Rb_Country");
				}
			}
		}
		
    /// <summary>
    ///   Foreign Key: FK_rb_Users_rb_Portals
    /// </summary>
		[Association(Name="FK_rb_Users_rb_Portals", Storage="_Rb_Portal", ThisKey="PortalID", IsForeignKey=true, DeleteOnNull=true)]
		public Rb_Portal Rb_Portal
		
    {
			get
			
      {
				return this._Rb_Portal.Entity;
			}
			set
			
      {
				Rb_Portal previousValue = this._Rb_Portal.Entity;
				if (((previousValue != value) 
							|| (this._Rb_Portal.HasLoadedOrAssignedValue == false)))
				
        {
					this.SendPropertyChanging();
					if ((previousValue != null))
					
          {
						this._Rb_Portal.Entity = null;
						previousValue.Rb_Users.Remove(this);
					}
					this._Rb_Portal.Entity = value;
					if ((value != null))
					
          {
						value.Rb_Users.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					
          {
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("Rb_Portal");
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
    #region Helper(s)
		private void attach_Rb_Orders(Rb_Order entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_User = this;
		}
		
		private void detach_Rb_Orders(Rb_Order entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_User = null;
		}
		
		private void attach_Rb_UserDesktops(Rb_UserDesktop entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_User = this;
		}
		
		private void detach_Rb_UserDesktops(Rb_UserDesktop entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_User = null;
		}
		
		private void attach_Rb_UserRoles(Rb_UserRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_User = this;
		}
		
		private void detach_Rb_UserRoles(Rb_UserRole entity)
		
    {
			this.SendPropertyChanging();
			entity.Rb_User = null;
		}
		
		private void Initialize()
		
    {
			this._Rb_Orders = new EntitySet<Rb_Order>(new Action<Rb_Order>(this.attach_Rb_Orders), new Action<Rb_Order>(this.detach_Rb_Orders));
			this._Rb_UserDesktops = new EntitySet<Rb_UserDesktop>(new Action<Rb_UserDesktop>(this.attach_Rb_UserDesktops), new Action<Rb_UserDesktop>(this.detach_Rb_UserDesktops));
			this._Rb_UserRoles = new EntitySet<Rb_UserRole>(new Action<Rb_UserRole>(this.attach_Rb_UserRoles), new Action<Rb_UserRole>(this.detach_Rb_UserRoles));
			this._Rb_Country = default(EntityRef<Rb_Country>);
			this._Rb_Portal = default(EntityRef<Rb_Portal>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		
    {
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		
    {
			this.serializing = false;
		}
    #endregion
	}
	
  /// <summary>
  ///   rb_Versions : No description found!
  /// </summary>
	[Table(Name="dbo.rb_Versions")]
	[DataContract()]
	public partial class Rb_Version : INotifyPropertyChanging, INotifyPropertyChanged
	
  {
		
    #region Member(s)
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
    /// <summary>
    ///   Release : No description found!
    /// </summary>
		private int _Release;
		
    /// <summary>
    ///   Version : No description found!
    /// </summary>
		private string _Version;
		
    /// <summary>
    ///   ReleaseDate : No description found!
    /// </summary>
		private System.Nullable<System.DateTime> _ReleaseDate;
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		private int _Id;
    #endregion
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReleaseChanging(int value);
    partial void OnReleaseChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseDateChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
    #region Constructor(s)
    /// <summary>
    ///   Creates an instance of Rb_Version
    /// </summary>
		public Rb_Version()
		
    {
			this.Initialize();
		}
    #endregion
		
    #region Properties  --  Member(s)
    /// <summary>
    ///   Release : No description found!
    /// </summary>
		[Column(Storage="_Release", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int Release
		
    {
			get
			
      {
				return this._Release;
			}
			set
			
      {
				if ((this._Release != value))
				
        {
					this.OnReleaseChanging(value);
					this.SendPropertyChanging();
					this._Release = value;
					this.SendPropertyChanged("Release");
					this.OnReleaseChanged();
				}
			}
		}
		
    /// <summary>
    ///   Version : No description found!
    /// </summary>
		[Column(Storage="_Version", DbType="NVarChar(50)")]
		[DataMember(Order=2)]
		public string Version
		
    {
			get
			
      {
				return this._Version;
			}
			set
			
      {
				if ((this._Version != value))
				
        {
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
    /// <summary>
    ///   ReleaseDate : No description found!
    /// </summary>
		[Column(Storage="_ReleaseDate", DbType="DateTime")]
		[DataMember(Order=3)]
		public System.Nullable<System.DateTime> ReleaseDate
		
    {
			get
			
      {
				return this._ReleaseDate;
			}
			set
			
      {
				if ((this._ReleaseDate != value))
				
        {
					this.OnReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDate = value;
					this.SendPropertyChanged("ReleaseDate");
					this.OnReleaseDateChanged();
				}
			}
		}
		
    /// <summary>
    ///   Id : No description found!
    /// </summary>
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		
    {
			get
			
      {
				return this._Id;
			}
			set
			
      {
				if ((this._Id != value))
				
        {
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
    #endregion
		
    #region Event(s)
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		
    {
			if ((this.PropertyChanging != null))
			
      {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		
    {
			if ((this.PropertyChanged != null))
			
      {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
    #endregion
		
		private void Initialize()
		
    {
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		
    {
			this.Initialize();
		}
	}
	

  #endregion

}
#pragma warning restore 1591
