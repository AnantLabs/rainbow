#summary Architecture developer's documentation
#labels Featured

= Introduction =

[http://code.google.com/p/rainbow RainbowPortal] Architecture main elements are:

   * Provider
   * Module


= Providers =

You can consider providers as both a point of customization and [http://www.designpatternsfor.net/default.aspx?pid=22 Data Mapper] design pattern applicaiton all-in-one.

You can override existing providers as a wrapper, or even develop a fully custom implementation.

Most providers implemented as [http://www.dofactory.com/Patterns/PatternSingleton.aspx Singletones], so they contain `static ExactProvider Instanse { get; }` member.

The exact implementation to use in this member is set in the [http://code.google.com/p/rainbow/source/browse/NET_2_0/devint/trunk/WebSites/Rainbow/web.config.standard web.config.standard] specific sections - ,,http://rainbow.googlecode.com/svn/NET_2_0/devint/trunk/WebSites/Rainbow/web.config.standard,,.

*Rainbow 1.6* already has a pair of providers (`Rainbow.Web.SqlUrlBuilderProvider, Rainbow.Configuration.Log4NetLogProvider` in [http://code.google.com/p/rainbow/source/browse/NET_2_0/devint/trunk/WebSites/Rainbow/web.config.standard Web.config] specific sections - ,,http://rainbow.googlecode.com/svn/NET_1_1/trunk/Rainbow/Web.config,,)

More providers were extracted in *NET_2_0/devint/trunk* code (`PortalProvider, PortalPageProvider, MonitoringProvider, ModuleProvider`), and their standard default implementation for !MsSql database (`Rainbow.Framework.Providers.MsSql` namespace/project). Some Module manipulation sql-dependent code (`using System.Data.SqlClient`) is still not isolated to provider implementation, it is to be done soon.

== Geographic provider ==

Geographic provider is used for getting Countries List and some other Geographic lists (see interface and usages)

It is used in *Register pages* (common base is `class RegisterFull` in [http://code.google.com/p/rainbow/source/browse/NET_2_0/devint/trunk/Projects/Rainbow.Framework.Web.UI.WebControls/Modules/RegisterFull.ascx.cs RegisterFull.ascx.cs] file).
Also, it is well tested in Unit Tests (`class GeographicProviderTests`, see [http://code.google.com/p/rainbow/source/browse/NET_2_0/devint/trunk/Tests/Rainbow.Tests.Data.MsSql/GeographicProviderTests.cs GeographicProviderTests.cs]). Or rather its default implementation `class SqlGeographicProvider` in [http://code.google.com/p/rainbow/source/browse/NET_2_0/devint/trunk/Providers/Rainbow.Framework.Providers.MsSql/SqlGeographicProvider.cs SqlGeographicProvider.cs] is tested there.

= Modules =