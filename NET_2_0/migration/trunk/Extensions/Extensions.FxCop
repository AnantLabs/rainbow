<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.312" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>False</SharedProject>
  <Stylesheet Apply="False">c:\program files\microsoft fxcop 1.312\Xml\FxCopReport.Xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <PermitAnalysis>True</PermitAnalysis>
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>100</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>10</RuleExceptionsThreshold>
  <Spelling Locale="en-us" />
  <VersionAware>False</VersionAware>
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\MarinaTeq.Rainbow.Zen\bin\</Directory>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\Rainbow.Provider.Implementation\bin\Release\</Directory>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\Rainbow.Provider\bin\Release\</Directory>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\System.Configuration\bin\Release\</Directory>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Rainbow.Scheduler\bin\Release\</Directory>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Rainbow.Settings\bin\Release\</Directory>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\RewriteRules.Rainbow\bin\Release\</Directory>
   <Directory>C:\DevelopmentData\Projects\Rainbow Portal\Extensions\XHTMLHTTPModule\bin\Release\</Directory>
   <Directory>C:\Program Files\XCSharp2003\Assemblies\</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\Rainbow.Provider.Implementation\bin\Debug\Rainbow.Provider.Implementation.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\Rainbow.Provider\bin\Debug\Rainbow.Provider.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\System.Configuration\bin\Debug\System.Configuration.Provider.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Rainbow.Scheduler\bin\Debug\Rainbow.Scheduler.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Rainbow.Settings\bin\Debug\Rainbow.Settings.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\RewriteRules.Rainbow\bin\Debug\RewriteRules.Rainbow.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\XHTMLHTTPModule\bin\Debug\XHTMLHTTPModule.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.312">
  <Namespaces>
   <Namespace Name="AspNetResources.Web">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:25:31Z">
      <Issue>
       <Item>AspNetResources.Web</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Rainbow.Configuration.Provider">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:08:02Z">
      <Issue>
       <Item>Rainbow.Configuration.Provider</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Rainbow.Settings">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:08:02Z">
      <Issue>
       <Item>Rainbow.Settings</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Rainbow.Settings.Cache">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:08:02Z">
      <Issue>
       <Item>Rainbow.Settings.Cache</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Rainbow.Web">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:08:02Z">
      <Issue>
       <Item>Rainbow.Web</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="RewriteRules.Rainbow">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:08:02Z">
      <Issue>
       <Item>RewriteRules.Rainbow</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="RewriteRules.Rainbow.Tools">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:08:02Z">
      <Issue>
       <Item>RewriteRules.Rainbow.Tools</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="System.Configuration.Provider">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2004-12-24 20:08:02Z">
      <Issue>
       <Item>System.Configuration.Provider</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\Rainbow.Provider.Implementation\bin\Debug\Rainbow.Provider.Implementation.dll">
    <Modules>
     <Module Name="rainbow.provider.implementation.dll">
      <Namespaces>
       <Namespace Name="Rainbow.Configuration">
        <Types>
         <Type Name="Log4NetLogProvider">
          <Members>
           <Member Name=".cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>Rainbow.Configuration.Log4NetLogProvider</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Rainbow.Web">
        <Types>
         <Type Name="SqlUrlBuilderProvider">
          <Members>
           <Member Name="BuildUrl(System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.String,System.String,System.String):System.Uri">
            <Messages>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>SqlUrlBuilderProvider.BuildUrl(String, Int32, Int32, CultureInfo, String, String, String):Uri</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
              <Issue>
               <Item>SqlUrlBuilderProvider.BuildUrl(String, Int32, Int32, CultureInfo, String, String, String):Uri</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
              <Issue>
               <Item>SqlUrlBuilderProvider.BuildUrl(String, Int32, Int32, CultureInfo, String, String, String):Uri</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
             </Message>
             <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>op_Inequality</Item>
               <Item>String.Empty</Item>
               <Item>SqlUrlBuilderProvider.BuildUrl(String, Int32, Int32, CultureInfo, String, String, String):Uri</Item>
              </Issue>
              <Issue>
               <Item>op_Inequality</Item>
               <Item>String.Empty</Item>
               <Item>SqlUrlBuilderProvider.BuildUrl(String, Int32, Int32, CultureInfo, String, String, String):Uri</Item>
              </Issue>
              <Issue>
               <Item>op_Inequality</Item>
               <Item>String.Empty</Item>
               <Item>SqlUrlBuilderProvider.BuildUrl(String, Int32, Int32, CultureInfo, String, String, String):Uri</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UrlBuilderHelper">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2004-12-24 20:08:02Z">
            <Issue>
             <Item>Rainbow.Web.UrlBuilderHelper</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="PageSpecificProperty(System.Int32,System.String):System.Uri">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>UrlBuilderHelper.PageSpecificProperty(Int32, String):Uri</Item>
               <Item>System.Object</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>UrlBuilderHelper.PageSpecificProperty(Int32, String):Uri</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
              <Issue>
               <Item>UrlBuilderHelper.PageSpecificProperty(Int32, String):Uri</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\Rainbow.Provider\bin\Debug\Rainbow.Provider.dll">
    <Modules>
     <Module Name="rainbow.provider.dll">
      <Namespaces>
       <Namespace Name="Rainbow.Configuration">
        <Types>
         <Type Name="LogLevel">
          <Messages>
           <Message TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027" Created="2004-12-24 20:08:02Z">
            <Issue>
             <Item>LogLevel</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="LogProvider">
          <Members>
           <Member Name="Instance():Rainbow.Configuration.LogProvider">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2004-12-24 20:08:02Z">
              <Issue Name="TooGeneric">
               <Item>LogProvider.Instance():LogProvider</Item>
               <Item>System.Exception</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Rainbow.Web">
        <Types>
         <Type Name="UrlBuilderProvider">
          <Members>
           <Member Name="BuildUrl(System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.String,System.String,System.String):System.Uri">
            <Messages>
             <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>tabID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
             <Message Id="2#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>modID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
             <Message Id="6#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>urlKeywords</Item>
               <Item>UrlBuilderProvider.BuildUrl(String, Int32, Int32, CultureInfo, String, String, String):Uri</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Instance():Rainbow.Web.UrlBuilderProvider">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>UrlBuilderProvider.Instance():UrlBuilderProvider</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2004-12-24 20:08:02Z">
              <Issue Name="TooGeneric">
               <Item>UrlBuilderProvider.Instance():UrlBuilderProvider</Item>
               <Item>System.Exception</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="IsPlaceholder(System.Int32):System.Boolean">
            <Messages>
             <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>tabID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="TabLink(System.Int32):System.Uri">
            <Messages>
             <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>tabID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="UrlKeyword(System.Int32):System.String">
            <Messages>
             <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>tabID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>UrlBuilderProvider.UrlKeyword(Int32):String</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="UrlPageName(System.Int32):System.String">
            <Messages>
             <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>tabID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>UrlBuilderProvider.UrlPageName(Int32):String</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Provider\System.Configuration\bin\Debug\System.Configuration.Provider.dll">
    <Modules>
     <Module Name="system.configuration.provider.dll">
      <Namespaces>
       <Namespace Name="Rainbow.Configuration.Provider">
        <Types>
         <Type Name="ProviderConfiguration">
          <Members>
           <Member Name="LoadValuesFromConfigurationXml(System.Xml.XmlNode):System.Void">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Created="2004-12-24 20:08:02Z">
              <Issue Name="System.Xml.XmlNode">
               <Item>ProviderConfiguration.LoadValuesFromConfigurationXml(XmlNode):Void</Item>
               <Item>System.Xml.XmlNode</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ProviderConfigurationHandler">
          <Members>
           <Member Name="Create(System.Object,System.Object,System.Xml.XmlNode):System.Object">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Created="2004-12-24 20:08:02Z">
              <Issue Name="System.Xml.XmlNode">
               <Item>ProviderConfigurationHandler.Create(Object, Object, XmlNode):Object</Item>
               <Item>System.Xml.XmlNode</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ProviderHelper">
          <Members>
           <Member Name="InstantiateProvider(System.Configuration.ProviderSettings,System.Type):System.Configuration.Provider.ProviderBase">
            <Messages>
             <Message Id="System.Configuration.ConfigurationException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>ProviderHelper.InstantiateProvider(ProviderSettings, Type):ProviderBase</Item>
               <Item>1</Item>
               <Item>ConfigurationException..ctor(String)</Item>
               <Item>Provider could not be instantiated. The Type parameter cannot be null.</Item>
              </Issue>
              <Issue>
               <Item>ProviderHelper.InstantiateProvider(ProviderSettings, Type):ProviderBase</Item>
               <Item>1</Item>
               <Item>ConfigurationException..ctor(String)</Item>
               <Item>Provider must implement type '______'.</Item>
              </Issue>
             </Message>
             <Message Id="1#prov" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2004-12-24 20:08:02Z">
              <Issue Name="Parameter">
               <Item>ProviderHelper.InstantiateProvider(ProviderSettings, Type):ProviderBase</Item>
               <Item>prov</Item>
               <Item>provType</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="InstantiateProviders(System.Configuration.Provider.ProviderCollection,System.Configuration.Provider.ProviderCollection&amp;,System.Type):System.Void">
            <Messages>
             <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Created="2004-12-24 20:08:02Z">
              <Issue Level="CriticalWarning">
               <Item>providers</Item>
              </Issue>
             </Message>
             <Message Id="2#prov" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2004-12-24 20:08:02Z">
              <Issue Name="Parameter">
               <Item>ProviderHelper.InstantiateProviders(ProviderCollection, ProviderCollection&amp;, Type):Void</Item>
               <Item>prov</Item>
               <Item>provType</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="System.Configuration">
        <Types>
         <Type Name="ProviderSettings">
          <Members>
           <Member Name=".ctor()">
            <Messages>
             <Message Id="System.NotImplementedException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 22:24:28Z">
              <Issue>
               <Item>ProviderSettings..ctor()</Item>
               <Item>1</Item>
               <Item>NotImplementedException..ctor(String)</Item>
               <Item>ProviderSettings.ctor</Item>
              </Issue>
             </Message>
             <Message Id="ctor" TypeName="LiteralsShouldBeSpelledCorrectly" Category="Microsoft.Usage" CheckId="CA2204" Created="2004-12-24 22:24:28Z">
              <Issue>
               <Item>ctor</Item>
               <Item>ProviderSettings.ctor</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Name">
            <Accessors>
             <Accessor Name="set_Name(System.String):System.Void">
              <Messages>
               <Message Id="this" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Created="2004-12-24 20:08:02Z" FixCategory="Breaking">
                <Issue Name="MarkAsStatic">
                 <Item>ProviderSettings.set_Name(String):Void</Item>
                </Issue>
               </Message>
               <Message Id="value" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Created="2004-12-24 20:08:02Z" FixCategory="Breaking">
                <Issue>
                 <Item>value</Item>
                 <Item>ProviderSettings.set_Name(String):Void</Item>
                </Issue>
               </Message>
               <Message Id="System.NotImplementedException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 22:24:28Z">
                <Issue>
                 <Item>ProviderSettings.set_Name(String):Void</Item>
                 <Item>1</Item>
                 <Item>NotImplementedException..ctor(String)</Item>
                 <Item>ProviderSettings.Name</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="Type">
            <Accessors>
             <Accessor Name="set_Type(System.String):System.Void">
              <Messages>
               <Message Id="this" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Created="2004-12-24 20:08:02Z" FixCategory="Breaking">
                <Issue Name="MarkAsStatic">
                 <Item>ProviderSettings.set_Type(String):Void</Item>
                </Issue>
               </Message>
               <Message Id="value" TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801" Created="2004-12-24 20:08:02Z" FixCategory="Breaking">
                <Issue>
                 <Item>value</Item>
                 <Item>ProviderSettings.set_Type(String):Void</Item>
                </Issue>
               </Message>
               <Message Id="System.NotImplementedException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 22:24:28Z">
                <Issue>
                 <Item>ProviderSettings.set_Type(String):Void</Item>
                 <Item>1</Item>
                 <Item>NotImplementedException..ctor(String)</Item>
                 <Item>ProviderSettings.Type</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="System.Configuration.Provider">
        <Types>
         <Type Name="NotSupportedByProviderException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2004-12-24 20:30:08Z">
            <Issue>
             <Item>protected NotSupportedByProviderException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue>
             <Item>public NotSupportedByProviderException(String)</Item>
            </Issue>
            <Issue>
             <Item>public NotSupportedByProviderException(String, Exception)</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ProviderBase">
          <Members>
           <Member Name="Initialize(System.String,System.Collections.Specialized.NameValueCollection):System.Void">
            <Messages>
             <Message Id="System.ArgumentException.#ctor(System.String,System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>ProviderBase.Initialize(String, NameValueCollection):Void</Item>
               <Item>1</Item>
               <Item>ArgumentException..ctor(String, String)</Item>
               <Item>Config provider name null or empty</Item>
              </Issue>
             </Message>
             <Message Id="System.InvalidOperationException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>ProviderBase.Initialize(String, NameValueCollection):Void</Item>
               <Item>1</Item>
               <Item>InvalidOperationException..ctor(String)</Item>
               <Item>Provider Already Initialized</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Rainbow.Scheduler\bin\Debug\Rainbow.Scheduler.dll">
    <Modules>
     <Module Name="rainbow.scheduler.dll">
      <Namespaces>
       <Namespace Name="Rainbow.Scheduler">
        <Types>
         <Type Name="CachedScheduler">
          <Members>
           <Member Name="_cache">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>_cache</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Created="2004-12-24 20:19:51Z">
              <Issue Name="Member">
               <Item>_cache</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="InsertTask(Rainbow.Scheduler.SchedulerTask):Rainbow.Scheduler.SchedulerTask">
            <Messages>
             <Message Id="Rainbow.Scheduler.SchedulerException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>CachedScheduler.InsertTask(SchedulerTask):SchedulerTask</Item>
               <Item>1</Item>
               <Item>SchedulerException..ctor(String)</Item>
               <Item>Could not insert an inserted task</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Schedule(System.Object):System.Void">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>CachedScheduler.Schedule(Object):Void</Item>
               <Item>System.Object</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CachedScheduler+TaskComparer">
          <Members>
           <Member Name="Compare(System.Object,System.Object):System.Int32">
            <Messages>
             <Message Id="System.ArgumentException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>TaskComparer.Compare(Object, Object):Int32</Item>
               <Item>1</Item>
               <Item>ArgumentException..ctor(String)</Item>
               <Item>Impossible exception</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SchedulerDB">
          <Members>
           <Member Name="GetModuleInstance(System.Int32):Rainbow.Scheduler.ISchedulable">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerDB.GetModuleInstance(Int32):ISchedulable</Item>
              </Issue>
             </Message>
             <Message Id="Rainbow.Scheduler.SchedulerException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerDB.GetModuleInstance(Int32):ISchedulable</Item>
               <Item>1</Item>
               <Item>SchedulerException..ctor(String)</Item>
               <Item>Module don't implement ISchedulable interface</Item>
              </Issue>
              <Issue>
               <Item>SchedulerDB.GetModuleInstance(Int32):ISchedulable</Item>
               <Item>1</Item>
               <Item>SchedulerException..ctor(String)</Item>
               <Item>Not assembly in database</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerDB.GetModuleInstance(Int32):ISchedulable</Item>
               <Item>System.String.Format(System.String,System.Object,System.Object)</Item>
               <Item>System.String.Format(System.IFormatProvider,System.String,System.Object[])</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="GetTasksByTarget(System.Int32):System.Data.IDataReader">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerDB.GetTasksByTarget(Int32):IDataReader</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="InsertTask(Rainbow.Scheduler.SchedulerTask):System.Int32">
            <Messages>
             <Message Id="System.Data.IDataParameter.get_Value" TypeName="AvoidCallsThatBoxValueTypes" Category="Microsoft.Performance" CheckId="CA1808" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerDB.InsertTask(SchedulerTask):Int32</Item>
               <Item>IDataParameter.get_Value():Object</Item>
               <Item>Int32</Item>
              </Issue>
             </Message>
             <Message Id="Rainbow.Scheduler.SchedulerException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerDB.InsertTask(SchedulerTask):Int32</Item>
               <Item>1</Item>
               <Item>SchedulerException..ctor(String)</Item>
               <Item>Cannot schedule an expired task</Item>
              </Issue>
              <Issue>
               <Item>SchedulerDB.InsertTask(SchedulerTask):Int32</Item>
               <Item>1</Item>
               <Item>SchedulerException..ctor(String)</Item>
               <Item>Task add fail in DB</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SchedulerException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2004-12-24 20:19:51Z">
            <Issue>
             <Item>protected SchedulerException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue>
             <Item>public SchedulerException(String)</Item>
            </Issue>
            <Issue>
             <Item>public SchedulerException(String, Exception)</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="SchedulerTask">
          <Members>
           <Member Name=".ctor(System.Data.IDataReader)">
            <Messages>
             <Message Id="System.Data.IDataRecord.get_Item(System.String)" TypeName="AvoidCallsThatBoxValueTypes" Category="Microsoft.Performance" CheckId="CA1808" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerTask..ctor(IDataReader)</Item>
               <Item>IDataRecord.get_Item(String):Object</Item>
               <Item>DateTime</Item>
              </Issue>
              <Issue>
               <Item>SchedulerTask..ctor(IDataReader)</Item>
               <Item>IDataRecord.get_Item(String):Object</Item>
               <Item>Int32</Item>
              </Issue>
              <Issue>
               <Item>SchedulerTask..ctor(IDataReader)</Item>
               <Item>IDataRecord.get_Item(String):Object</Item>
               <Item>Int32</Item>
              </Issue>
              <Issue>
               <Item>SchedulerTask..ctor(IDataReader)</Item>
               <Item>IDataRecord.get_Item(String):Object</Item>
               <Item>Int32</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name=".ctor(System.Int32,System.Int32,System.DateTime,System.Object)">
            <Messages>
             <Message Id="System.Exception.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerTask..ctor(Int32, Int32, DateTime, Object)</Item>
               <Item>1</Item>
               <Item>Exception..ctor(String)</Item>
               <Item>argument parameter must be a serializable type</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name=".ctor(System.Int32,System.Int32,System.DateTime,System.String,System.Object)">
            <Messages>
             <Message Id="System.Exception.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SchedulerTask..ctor(Int32, Int32, DateTime, String, Object)</Item>
               <Item>1</Item>
               <Item>Exception..ctor(String)</Item>
               <Item>argument parameter must be a serializable type</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Argument">
            <Accessors>
             <Accessor Name="set_Argument(System.Object):System.Void">
              <Messages>
               <Message Id="System.Exception.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
                <Issue>
                 <Item>SchedulerTask.set_Argument(Object):Void</Item>
                 <Item>1</Item>
                 <Item>Exception..ctor(String)</Item>
                 <Item>argument parameter must be a serializable type</Item>
                </Issue>
               </Message>
               <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2004-12-24 20:19:51Z">
                <Issue Name="TooGeneric">
                 <Item>SchedulerTask.set_Argument(Object):Void</Item>
                 <Item>System.Exception</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="IDModuleOwner">
            <Messages>
             <Message TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:19:51Z">
              <Issue Name="MemberId">
               <Item>SchedulerTask.IDModuleOwner:Int32</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="IDModuleTarget">
            <Messages>
             <Message TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:19:51Z">
              <Issue Name="MemberId">
               <Item>SchedulerTask.IDModuleTarget:Int32</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="IDTask">
            <Messages>
             <Message TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:19:51Z">
              <Issue Name="MemberId">
               <Item>SchedulerTask.IDTask:Int32</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SimpleScheduler">
          <Members>
           <Member Name="ExecuteTask(Rainbow.Scheduler.SchedulerTask):System.Void">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SimpleScheduler.ExecuteTask(SchedulerTask):Void</Item>
              </Issue>
              <Issue>
               <Item>SimpleScheduler.ExecuteTask(SchedulerTask):Void</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SimpleScheduler.ExecuteTask(SchedulerTask):Void</Item>
               <Item>System.Object</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="InsertTask(Rainbow.Scheduler.SchedulerTask):Rainbow.Scheduler.SchedulerTask">
            <Messages>
             <Message Id="Rainbow.Scheduler.SchedulerException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SimpleScheduler.InsertTask(SchedulerTask):SchedulerTask</Item>
               <Item>1</Item>
               <Item>SchedulerException..ctor(String)</Item>
               <Item>Could not insert an inserted task</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="localPeriod">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2004-12-24 20:52:48Z">
              <Issue>
               <Item>localPeriod</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="localTimerState">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2004-12-24 20:52:48Z">
              <Issue>
               <Item>localTimerState</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Schedule(System.Object):System.Void">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>SimpleScheduler.Schedule(Object):Void</Item>
               <Item>System.Object</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SimpleScheduler+TimerState">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2004-12-24 20:19:51Z">
            <Issue>
             <Item>Rainbow.Scheduler.SimpleScheduler+TimerState</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="Counter">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>Counter</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Timer">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2004-12-24 20:19:51Z">
              <Issue>
               <Item>Timer</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\Rainbow.Settings\bin\Debug\Rainbow.Settings.dll">
    <Modules>
     <Module Name="rainbow.settings.dll">
      <Namespaces>
       <Namespace Name="Rainbow.Settings">
        <Types>
         <Type Name="Path">
          <Members>
           <Member Name="WebPathCombine(System.String[]):System.String">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2004-12-24 20:08:02Z">
              <Issue Name="Reserved">
               <Item>Path.WebPathCombine(String[]):String</Item>
               <Item>System.NullReferenceException</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Portal">
          <Members>
           <Member Name="connectionString">
            <Messages>
             <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>connectionString</Item>
               <Item>server=localhost;database=Rainbow;uid=sa;pwd=</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="enableMultiDbSupport">
            <Messages>
             <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>enableMultiDbSupport</Item>
               <Item>0</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="smtpServer">
            <Messages>
             <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>smtpServer</Item>
               <Item>&lt;Unknown&gt;</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="UniqueID">
            <Messages>
             <Message TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="MemberId">
               <Item>Portal.UniqueID:String</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Rainbow.Settings.Cache">
        <Types>
         <Type Name="CurrentCache">
          <Members>
           <Member Name="RemoveAll(System.String):System.Void">
            <Messages>
             <Message Id="System.Collections.IEnumerator.get_Current" TypeName="AvoidCallsThatBoxValueTypes" Category="Microsoft.Performance" CheckId="CA1808" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>CurrentCache.RemoveAll(String):Void</Item>
               <Item>IEnumerator.get_Current():Object</Item>
               <Item>DictionaryEntry</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Key">
          <Members>
           <Member Name="ModuleSettings(System.Int32):System.String">
            <Messages>
             <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>moduleID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>Key.ModuleSettings(Int32):String</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="TabNavigationSettings(System.Int32,System.String):System.String">
            <Messages>
             <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>tabID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>Key.TabNavigationSettings(Int32, String):String</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="TabSettings(System.Int32):System.String">
            <Messages>
             <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2004-12-24 20:08:02Z">
              <Issue Name="ParameterId">
               <Item>ID</Item>
               <Item>tabID</Item>
               <Item>Id</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>Key.TabSettings(Int32):String</Item>
               <Item>System.Int32.ToString</Item>
               <Item>System.Int32.ToString(System.IFormatProvider)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\RewriteRules.Rainbow\bin\Debug\RewriteRules.Rainbow.dll">
    <Modules>
     <Module Name="rewriterules.rainbow.dll">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2004-12-24 20:08:02Z">
        <Issue Name="NoStrongName">
         <Item>RewriteRules.Rainbow</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="RewriteRules.Rainbow">
        <Types>
         <Type Name="DefaultRule">
          <Members>
           <Member Name="Execute(System.Web.HttpApplication,System.String,System.String):System.String">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>DefaultRule.Execute(HttpApplication, String, String):String</Item>
               <Item>System.String.ToLower</Item>
               <Item>System.String.ToLower(System.Globalization.CultureInfo)</Item>
              </Issue>
              <Issue>
               <Item>DefaultRule.Execute(HttpApplication, String, String):String</Item>
               <Item>System.String.ToLower</Item>
               <Item>System.String.ToLower(System.Globalization.CultureInfo)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LegacyRule">
          <Members>
           <Member Name="Execute(System.Web.HttpApplication,System.String,System.String):System.String">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2004-12-24 20:08:02Z">
              <Issue>
               <Item>LegacyRule.Execute(HttpApplication, String, String):String</Item>
               <Item>System.String.ToLower</Item>
               <Item>System.String.ToLower(System.Globalization.CultureInfo)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="C:\DevelopmentData\Projects\Rainbow Portal\Extensions\XHTMLHTTPModule\bin\Debug\XHTMLHTTPModule.dll">
    <Modules>
     <Module Name="xhtmlhttpmodule.dll">
      <Namespaces>
       <Namespace Name="AspNetResources.Web">
        <Types>
         <Type Name="PageFilterStream">
          <Members>
           <Member Name="Write(System.Byte[],System.Int32,System.Int32):System.Void">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2004-12-24 20:25:31Z">
              <Issue>
               <Item>PageFilterStream.Write(Byte[], Int32, Int32):Void</Item>
               <Item>System.Object</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XHTMLHTTPModule">
          <Messages>
           <Message TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Created="2004-12-24 20:25:31Z">
            <Issue Name="Type">
             <Item>XHTMLHTTPModule</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Name>Assemblies should have valid strong names</Name>
    <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
    <Resolution Name="NoStrongName">Sign '{0}' with a strong name key.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/AssembliesShouldHaveValidStrongNames.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">CriticalError</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="AvoidCallsThatBoxValueTypes" Category="Microsoft.Performance" CheckId="CA1808">
    <Name>Avoid calls that box value types</Name>
    <Description>Weakly typed methods that return value types results in boxing. Prefer calling a strongly-typed version of the method, if it is available.</Description>
    <Resolution Name="Default">{0} calls {1}, a weakly-typed method, and unboxes the result as {2}, a value type.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/AvoidCallsThatBoxValueTypes.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="90">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Name>Avoid namespaces with few types</Name>
    <Description>A namespace should generally have more than five types.</Description>
    <Resolution Name="Default">Consider merging the types defined in  '{0}' with another namespace.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/AvoidNamespacesWithFewTypes.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="50">Warning</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
    <Name>Avoid uncalled private code</Name>
    <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the FxCop team.</Description>
    <Resolution Name="Default">'{0}' appears to have no upstream public or protected callers.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/AvoidUncalledPrivateCode.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
    <Name>Avoid uninstantiated internal classes</Name>
    <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
    <Resolution Name="Default">'{0}' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/AvoidUninstantiatedInternalClasses.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="AvoidUnusedParameters" Category="Microsoft.Performance" CheckId="CA1801">
    <Name>Avoid unused parameters</Name>
    <Description>Avoid declaring parameters that are not used in the method body. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
    <Resolution Name="Default">Parameter '{0}' of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
    <Resolution Name="MarkAsStatic">The 'this' parameter (or 'Me' in VB) of {0} is never used. Mark the method as static (or Shared in VB) or use 'this'/Me in the method body.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/AvoidUnusedParameters.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102">
    <Name>Catch non-CLSCompliant exceptions in general handlers</Name>
    <Description>Exception handlers which are truly intended to catch all exceptions should handle non-CLSCompliant exceptions if there is a possibility one can be raised. If possible, catch handlers should only catch specific exceptions or exception base types. In circumstances where a handler is required to catch all exceptions (e.g., when a try block wraps arbitrary plug-in code), the handler should also include a generic catch handler (in C#, catch{ ... }) to handle non-CLSCompliant exceptions. It is possible to raise non-CLSCompliant exceptions by modifying and recompiling IL.</Description>
    <Resolution Name="Default">{0} contains a catch(Exception) handler that is not matched with a generic catch clause (catch{{}} in C#, catch(System::Object*){{}} in mc++) for non-CLSCompliant exception. Eliminate the catch(Exception) clause by catching a specific set of Exceptions or add a generic catch (catch() in C#) that duplicates the code contained within the catch(Exception) handler.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Security/CatchNonClsCompliantExceptionsInGeneralHandlers.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="80">Error</MessageLevel>
    <File Name="SecurityRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Name>Do not catch Exceptions or SystemExceptions</Name>
    <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
    <Resolution Name="Default">Modify '{0}' to catch a more specific exception than '{1}' or rethrow the exception.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/DoNotCatchGeneralExceptionTypes.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">CriticalError</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
    <Name>Do not declare visible instance fields</Name>
    <Description>Public or protected instance fields limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the  implementation details of the underlying data.</Description>
    <Resolution Name="Default">Make '{0}' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/DoNotDeclareVisibleInstanceFields.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="90">Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303">
    <Name>Do not pass literals as localized parameters</Name>
    <Description>String literals that are embedded in source code are difficult to localize. Avoid passing string literals as arguments in circumstances where a localized string is generally expected. Most localized applications, for example, should localize string arguments that are passed to exception constructors. When creating an Exception instance, therefore, a string argument retrieved from a string table is more appropriate than a string literal.</Description>
    <Resolution Name="Default">{0} passes a literal as parameter {1} of a call to {2}. Retrieve the following string argument from a resource table instead: '{3}'</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Globalization/DoNotPassLiteralsAsLocalizedParameters.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="GlobalizationRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
    <Name>Do not pass types by reference</Name>
    <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
    <Resolution Name="Default">Consider a design that does not require that '{0}' be a reference parameter.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/DoNotPassTypesByReference.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Name>Do not raise reserved exception types</Name>
    <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
    <Resolution Name="Reserved">{0} creates an exception of type '{1}', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Resolution>
    <Resolution Name="TooGeneric">{0} creates an exception of type '{1}', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Usage/DoNotRaiseReservedExceptionTypes.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="UsageRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Name>Identifiers should be spelled correctly</Name>
    <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
    <Resolution Name="Parameter">In {0}, correct the spelling of the unrecognized token '{1}' in parameter name '{2}' or strip it entirely if it represents any sort of hungarian notation.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Naming/IdentifiersShouldBeSpelledCorrectly.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
    <File Name="NamingRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
    <Name>Identifiers should not contain underscores</Name>
    <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
    <Resolution Name="Member">Remove all underscores from member '{0}'.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Naming/IdentifiersShouldNotContainUnderscores.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="NamingRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
    <Name>Implement standard exception constructors</Name>
    <Description>Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</Description>
    <Resolution Name="Default">Add the following constructor to this class: {0}</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/ImplementStandardExceptionConstructors.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Name>Initialize reference type static fields inline</Name>
    <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/InitializeReferenceTypeStaticFieldsInline.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="LiteralsShouldBeSpelledCorrectly" Category="Microsoft.Usage" CheckId="CA2204">
    <Name>Literals should be spelled correctly</Name>
    <Description>Literals should consist of correctly spelled words.</Description>
    <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Usage/LiteralsShouldBeSpelledCorrectly.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="85">Error</MessageLevel>
    <File Name="UsageRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705">
    <Name>Long acronyms should be pascal-cased</Name>
    <Description>Acronyms of three or more letters should be Pascal-cased. For example, use XmlSpace rather than XMLSpace. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
    <Resolution Name="Type">Correct the capitalization of type name '{0}'.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Naming/LongAcronymsShouldBePascalCased.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="85">Error</MessageLevel>
    <File Name="NamingRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027">
    <Name>Mark enums with FlagsAttribute</Name>
    <Description>The enumeration appears to be made up of combinable flags. If this true, apply the Flags attribute to the enumeration.</Description>
    <Resolution Name="Default">Add FlagsAttribute to the '{0}' enumeration.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/MarkEnumsWithFlags.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059">
    <Name>Members should not expose certain concrete types</Name>
    <Description>Members should not expose certain concrete types.</Description>
    <Resolution Name="System.Xml.XmlNode">Modify member '{0}' so that it no longer exposes the concrete type {1}. Use IXPathNavigable to represent Xml data sources.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/MembersShouldNotExposeCertainConcreteTypes.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
    <Name>Nested types should not be visible</Name>
    <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
    <Resolution Name="Default">Do not nest type '{0}' or change its accessibility so that it is not externally visible.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/NestedTypesShouldNotBeVisible.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="90">Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706">
    <Name>Short acronyms should be uppercase</Name>
    <Description>Two letter acronyms should be upper-cased. For example, use System.IO instead of System.Io. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
    <Resolution Name="MemberId">'Id' is an abbreviation, not an acronym, and is not subject to this rule. Correct the capitalization of 'ID' in member name '{0}' by changing it to 'Id'.</Resolution>
    <Resolution Name="ParameterId">'Id' is an abbreviation, not an acronym, and is not subject to this rule. Correct the capitalization of '{0}' in parameter name '{1}' by changing it to '{2}'.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Naming/ShortAcronymsShouldBeUppercase.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="85">Error</MessageLevel>
    <File Name="NamingRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
    <Name>Specify CultureInfo</Name>
    <Description>If an overload exists that takes a System.Globalization.CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture.</Description>
    <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide a CultureInfo. This should be replaced with a call to {2}.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Globalization/SpecifyCultureInfo.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="GlobalizationRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Name>Specify IFormatProvider</Name>
    <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the common language runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture.</Description>
    <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide an IFormatProvider. This should be replaced with a call to {2}.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Globalization/SpecifyIFormatProvider.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Error</MessageLevel>
    <File Name="GlobalizationRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
    <Name>Test for empty strings using string length</Name>
    <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
    <Resolution Name="Default">Replace the call to String.{0}({1}) in '{2}' with a check for non-null and Length == 0.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/TestForEmptyStringsUsingStringLength.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
    <Name>Uri parameters should not be strings</Name>
    <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as Uri.</Description>
    <Resolution Name="Default">Change the type of parameter '{0}' of method {1} from string to System.Uri, or provide an overload of {1}, that allows '{0}' to be passed as a System.Uri object.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/UriParametersShouldNotBeStrings.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="60">Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
    <Name>Uri return values should not be strings</Name>
    <Description>If a function name contains "uri" or "url" or "urn" and the return type is string, the return type should be changed to System.Uri.</Description>
    <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Design/UriReturnValuesShouldNotBeStrings.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="60">Error</MessageLevel>
    <File Name="DesignRules.dll" Version="1.312.0.0" />
   </Rule>
   <Rule TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802">
    <Name>Use literals where appropriate</Name>
    <Description>Prefer literals over InitOnly fields if values do not have to be calculated at runtime.</Description>
    <Resolution Name="Default">Field '{0}' is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.</Resolution>
    <Owner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules.aspx?version=1.312&amp;&amp;url=/Performance/UseLiteralsWhereAppropriate.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <File Name="PerformanceRules.dll" Version="1.312.0.0" />
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
